many belief network quantify know many quantify population population size matter need population necessarily individually know fact want treat combining unification elimination needing ground belief network bayesian network pearl independency amongst make property node lift belief network tradition breese horsch poole wellman breese goldman allowed parameterized belief network grounded tradition poole koller pfeffer pfeffer koller milch takusagawa allowed richer probabilistic belief network case assumed know many case want like avoid explicit reasoning separately great proving invention resolution unification robinson resolution clause free potentially unbounded resolution grounded goal work probabilistic reasoning probabilistic reasoning challenging reasoning probabilistic inference conclusion want double evidence probabilistic fred reuse fred case size domain affect probability determining probability person guilty crime population population size affect guilty show need know well know show need population size person town seen committing crime person unusual hair colour colour purple person tall know foot tall correlated foot probability guilty need probability dependence lead belief network probability guilty also population population town probably guilty unlikely anyone else fitting town city containing probably innocent expect many also feature ignored probabilistic need take population size need able know well know know anything ground million city separately also ignore relevant know something probabilistic inference domain parametrized belief network node parametrized type population idea explored previously poole kersting raedt plate buntine dwell semantics mean grounding substitution domain parameter bayesian term probability halpern probability degree belief statistical assertion proportion population quantifying bacchus universal quantification probability property computationally built tradition namely proving side probabilistic reasoning side unfortunately term domain used avoid confusion neutral term tradition population population corresponds domain cardinality population population size population living vancouver population size million population size finite infinite parametrized parameter case letter lowercase letter parameter correspond prolog parameter typed population parametrized form functor parameter functor functor parametrized hair colour like like townjeonservativeness latter functor hairjcolour like townjeonservativeness functors assignment parameter parametrized represents hair colour black blond grey purple orange none multicoloured hair colour domain black blond grey purple orange none multicoloured thus parametrized represents parameter assignment parameter assignment parametrized hair colour jred hairjcolour parametrized primitive form mean parametrized parametrized built parametrized primitive normal robbing parametrized belief network plate parametrized connective probabilistic assertion form parameter population parametrized parameter specifies probability distribution omit syntactic construct parametrized belief network node parametrized association population parameter assignment functor probability assertion node parent formalize parametrized belief network buntine well parametrized depend conservative town network probabilistic assertion knew background purple hair probability replace last probabilistic assertion hair colour conservative plate help real probabilistic assertion plate difficult interpret parameter interpret probabilistic assertion hair colour continuing grounding parametrized belief network belief network parametrized parameter replaced population ground term denoting intuitively parametrized belief network represents huge belief network parametrized repeated population parameter true belief network node elimination parametrized belief network possibly parametrized probability evidence existentially quantified parametrized primitive parametric probabilistic inference parameter parent node also node case ground parent case parent extra parameter case need aggregate population also considers existential elimination poole eliminate nonquery time fove eliminate functor relationship work lifting proving chang ground procedure construct procedure case parametrized correctness proving answer grounded carried elimination parametric unit data used computation real probability main operation multiplying summing conditioning summing extract probability remaining multiplying normalizing remaining elimination want treat many fove answer grounded carried elimination unit instantiate parameter need know extra unit parametric parfactor triple parameter parametrized representing real intuitively parametric represents ground instantiation parameter satisfies parametric represents probability represents hair colour conservativeness indexed look like hairjcolour conservativenes purple purple blue blue conservative liberal conservative liberal parametrized case need mark distinguish person friend like like distinct case case friend parent case friend parent subscript likesn like friend likesi likesi eliminate like relationship like splitting foundation parametric elimination splitting operation splitting play analogous role applying substitution proving concerned also left probabilistic inference parametric parameter parameter parametric replacing substitute parametric residual parametric substitution form distinct term substitution normal form substitution resulting unification normal form chang substitution normal form replacing sequentially parallel applying substitution normal proving need idea applying substitution parfactor restricts ground need parfactor need renaming substituting parfactor parfactor substitution totally ordering carrying procedure final residual parfactors note final substitution also residual close relationship splitting equality splitting contextual elimination fpoole observe ground analogous operation onto must affect ground fact purple hair purple shoe size separately treated parametric parametric multiplying parametric eliminate multiply resultant elimination need multiply eliminated parametric elimination parametric need multiplied also dimension resulting parametric parametric intuitively keep splitting parametric renaming parameter parametric grounded ground multiply determining parfactors multiply parfactors renamed wherepi unifiable eliminated putting residual parfactors resulting parfactors multiplied show need multiplying parfactors meant meaningful eliminate multiply parametric ground parameter multiplied unification find identical resulting substitution parametric residual parametric parametric ever need multiplied parametric eliminating participate resulting parametric residual participate elimination multiplied eliminating elimination determining dimensionality parametric multiplied ground parametric dimension need splitting form parametric parfactors need multiplied identical incompatible know dimension identical unify consistent resulting residual identical multiply know dimension parfactor maintain dimension thus treated unify even functor treated need parfactors unify unifier thus parametric rename replacing multiply parametric producing parametric represents dimension four multiplying parametric also multiply parametric producing abelled labelled thus parametric represents dimension five multiplying parametric seem complicated remember parametric represents population size even multiplied parfactors eliminated must remember eliminating eliminating eliminating population size parameter parametrized eliminated grounding multiplying population size parameter population size population parameter excluded thus take population size aggregation population parameter parent node node parent grows population size need node parent many possibility node parent parent parent true parent true vote parent voting scheme majority poole give arbitrary associative commutative operator parent make presentation simpler operator diez galan straightforward poole extend operator probabilistic inference transform form parent eliminate multiply compatible clause eliminate accumulate probability diez galan poole free perhaps parameter case need population size population size determining population size free parameter subtracting excluded population population size population size multiplying population free parameter population size contributes probability probability false probability true population size countably infinite probability true dependent ancestor grounding descendent eliminating around ancestor ancestor parameter make sure eliminate eliminate ancestor ancestor assumes independence effectively ancestor know ancestor existential conditioning fact someone guilty need construct resulting node well observing shoe size also person guilty height depicted want guilty shoe size witness instantiate witness case eliminate townjconservativeness guilty descn witness parametric conservativeness robbing witness parametric conservativeness witness parametric probability guilty normalising computation leaving population parameter probability guilty ftmction population look like graph linear exponential townjoonservativeness exponential distribution conclusion made main contribution inference population grounding unification well unifiers also need take residual idea need take population size aggregation population part handle existential know someone know extends inference bayesian network pfeffer reasoning probability guilty population generic corresponds reasoning free parameter unification contradicts pessimistic conclusion worst case effectively ground many case much much save practice open open good elimination ordering eliminate functor utilize rule term diez galdn independency poole splitting much closer work contextual independence poole interested combining work richer poole much come mixing contextual independence free recursion also think combining mcmc pasula russell straightforward representing unit dependent separately acknowledgement work nserc grant robotics intelligent system thanks valerie mcrae mark paskin valuable comment
