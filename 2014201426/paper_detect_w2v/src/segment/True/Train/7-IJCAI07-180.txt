system continue need becoming urgent server partitioned subsystem repartitioned becoming raise possibility reconfiguring distributed system optimize dynamically changing workload also introduces need decide reconfigure reconfiguration learn identify system statistic configuration lead unknown workload instrumentation system middleware operating system agent able learn switch configuration workload varies agent tested publicly distributed system transaction processing benchmark demonstrate adaptive configuration able outperform fixed configuration workload gradual abrupt workload spike partitionable server enabled adaptive hardware reconfiguration processor memory removed system incurring downtime even processor system flexibility operation system also raise system reconfigured establishes automated adaptive hardware reconfiguration significantly system workload vary wildstrom autonomous reconfiguration memory resource work showed configuration optimal workload introduced learning system statistic configuration workload observing workload work indicated reconfiguration best established hardware reconfiguration actually practice demonstrates increased performancefor transaction processing system learned reconfigures system hardware train robust performanceof hardware configuration guide reconfiguration agent show agent able make tested workload static configuration remainder next give testbed handling unexpected workload training agent used test agent implication give work concludes testbed system server partitioning subsystem commercially quintero memory processor enabling machine prevented interfering resource contention server highly flexible quantity memory processing resource well supporting removal resource operating system hardware also partitioning little processor hosting system quintero reconfigurable hardware reported simulates reconfiguration remainder give testbed brief benchmark modification testbed package hardware simulation partitioning reconfiguration explained tuning agent testbed system wildstrom standardized benchmark transaction processing council dictate instantiation bookstore dynamically page user interface page divided browsing eight ordering page relative system test machine remote browser emulator rbes emulated browser user site browsing searching placing user workload shopping browsing ordering page requested specification defines respective probability next page ratio browsing ordering page relative percentage summarized browsing shopping ordering browsing page ordering page access percentage page tpcw specified garcia garcia benchmark measuring throughput system allowed warm throughput wips page request returning many system publish heterogeneous machine simplicity work considers database server server illustration throughputof relatively system reported significantly commercially built system substantial resource throughput unexpected system specification strict restriction facet system page promotional item displayed item time page relax machine used item cached reused page desiring promotional item time modified specification wildstrom specification modified intention overwhelm system specification prevent happening nonetheless convenient generating realistic workload must module part database server server used work postgresql database apache jakarta tomcat server java code used server dynamic page generationand database derivedfrom freely wisconsin pharm cain slight modification made code tomcat postgresql caching data connection database numberof connectionsis controlledthrougha java semaphore fairness enabled connection allowed reconfigurable resource administrative servlet modified connection timeouts treated fatal retried also benchmark hardware hardware used work identical dell system processor gigabit ethernet switch network system gigabit ethernet interface show machine used frontand system machine host tuning agent true reconfigurable system tuning agent reside inside partitionable system system practice system physically machine meant reconfigurable system processing simulate partitioning system memory artificially constrained machine constrained highly favored periodic process memory constrained linux mlock subroutine system full processor memory used combined backends allowed constraining process simultaneously simulation desired hardware configuration additionally process system simulate reconfiguring system never exceed combined system resource must constrain losing resource granting resource tuning agent tuning agent handle reconfiguration phase reconfiguration allowed database connection modified completes resource moved constrained machine losing memory removed donor system receiving system step completes next begun type tuning agent simulate omniscient agent told configuration switch reconfiguration perfect omniscient agent used configuration maximizes system thus optimalperformanceagainst agent make alter configuration rule learned agent learned system statistic predict configuration learned tuning agent handling workload provisioning resource system predictable workload fairly oslake static configuration poorly workload phenomenon slashdot site inundated traffic featured news site site configured normal workload ordering shopping user unexpected browsing user appearing overwhelm site prepared unexpected workload call workload spike drastic workload gradually also must handled appropriately unfortunately practice workload observable quantity system instrument system help observe part workload customizing middleware work wildstrom operating system statistic used help suggest configuration used requiring customized instrumentation easy part system needing reimplementation statistic also refer workload feature generalize workload lowlevel statistic preference customized instrumentation operating system middleware training learning agent automatically handle workload train predict target configuration system statistic resource collect statistic machine vmstat command system statistic assumed true automatic reconfigurable system supply statistic interface command allowed take precedence constraining process vmstat statistic concerning process quantity concerning memory swapping system interrupt switch make memory statistic converted percentage resulting vector statistic well configuration system comprise trained predicts configuration throughput agent framework reconfigures system accordingly system configuration resource memory connection wide memory connection investigated configuration maximize throughput connection hardware resource keep database becoming overwhelmed browsing database webserver config browsing ordering configuration resource distribution database connection allowed used acquire training data pair varied tpcw done pair workload configuration workload shopping user browsing ordering user pair time followed vmstat data also collected wips system statistic gathered training data pair system statistic divided system statistic data next configuration throughput wips preferred configuration data pair pair generates data training data weka witten frank package many machine learning build used prediction jrip cohen rule learner training data data jrip learned rule seen jrip determines rule used identify optimal configuration unobserved workload supplied system statistic evenly machine statistic used time memory statistic sample statistic area also note rule mean identifying configuration configuration default look rule identify rule rule threshold time spent database waiting rule percentage memory database indicator memory configuration memory constrained database file paged time spent waiting page read back wildstrom learned jrip rule stratified cross validation prevent contamination sample appearing training test done hand partitioning training data trial used distinct test training remaining test jrip predicts target configuration time facet rule learned rule make sense distributed system rule system process distributed mathematical system expect rule learned system system training rule benefit learning remove need explore possibly relevant feature threshold manually evaluating learned type workload gradual workload spike concentrate workload spike sudden workload gradual simplicity simulation browsing spike ordering spike simulated fashion base workload shopping user ordering user workload reach steady time time workload abruptly browsing intensive workload browsing user replacing ordering user spike continues time workload abruptly reverts ordering intensive workload ordering user also simulate gradual workload shopping user browsing user time time browsing user converted ordering repeat user ordering continues workload tested hardware configuration baseline static configuration execute workload additionally know spike take test optimal configuration omniscient agent gradual configuration optimal force omniscient agent reconfigure system learning agent allowed control configuration agent continuously sample system statistic predicts optimal configuration sliding window system statistic configuration chance beneficial made configuration agent sleep system statistic reflect configuration learning agent spike workload workload half browsing spike half ordering spike workload time static configuration well learning agent makingconfiguration omniscient agent forcing optimal hardware configuration wips workload student significance confidence noted learning agent well significantly outperforming static configuration trial outperforming static configuration adaptive agent highest throughput case adaptive agent wips static configuration configuration spike type adapt browsing ordering omnisc ordering browsing jrip rule learned weka wips configuration spike workload agent never loses significantly static configuration well static configuration learning agent even omniscient agent ordering spike test adaptive agent worse wips omniscient agent actually showing throughput throughput four configuration ordering spike seen wips throughput configuration ordering spike averaged graph bottom show many learning agent configuration time averaged adaptive graph handling browsing spike agent consistently exceeds throughput static configuration well static configuration test agent actually significantly configuration agent room ordering spike test learning agent wips omniscient agent many trial sudden anomalous drop throughput approximately browsing omniscient configuration drop sometimes confuse agent believe confusion abnormal database anomaly anomaly work eliminate anomaly spike test gradual workload agent capable handling gradual throughput wips learning agent handle gradual gracefully winning throughput wips also room omniscient agent switch configuration user browsing ordering workload significantly outperforms learning agent throughput wips automatic reconfiguration hardware definite benefit static hardware configuration wide tested workload apparent adaptive agent static configuration agent room omniscient agent omniscience realistic goal additionally rule learned agent apparent deciding alter configuration trivial work adaptive tuning hardware reconfiguration address much work done thus deal maintaining service agreement work relevant cited fundamentally investigating formal compliance review work reported load quintero handle automatic reallocation resource extensively configurable term threshold resource must strictly rule threshold learns threshold invoke reallocation menasce parameter thread connection allowed suggest extensible hardware tuning constructing mathematical system workload work treat system black workload unobservable quantity karlsson covell system estimating considering system black recursive intention used part regulator help meet goal latency close exceeding maximizing urgaonkar queuing assist provisioning internet handle distinct server tier assumes unused machine provisioning oneserver tier fixed processing norris address competition resource datacenter task rent resource excess resource frame tuning competitive task task cohen clustering categorizing lowlevel statistic identify summarizing system work geared toward simplifying diagnosis work work toward automatically correcting conclusion rapid reconfigurable server used server distributed server receive hardware resource workload efficiently demonstrate agent tailor hardware workload work main contribution automatic reconfiguration system hardware show static allocation resource agent trained domain applicable operating system middleware workload ongoing agenda work learning agent optimal well investigation workload also want predict benefit reconfiguration simulated reconfigurable machine true reconfigurable hardware acknowledgment thank mooney rest cognitive system valuable throughout helpful critique part career award darpa acip grant faculty award
