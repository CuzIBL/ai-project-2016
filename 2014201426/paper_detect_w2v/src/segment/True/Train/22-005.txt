represents beginning parallel truth maintenance system interact parallel inference engine assignment parallel belief node maintenance system doyle doyle examine previously petrie fails termination assignment petrie termination undetected circumstance namely existence unsatisfiable circularity false corrects major facing computation time inferencing mean base impossible practical fast predictable response time realtime system parallel hope assignment parallel belief node maintenance system doyle doyle petrie describes incomplete parallel diffusing computation dijkstra scholten background brief termination diffusing computation dijkstra scholten doyle give petrie parallel giving assignment belief node show lead incorrect termination mcdonnell aircraft company diffusing computation diffusing computation system consisting node processor able communicate link existence node incoming link call node root node node initially node neutral diffusing computation sends message successor node message message sent neutral node receives message engaged send message successor node time neutral node neutral send message node neutral engaged back time computation diffusing computation terminated node reached neutral computation finite message sent node restriction computation eventually terminate able tell diffusing computation terminated termination signaling system superimposed diffusing computation signalled computation completed signaling restricted moment computation time signaled link carried many message carried signal signalling system obeys rule rule neutral node receives message engaged remembers identity engager rule engaged node neutral sends signal engager rule engaged node neutral sent signal message signal message caused engaged sent last implied rule rule engaged node neutral signal message sent rule concluded dijkstra scholten time directed path engaged node edge engagers engaged node step diffusing computation terminated returned neutral returned neutral diffusing computation terminated review doyle used inference engine maintain consistent belief inference inference passed creates node belief maintains dependency belief node label mean node believed true label mean truth node node believed true node justification justification inset outset inset node must believed node labeled outset node must believed node labeled justification node inset labeled node outset labeled justification node justification node labeled node labeled consequence node node mention justification supporter node node used node node inlist outlistof supporting justification pick node justification justification form node node node inlist node outlist justification ancestor node formed taking transitive closure node node petrie diffusing take supplied dijkstra scholten diffusing computation petrie considering node processor justification directed antecedent consequence consequence rule justification circle incoming antecedent outgoing consequence plus next antecedent antecedent minus antecedent diffusing computation used give assignment node labeling doyle petrie admits computation incomplete sense doyle incomplete unsatisfiable circularity introduced network justification turn creates graph consistent assignment processor justification node message sent consequence signal sent antecedent justification belief node neutral node root diffusing computation entrance justification passed root node issuing sweep transitive closure consequence done diffusing computation sweep terminated diffusing computation begun assignment engager node receives message engager unchanged signal sent back predecessor message sent consequence node sends message consequence processor also reply sender message replied engaged message node assignment node reply engager normal circumstance receives reply consequence successor unsatisfiable circularity petrie proposes message antecedent node sends list ancestor consequence list antecedent sent consequent node ancestor list receives message signal trouble reply engager thus node petrie engaged node switch twice ancestor unsatisfiable circularity also fulcomer ball incorrect node petrie node incoming edge permit termination detected computation node incoming edge supporter transitive closure consequence receive incoming message false termination presence unsatisfiable circularity detecting unsatisfiable circularity petrie consequence signal trouble reply engager consequence ancestor list message consequence signal trouble engager violate rule regarding signalling engager signal must sent consequence neutral consequence sent signal message signal message sent even sending trouble signal legal sending signal make consequence neutral must send message transmit consequence message violate neutral node send message consequence engaged troubled node computing signaling trouble reply directed path consequence termination computation going thus falsely termination computation diffusing computation node send finite message petrie unsatisfiable circularity node forever changing sending message consequence petrie detects existence stop processing node also diffusing computation assignment mapping petrie node processor justification directed antecedent consequence term mean circular passing message term circularity cumbersome unsatisfiable circularity satisfied root node belief node responsible receiving justification passing message consequece justification computation belief node node node incoming justification head node node handling unsatisfiable circularity head node refer throughout dotted justification represents incoming justification head node node receives fiture sage antecedent engaged engager message form message type antecedent antecedent ancestor list list time receives message send message consequence label force list property force list parallel assignment computation node must extra parameter hold belief node beginning computation ancestor list hold node ancestor list list hold node detected force list hold previously detected unsatisfiable circularity signal wait list hold ordered pair form sent signal node engager list hold list sent send unsatisfiable pair signal back engager sweep message message type sweep engager sends message sweep time step engager save receipt message clear ancestor list make justification list invalidating justification antecedent justification previously sends message sweep consequence message signal back time consequence signaled unless receives message must signal sending signal never receive message type long engaged sweep message transitive closure consequence head node sending message type sweep label message label message sweep message type message sent node receives label message antecedent list sent pair cyclelist signal engager became neutral cyclelist list upon receiving label message time pair signal wait list form cyclelist list list empty handling circularity looked unsatisfiable computation actually satisfiable label propogated signal wait list signal engager signal engager signal wait list cleared list sent message must list force list sent message send message determines must send message message must list message consequence list ensures aware presence list force list list passed next message sent determines send message list passed case asks force list empty asking force list receipt message step ancestor list sent case message force list empty signal back time sender message obeying rule signaling send message consequents case message force list force list tell unsatisifiable circularity intersects force list consequence intersection consequence forced send force list empty case message must supporternodes ancestor sends ancestor list label message consequence force list empty consequence force list receive message anyway node ancestor list sent list ancestor list word time detected case send message consequents send message seeing case node unsatisfiable circularity must propagate consequents force list necessarily consequents case must circumstance list ancestor list sent list reset ancestor list preparation unsatisfiable circularity sends label message consequents detected list message consequence detected force list reset incoming node ancestor list sent list ancestor list case label message consequence unsatisfiable circularity removed list case engaged detected presence unsatisfiable circularity unsatisfiable circularity force list thus must send consequents force list send list message force list removed list case time forced unsatisfiable circularity move list list deleting list ordered pair send signal wait list send message consequence inconsistent upheld even force list message sent force list remains thus cease message passing around node fulcomer ball force list ensures node receives message unsatisfiable circularity detected node node detected circularity signal engager satisfied pair signal engager construct node think unsatisfiable circularity send signal delay message passing node petrie give dotted line represents incoming justification thus head node sends label message message passed around detects unsatisfiable circularity signal receive satisfying message delayed signal satisfying pair propagates back unsatisfiable circularity reset message final message node receive reset message reset message also empty type message instructs reset sweep message reset message sent unsatisfiable circularity detected graph assignment belief node leave responsibility head node presence circularity next leaving graph inconsistent labelings graph justification caused diffusing computation part computation incomplete labeling avoid step node receives reset message simply reset message consequents head node head node consequent incoming justification node engaged node head node node execute code diffusing computation justification head node justification supporternodes identified computation proceeds justification head node message head node initiate sweep message head node transitive closure consequence dotted line represents incoming justification show eventually head node receive signal back consequence sending sweep message signal head node initiate label message obvious node receives sweep message eventually receive label message head node label must justification sending label message entering justification became invalid head node assigns sends label message head node also node unsatisfiable circularity head node detects unsatisfiable circularity save list signal head node receives signal consequence pair propagated signal match pair pair list existence pair match pair mean unsatisfiable circularity node unmatched list circularity detected head node send reset message consequence eventually receive signal consequence signal engager termination unsatisfiable circularity detected reset message sending message consequents eventually signal engager correctness correctness parallel assignment fulcomer ball previously circularity assignment node circularity actually node supporter node detects ancestor list sent message antecedent node detector node detects node detector broken breaking node node outside node detects unsatisfiable circularity detector match broken ancestor list sent message antecedent must detector broken unsatisfiable circularity lemma lemma lemma detector unbroken lemma detector unbroken unsatisfiable circularity node detector unbroken unsatisfiable circularity lemma unsatisfiable circularity detected node force list lemma unsaiisfiable circularity node receives message node receive message lemma unsaiisfiable circularity detector node unless message resulting breaking lemma unsaiisfiable circularity detector node unsatisfiable circularity unless message resulting breaking lemma unsaiisfiable circularity detector breaking sending pair signal engager unsatisfiable circularity remains unbroken message passing circularity halt unsatisfiable circularity detector part detecting changing construction send message detected cease message sending none rule violated ceasing eventually enter neutral remains unsatisfiable broken message passing around rest computation lemma message passed eventually signal satisfied satisfiable rule maintained eventually reach neutral case hold bethe head node signal label message sent pair propagated head node pair propagated head node ultimately unsatisfiable match pair pair reached construction must node detected unsatisfiable circularity sent lemma message lemma node message thus node must inconsistency unsatisfiable circularity graph pair pair propagated head node unsatisfiable circularity overlapping sweep labeling show must show signal sweep message eventually reach head node label message sent sweep unsatisfiable circularity even stronger node node sweep message node obey rule head node receives signal sweep message sent node transitive closure consequence neutral overlapping labeling computation reset computation overlapping sweep reset computation reset compuiaiion head node receive signal reset message resulting termination diffusing computation conclusion none termination diffusing computation violated terminate locking justification sent simultaneously initiate diffusing computation handling contradiction parallel fulcomer ball acknowledgment thanks charles petrie initiation also like thank cics text
