computing leximinoptimal network highly motivated fairness many implying agent generic framework entirely partially work adapted many done year modeling combinatorial concern framework deal reasoning scheme preference soft date handle fairness multiagent combinatorial seek fairness stand subjective wide implying agent particularly relevant crew timetabling rostering optimization long planning fireman emergency service fairness also ubiquitous multiagent resource allocation like bandwidth allocation network user fair airspace airport resource airline earth observing satellite scheduling sharing lema spite wide concerned fairness lack generic many operational work fairness enforced heuristic guiding supposed equitable work cited fairness lema make earth satellite scheduling sharing investigate handling fairness agent satisfaction pesant regin statistic enforces relative balance possibly used kind equity agent equity also studied operational ogryczak sliwinski investigate linear aggregating criterion ordered operator yager used kind aggregator equitable compromise microeconomy social literature fairness collective background borrow idea representing agent preference utility adopt leximin preorder utility profile conveying fairness refinement maximin inclination fairness avoiding drowning fact conveys formalizes equity multiagent leximin preorder also subject fuzzy fargier satisfaction frisch contribution give background social justifies leximin preorder fairness criterion defines framework main contribution computing entirely adapted work tested system background social calligraphic letter stand vector arrow bracket used shortcut stand vector composed rearranged vector collective welfarism agent admissible alternative concerning benevolent arbitrator classical describing welfarism keeney raiffa moulin arbitrator made utility enjoyed agent agent utility admissible alternative make classical utility comparable thereforeeach alternative attached utility profile welfarism comparing alternative comparing respective utility profile utility profile aggregate collective utility standing collective welfare agent aggregation thus collective utility alternative collective utility optimal alternative maximizing collective utility leximin preorder fairness criterion main difficulty equitable reconcile contradictory wish agent satisfies everyone aggregation must lead fair compromise choosing aggregation scope classical opposite view social classical utilitarianism egalitarianism rule advocated defender classical utilitarianism best maximizes utility thus kind aggregation lead huge utility agent thus ruling aggregator equitable egalitarian view best maximizes happiness satisfied agent thus kind aggregation particularly forproblemsin fairness essential major drawback idempotency operator drowning fuzzy dubois fortemps leaf many alternative indistinguishable utility profile even word expressed utility scale strictly satisfaction agent unless strictly decrease satisfaction agent postulate collective compromise moulin page yager aggregator much word aggregation lead desirable leximin preorder refinement induced overcomes drawback classically introduced social literature moulin social welfare ordering reconcile egalitarianism also fuzzy fargier leximin preorder moulin vector said leximinindifferent leximin vector leximin leximin leximin binary preorder word leximin preorder lexicographic preorder ordered utility vector collective utility leximin unless utility profile finite latter case adapted leximin frisch moulin kind main drawback rapidly unreasonable hide semantics leximin preorder hinders computational benefit possibly take leximin preorder criterion ensuring fairness seeking sense leximin preorder leximinoptimal expressed next framework framework flexible tool modeling many combinatorial planning scheduling resource allocation configuration paradigm network montanari network uppercase letter domain specifies allowed tuples make domain instantiation domain instantiation said instantiation restriction instantiation instantiation said consistent satisfies consistent instantiation network also instantiation replaced network determining satisfaction classically adapted optimization network find subset maximize expressing collective collective utility criterion straightforward collective utility link representing utility encode computing kind multicriteria optimization formally maxleximincsp maxleximincsp network vector vector inconsistent lution next generic entirely work adapted cardinality combinator computation vector computes maximal word satisfied fixed computes maximal maximal enforce make atleast derived cardinality combinator introduced hentenryck system atleast atleast hold scope tuple satisfied genericity filtering procedure case linear simply counting achieved atleast also linear garfinkel nemhauser introducing linear computing computation cardinality combinator const network maxleximincsp inconsistent inconsistent atleast maximize functionssolve maximize concern satisfaction line inconsistent optimal inconsistent contrary usual modify network illustrates resource allocation must allocated agent agent must allocated agent perfect utility pair agent feasible permutation producing utility profile column step step introduced look maximal agent find fixed implicitly removing profile step introduced look maximal agent find fixed implicitly removing profile step introduced look maximal agent find instantiation maximizes returned allocation maximize halt halt solves maxleximincsp next writefor also projected lemma vector size lemma obvious omit lemma ifthen inconsistent extending instantiating lead satisfied latter instantiation maximize inconsistent prof lemma induction lemma lemma solo lemma lemma satisfies cardinality iteration solo maximize thus soln vector greatest must lead proving lemma obviously inconsistent lemma instantiation lemma instantiating lemma gathering equality also lemma proving satisfies cardinality iteration also satisfies solo contradicts maximize proving sorting leximin preorder sorted vector naturally expressed paradigm introducing vector sort sort andbe vector instantiation sortholds satisfied sorted particularly studied work filtering enforcing consistency come colmerauer nlogn size mehlhorn thiel simpler plus time sort endpoint asymptotically nlogn computation sorting const network maxleximincsp inconsistent inconsistent sort maximize maximize halt halt solves maxleximincsp obviously inconsistent thatand solo andare beginning iteration obviously prof call maximize line inconsistent thus obviously note instantiation last maximize instantiation leximin instantiates sort respective sorted verb sion line thus strictly contradicts hypothesis maximize multiset ordering computing perhaps intuitive proceeds pseudo branch computes next sense leximin preorder currentone network inconsistent leximin vector vector ation leximin hold satisfied leximin literature work frisch introduces enforcing multiset ordering multisets vector price slight modification used enforce latter leximin halt halt solves maxleximincsp straightforward omit fuzzy dedicated computation dubois fortemps computation branch const network maxleximincsp null inconsistent leximin null else inconsistent work enumerating step subset fuzzy agent property consistency degree ehrgott describes closely lexicographic maxordering term seem realistic combinatorial enumeration utility profile dubois fortemps tested tool choco laburthe test realistic extracted simplified multiagent resource allocation resourceis must allocated agent volume consumption utility specified pair agent allocation utility agent receives concentrated around simulate kind customizable tested leading kind brief kind appearing default medium tightness agent agent agent agent agent agent agent kind atleast sort leximin dubois fortemps time percentage minute kind pentium linux show best time followed fast agent kind kind dubois fortemps explodes vector kind must care subject filtering optimization mehlhorn thiel sort time highly affected heuristic test used heuristic specially next instantiate lowest allocate highest satisfied agent conclusion leximin preorder ignored dealing optimization kind fairness must enforced utility agent equally criterion brings contribution computation combinatorial describes framework generic cardinality combinator entirely give slightly sort leximin
