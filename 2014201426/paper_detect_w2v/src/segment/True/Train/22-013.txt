formalism network prolog semantic prolog clause used network link node attribut polyhedral used area examined graph used expressive make suitable framework prolog graph restricted graph searching searching graph many game playing planning howeve opera graph graph isomorphism graph satisfying propagation graph viewed network neural network representing network semantic network frame many distributed comput ational rouped round term connectionism tool deal graph polyhedron prolog inspired representing graph network scheme prolog introduced attributed graph polyhedron polyhedron graphical used geometric modeling used modeling curved well suitable well extracting linear feature real engelbrecht wahl prolog polyhedron markov risse polyhedral used sketch framework network next outline idea concerning polyhedral modeling prolog used alternative network domain polyhedron structured collection part vertex edge expressed prolog list edge edge edge edge edge represents edge connecting vertex list represents geometric parallelogram rhombus geometrical mean attached edge form edge used edge slope parallelogram edge edge edge edge edge separated distinguished slope implicitly edge call feature scheme possibility fixed name standing vertex name list representing parallelogram transformed form edge edge edge edge list name replaced ensures free geometric property size orientation fact equality prolog unification real type unit parallelism property preserved parallel used polyhedron scheme procedure belongs graph terminology graph isomorphism graph graph procedure idea graph subgraph graph graph subset graph subset operation representing node successively instanti ated node consistency instantiation checked possi backt process hidden recursion used match slight modification subset clocksin mellish match match match membekedge edge edge edge pure subgraph case proper make graph applicable practice minimize backtracking step occurring ordering enumerating graph case graph improves markov risse secondorder practice used case much recognized tested sequentially simultaneously scheme next database attributed graph mentioned ordering edge involving operation besides list prolog database also suitable storing belongs activation goal succeeds thus subset operation goal rhombus belongs rhombus markov rhombus edge edge edge edge rhombus edge edge edge edge scheme much subset operation list prolog used database access backtracking impossible subgraph graph isomorphism missed edge hidden edge real substantial shortage make inappropriate avoid prolog clause database call syntactically prolog functor normal clause clause contained form domain prolog database semantic normal prolog clause taking contained natural semantic network node clause connection node used processing unit connection channel transfer paradigm elaborated feature used attributed graph polyhedron besides representing topology geometric used hierarchy vertex constitute successful instantiated vertex belong network illustrating idea network polyhedron topology link line style network prolog ensuring essential also prolog edge edge edge edge edge edge edge edge edge edge four side parallelogram rhombus network activation edge edge edge edge name nonvar nonvar nonvar nonvar tool network shortage inherited static fact edge network answer activate call goal scheme good long know previously case enter scan find matched word many network find make network dynamic extend semantics clause processing unit activated term prolog mean possibility activate goal body clause normal prolog computation clause activated goal unifies head case goal instantiated indication processing unit work activation rule clause body activated clause head tiated quantitative clause head instantiation uninstantiated idea activate prolog activates clause body head uninstantiated head clause viewed activati link also inhibitory syntactically unary minus followed name link activation procedure negation instantiation instantiated treated uninstantiated vice versa best suited computational scheme outlined network parallel avoid activation clause simulate parallel feature database time clause clause successfully scheme ensures activation guided activation rule delaying clause failed rule clause fail network database synchronize work hidden network unit organize switching branch network functionally reached inhibitory link fact reflect paradigm network modeling integrated formalism clause checked repeatedly activation process terminates instantiation done database clause feature activation procedure ensures newly established connection clause instantiation kept procedure unit network newly activate representing network planar modified replacing fact clause four side side matched parallelogram rhombus matched initiating network edge edge edge edge activate parallelogram matched markov answer name entered belongs polyhedral edge hidden edge case activate used fuzzy fact network processing network used recognized property equality geometric property expressed term equality property perpendicularity edge node hidden unit network edge fact clause network capable recognize rectangulars case four side side calculating perpendicularity perpendicular true parallelogram done rhombtis done matched perpendicular edge rectangular clause representing parallelogram rhombus modified hidden unit perpendicular activation perpendicularity done done instantiated actually distinguishes tool perpendicular edge indicated used activating inhibitory link connectionism prolog network modeling prolog naturally framework connectionism focusing growing characterized mainly idea hard interconnecting processing unit connectionism characterized feature arbib connection feature network network computing residing interconnection computing unit clause activated unconditionally procedure processed matched actually resides interconnection representing topology geometry polyhedron massive parallelism centralized control network formalism computational affect minimally network property processing entered network backtracking process hidden depend subgoals thus process network viewed actually parallel hidden unit parallel feature activation rule sense step toward simulating parallelism network parallel computation reached network satisfies natural clause side prolog terminology network consistent clause undo done clause network inconsistency network computational scheme viewed framework parallel computation centralized control synchronization memory architecture role memory played encoding network semantics network unit localized population unit distributed essential polyhedron network semantics locally network node representing distributed interconnection network mentioned arbib distributed letting feature fall actually main polyhedron network conclusion outline prolog framework network lack skipped applicability formalism practice fact inefficiency activate gnor laus functors access rule activation rule ensures clause work activated simply skipped thus formally speaking effectiveness network normal prolog must case clause adequate domain network prolog feasible tool polyhedron sketch semantic network production system scheme natural processing need deepening formalism focused toward extending connection equality propagated unification satisfying mean transferring hidden unit semantics network link activation scheme activation need instantiation processing unit clause capable instantiate activated developing learning procedure suited network acknowledgment thanks sinapova preparing also grateful helpful network modeling prolog
