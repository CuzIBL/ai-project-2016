generality computational cost rosenfeld maryland college park maryland note pedagogic reduce computational cost applying operator breaking occurring simpler thought process sense operator thus suggesting even specialized operator applicable desirable operator reduce computational cost idea want cost applying proportional thus cost applying applying process true perfect match template template side rule grammar graph template subgraph metaphor subtemplates match test need template cardina thus testing cost process circumstance twostep cost cost applying degree generalize construct concreteness size thus size cost force must used repeatedly mean used thus much fewer need thus generalize computational cost template certainly universal desirable extend type hierarchical case barrow idea advantageous specialized zucker lead comput cost
