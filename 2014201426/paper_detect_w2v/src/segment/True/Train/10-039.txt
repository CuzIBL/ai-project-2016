procedural william british columbia vancouver canada work belief computational perception must encompass dual procedural flexibly integrating topdown control hierarchy driven defines deductive process scheduling chicken minsky championed kuiper used many exhibit frame must made hypothesis expertise process evidence discovered satisfies expectation process resumed frame continues subgoal explicit caller must eventually success failure caller supergoal explicit caller supergoal succeeds phase resuming turn suspended supergoals frame frame part handling resorting failure driven frame need recognized ordering must alternative subgoals impose powerful also deductive process scheduling process activated expectation satisfied well hierarchy driven guide process frame computes expectation bind supergoals expectation relinquish control alternatively retain control permit frame paradigm force hypothesis time choosing next hypothesis failure driven identical subgoals must carried independently subgoal attempted achieved numerous time system avoid thrashing behaviour kuiper advocated network recommend frame failure scheme assumes mapping failing frame next frame secondly network sense surprise system revert blind automatic backtracking manifestation mackworth chicken seems clear avoid integration bottomup kaplan bobrow winograd advocated encourage evidence satisfying expectation propagating dialect lisp maya primitive constructing accessing frame semantic network maya control process frame suspended frame resumed control primitive permit subgoal supergoal realization hierarchy presently experimenting applying maya task bibliography multiprocessing priority queue scheduling cognitive argue effectively integrate maya manual cated priority queue vancouver canada computational procedural nition perception thesis dept utilizes multiprocessing deductive scheduling comp british columbia vancouver mechansim realize integration canada preparation operates kuiper frame frame representing mutually recursive mode mode incorporates paradigm expectation frame academic york matched recursive minsky framework representing subgoaling recursive call memo cambridge mode mass mode mackworth cyclical phase expectation machine intelligence frame kaplan multiprocessing process supergoals relying natural proc entirely recognize afips frame suspend computing expectation suspending address goal process representing tennessee knoxville expectation process remains suspended repr bobrow winograd hawrusik rutgers brunswick system plan plan plan declarative schema specification assertion property representing wisdom suggests adopting procedural specification procedural hide part system thereby hindering system reasoning strip declarative schema parameter precondition assertional form goal outcome investigate representing system computes severe combinatorics deal aimds system form framework believer normal form john walked john true conclusion drawn john handled schema agent person refer fromloc refer toloc refer goal precond walk deal case incomplete incomplete john walked system john walked john unknown normal john walked system concludes john office walking dealing john john holding package package properly package must john outcome associate walk schema outcome inhand person walk loca tion upda outcome testing side effecting prescribed side user sentence risk levant instantiation missed system testing combinatorially prohibitive tences relevant senten missing system recognizing prompt user consistency discipline stating consistency introduced causal dependency captured consistency person inhand loeof loeof repr srdharan inhand deceptively sentence walk john hand package system consistency make note depdendency assertion supporting assertion john package changing john walk system recognizes john hand package system retrieves rule updating inhand side rule specifies package person hand worth clean causal dependency system precomputed dependency missing system prompt user causal dependency sophie answering counter denies system know frame reduces make system updating time john walk succession package want system save updating package frame whereby time john said package hand package package package john john package frame john walk schema used usual computation spent updating aimds system convenient procedure attached frame person inhand procedure attached inhand removed procedure remove frame thus updating walk computation system determines ease john drop package procedure package mailbox john walk away computing need complement suited well task make permitting reasoninq extending rule seems well suited actually simulating mean automatic form
