address automated composition service planning service process modeling like automatically translate planning domain service avoid explosion possibly infinite data exchanged service thus scale applicability automated composition service framework show practical knowledgelevel planning focusing automatedcompositionof service givena service goal composition service satisfies goal narayanan mcilraith spite fact mcilraith sheshagiri traverso pistore practice scaling realistic service trivial widely recognized service must modeled nondeterministic partially observable koehler srivastava hull berardi mcilraith fadel traverso pistore martinez lesperance thus planning must work incomplete informationand uncertain domain service simply modeled atomic stateful process intrinsically asynchronous foster pistore work address practicality service composition traverso pistore pistore framework service modeled stateful nondeterministic partially observablebehaviors planning checking used address scalability work unrealistic service data reported traverso pistore pistore show reasonable service sell book luckily stated pistore composition depend data exchanged service operation book depend precise book want flow operation desired book cost affordable relevant interacting know book know price hope planning style petrick bacchus used mcilraith martinez lesperance make feature service relevant compose thus automated composition unfortunately applying planning automated composition major difficulty petrick bacchus planning domain hand impractical service automated composition task domain must extracted automatically service like andrew devise proper suited automated composition task automatically service novel purchase ship automated composition planning step formally service automatically specification modeling service show process automatically show automated composition planningproblem service composition goal planning plan encodes desired composition planning pistore planning step pistore deal exchanged service framework preliminary clearly show benefit structured composition process briefly recall framework planning asynchronous domain introduced pistore service resulting planning framework conclusion work composition bpel process purchase ship hereafter introduced pistore traverso pistore furniture purchase ship service combining service furniture producer producer delivery service shipper user also service composite service purchase item deliver simplicity shipment origin fixed leave implicit service follow protocol shipper request transporting size case requester notified protocol terminates failure cost delivery time sent back requester shipper wait acceptance refusal invoker former case delivery protocol terminates success terminates failure latter case protocol also producer user message exchanged service goal sell reach user confirmed service confirmed suborder producer shipper interacting shipper producer user protocol user asks want transported asks producer size cost much time take asks shipper price time transport size sends user take cost plus cost time goal user sends confirmation dispatched shipper producer normal case case producer delivery service able request user refuse final automated composition service mean composite service case interacts service shipper producer user case composition goal sell furniture protocol service well composite service process graphical shipper process service process communication protocol synthesized service executable process exporting deployed specifies type service process receive invoke reply combined construct loop parallel nondeterministic process automatically extract formal service covering static communication channel behavioral term transition step moment translation restricted shipper process subset process structured like invoke reply receive switch flow link pick assignment form correlation next step dealing scope fault compensation handler lack omit formal translation http illustrate case shipper process show formal shipper automatically extracted process shipper process characterized type used size cost request typed used manipulate costof used cost shipping request used process type customersize used communication counter hold step service describes evolution process transition step process transition defines applicability firing list assignment used evolution process assignment transition prepareoffer costof delayof used shipping price delivery time process shipper type size cost delay request size nack delay cost avail func costof size cost delayof size delay getrequest checkavailable checkavailable prepareoffer sendoffer waitanswer endwaitanswer preparenotavail sendnotavail succ fail size size delay delay cost cost init getrequest getrequest request size checkavailable checkavailable checkavailable prepareoffer prepareoffer sendoffer cost size customerloc delay size sendoffer cost delay waitanswer waitanswer nack fail waitanswer endwaitanswer endwaitanswer endcheckavailable endcheckavailable succ preparenotavail preparenotavail sendnotavail sendnotavail avail formal shipper planning framework service composition work pistore formal framework automated composition service planning service planning domain composition formalized planning goal planning used composite service service resulting planning domain nondeterministic partially observable framework pistore differs planning framework assumes asynchronous domain encoding service plan encoding composite service precisely planning domain modeled transition system subset evolve message sent service message service composite service internally interacting used evolution service visible service user labeling associate property holding transition system transition system tuple finite finite finite finite transition labeling composition composite service controller also interacts domain orchestrating service invoking operation handling recall formal system transition system describing system asynchronous service composite service need rule case sender send message receiver able accept pistore able accept message successor reachable possibly empty transition transition labeled intuition captured reachable transition concern correspond operation composite service simply executable controller controller said deadlock free reachable pistore composition domain composition goal satisfies planning planning checking framework used show effectiveness pistore finite data data type finite cost domain formal process mapped data dramatically size need used plan pistore data type followingwe show adaptthe frameworkof pistore planning remove restriction automated composition realistic even infinite data service composition planning extending pistore service formally term suitable base show construct planning domain composing base service base base form type enumerative type ables type compatible type mean know true know base show powerful service composition base consistent contradictory closed deduction deduced containing also base service tained type service base shipper process waitanswer customersize customerloc offercost costof customersize customerloc offerdelay delayof customersize customerloc offercost offerdelay transition base affect transition triple firing defining auxiliary restriction operation restriction base closing deduction restrict base step assignment remove modified derived assignment close deduction give applicability depend service transition peer interacting service firing peer correspond former instantiated service latter peer request peer corresponds shipper request customersize customerloc transition shipper getrequest request customersize customerloc checkavailable base getrequest size request correspondingto invokingthe shipper parameter applicable know transition obviously consistent base obtainedby transition request restrict getrequest transition case remains unchanged carried used parameter removing customersize customerloc customersize customerloc closing deduction getrequest customersize customerloc customersize customerloc base removing modified assignment case checkavailable closing deduction checkavailable customersize customerloc customersize customerloc applicability transition applicable consistent consistent consistent transition also transition mean hold planning domain constructed service composition goal latter defines composite service like cost user mark cost shipper producer call goal goal composition goal automatically declares composite service must know goal must service composition goal tryreach succ succ succ addcost goal declares want service reach confirmed offered cost must applying addcost cost offered producer shipper operator tryreach modal operator eagle goal specification plan reach goal domain pistore goal flatten introducing auxiliary left tryreach succ succ succ addcost flattened goal extract goal goal cost cost cost goal automatically goal tryreach succ succ succ composition goal defines base call base goal planning domain combining base service base goal instantiating service goal applying goal goal planning domain planning domain composition typed typed service composition goal base assignment service transition service goal type service transition service goal type service goal goal ables compatible type transition transition service form trivial associating hold domain pistore deadlock free control satisfying composition despite fact synthesized controller modelled elementary communication service sendingand receivingof message manipulationof goal straightforward executable composite service used planning checking pistore test xeon limiting memory timeout explained spite intricated protocol established achieving goal show planning engine ground composition produced exchanged shipper producer user horizontal axis cardinality data type size cost delay handled service also case cost size reporting cardinality vertical axis composition time ground composition feasible unrealistic case process data time ground composition grows exponentiallywith cardinalityof data type even case type cardinality unmanageable contrary composition take ground reasonable basically binary ground correspond binary atom scalability service grows considering domain service process requested service respond service refusing composition service successfully failure reported invoker composed service composition time service composed indicated horizontal axis composition achieves comparable reported pistore ground composition considering case type cardinality manage compose service minute also reported make protocol requiring degree interleaving step goal parametrized domain sary interleaved interleaving confirm producer shipping user accept increased reflects composition composition reasonable service achieved minute even case automated composition take time surely manual code conclusion work automated composition automatically service process planning describes service framework planning asynchronous domain pistore show experimentally significantly practical applicability framework idea planning idea petrick bacchus work address orthogonal planning domain automatically process service work differs petrick bacchus kind base well planning domain automatically planning work martinez lesperance show planner petrick bacchus service composition deal atomic service service exporting operation protocol domain domain specification rule hand automated planning tackle service composition sheshagiri deal address deal conditionaloutputs uncertain observability remarkable work narayananand mcilraith mcilraith mcilraith fadel deal sensing even work domain hand devising base automatically service addressed composition composition service work hull formal framework composing behavioral givenin term automaton theyfocus theoreticalfoundations practical fundamentally composition seen generating rule coordinating service concrete executable process main also work berardi plan extend work automated composition semantic service line work traverso pistore moment planning also explore variant base flexible feature ground domain acknowledgement work partially funded automated artificial intelligence system service want thank astro http collaboration feedback
