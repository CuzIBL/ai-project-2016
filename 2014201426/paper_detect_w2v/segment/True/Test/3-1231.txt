give clear picture frontier quantified satisfaction qcsps structural restriction side checking qcsp satisfiability remains structural property treewidth incomparable hypergraph acyclicity domain fixed even scope side identify relevant tractable qcsps prefix hypertree width qcsps guard latter solvable time domain quantifier alternation quantified satisfaction qcsps satisfaction csps existentially universally quantified quantification allowed framework clearly much expressive plain fruitfully exploited modeling wide spectrum domain qcsp quantified form qmvm network quantifier quantifier prefix recall network triple finite domain finite list scope allowed scope sometimes comfortable atom network atom simplicity closed quantified occurring quantified free quantified qcsp network atom occurring quantifier prefix prefix surprisingly increased expressive qcsps come cost deciding satisfiability purely existential csps borner quantified much spent identify tractable qcsps divided main identify tractable qcsps exploiting property identify tractable exploiting scope structural deep achieved former borner bulatov bunind chen creignou jeavons focused structural proven dechter gottlob recall network best scope primal graph hyperedge scope chen structurally tractable qcsps chen describes qcsps primal graph treewidth fixed domain fixed prefix fact dramatically quantifier alternation size largest domain noted chen independently derived feder kolaitis exploiting courcelle monadic treewidth indication optimal fact arose subject qcsps treewidth tractable domain fixed extend structural possibly treewidth kind restriction quantified make qcsps tractable answer comprise good news news hardness also identify tractable qcsps neither fixed domain fixed quantifier alternation main contribution fixed domain restriction even qcsp tree prefix alternation hierarchy quantifier prefix side prefix substring acyclic qcsps feasible logcfl time tractability extends acyclicity qcsps gottlob fixed domain tractability treewidth optimal qcsps binary domain remains pspacecomplete even acyclic hypergraph incidence graph treewidth primal graph logarithmic treewidth show structural help much case quantification hardness show presence quantifier radically alters structural property scope thus realize worthwhile taking interact scope fact considering quantifier part scope idea identify kind restriction quantified tractability incomparable structural fixed qcsps solvable time restriction domain quantifier alternation quantified csps network assignment mapping onto domain said assignment assignment satisfies structural restriction tractable qcsps assignment trivial assignment empty extis clearly assignment qmvm qcsp mqand letany trivial assignment pairq ifiis whole assignment assignment derivable derivable assignment qcsp satisfiable worthwhile noting qcsps domain quantified literature qcsps sometimes domain equivalently domain qcsps untyped typed show formalism fact logically qcsp untyped binary network time going typed untyped exponential network former succinct hold membership typed hardness binary network binary domain hypergraphs hypertree width property bhtw hypergraph hypertree width gottlob property treewidth robertson seymous primal graph hypergraph property bitw treewidth incidence graph hypergraphs hypertree width property shtw hypertree width hypergraph treewidth property primal graph also property acyclic resp tree acyclic hypergraphs resp primal graph qcsps quantifier alternation distinguish case arbitrary domain binary domain quantifier alternation hypergraphs property domain property qcsp deciding satisfiable qcsp domain kind alternation prefix hypergraphs property structural help much tractable gottlob know qcsp bhtw time hold structural restriction stronger easy qcsp bhtw even next show also qcsp bhtw tractable qcsp network universally quantified occurring scope cart containing domain cart containing tuples note case case simply precisely cart empty qcsp replacing lemma qcsp universally quantified logspace lemma exploiting fact assignment lost transformation show qcsp bhtw time tractable parallelizable encoding boolean acyclic qcsps boolean associate binary acyclic network network used hereafter characterizing acyclic quantified csps network encoding show hypergraph note case hypergraph primal graph coincide binary clause clause clause selector selector domain literal clause domain literal encoding truth make true resp literal resp complement satlit literal make true satlit domain clause satlit boolean intuitively boolean encode assignment clause chooses literal satlit satisfies selector take coming thus selector corresponds propagation literal coming boolean left branch clause selector corresponds propagation branch literal satisfying clause propagation branch pair complementary literal meet topmost network boolean encode satisfying assignment next idea actually topmost consisting satlit note satisfied assignment take complementary literal boolean tuples pair adjacent variableselectors clause tuples satlit pair adjacent clauseselectors tuples satlit satlitsatlit assignment assignment true false lemma assignment assignment satisfying assignment assignment hold lemma even acyclic binary network quantifier alternation quantified intractable qcsp tree boolean build time acyclic network lemma satisfying assignment correspondence assignment thus satisfiable satisfiable intractable acyclic tractability intractability settle acyclic qcsps arbitrary quantifier prefix natural qcsp bhtw hardness hold qcsp tree qcsp bhtw hardness hold qcsp tree limitation hardness deciding quantified boolean satisfiable build time qcsp tree lemma seen satisfiable satisfiable membership induction observe qcsp bhtw complementary deciding assignment logcfl time fact logcfl closed complementation induction qcsp bhtw complement decided guess assignment assignment assignment feasible time qcsp bhtw turing machine oracle qcsp bhtw induction step reasoning quantified satisfaction arbitrary domain even restricted network tree fixed domain help fixed arity show hypergraph acyclicity help easy qcsp even boolean domain hold even case additionally incidence graph treewidth primal graph logarithmic treewidth entail remains intractable long arity even natural qcsp acyclic bitwcomplete qcsp acyclic bitwcomplete boolean acyclic network network distinct domain tuple tuple resp binary encoding domain resp show network observe networkacyclic bitw hypergraph acyclic hyperedge size largest domain treewidth primal graph easy treewidth incidence graph observe correspondence assignment thus quantified satisfaction even restricted boolean network acyclic bitw guarded tractable csps wide quantified tractable even domain size quantifier alternation recall qcsp qcsp technically pure encoding domain form kolaitis fragment sentence arbitrary quantification allowed negation disjunction forbidden existential fragment expressive satisfaction kind quantifier clearly connection quantified parenthesis distinguishing subformulas delimiting quantifier scope qcsps necessarily prenex form transformed prenex fragment qcsps show appealing fragment decidable time quantified quantified reused free free qcsps qcsps form belongs fragment smallest subset atom belongs atom free free tuple quantifier belongs atom referred guard qcsp form rewritten guard guard guard guard guard guard note congenial quantified csps differs andreka gradel formalism guarded fragment fragment gottlob guard existentially quantified subformula conjunctively guard guard universal form implication guard much natural negation guardedness need preserved negation negation guarded logically binary connective syntactically impossible implication guard fact also semantically impossible hand negation missing involving wrong guard arise negation natural nonstandard guard introduced fragment fragment fragment tractability gottlob combined evaluating finite show also kguarded qcsps tractable notwithstanding nonstandard guard universally quantified subformulas lemma transform qcsp computes pair finite database satisfied transform logspace subformula guard form maximal prefix universally quantified guard atom scope keeping projecting column cartesian cart domain consist precisely occurring tuple thus atom satisfied substitution positively satisfied thus satisfied must cart transform checking true lemma logspace empty test fails guard transform false atom scope join free free atom atom scope join guard atom atom scope join empty note fixed transform logspace transform replaces subformula subformula note transformation free free free thus atom guard form guard done universal guarded subformulas transform database consisting plus like modifying universal quantification seen satisfiable logspace fixed satisfiability qcsp checked time lemma extending fragment looking fragment even qcsps universal quantifier observe expressive universal quantification poor fact lemma subformula true cartesian cart representing tuples composed domain respective domain stringent hand form property guard inclusion dependency stating part must contained expressive thus suggest guard conjunctively specified guard universally quantified subformulas thus fragment free free tuple belongs easy fixed satisfiability qcsp checked time able show strictly expressive defer full
