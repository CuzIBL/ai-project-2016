investigate inverse feature boolean pathfunctional dependency avoid undecidability implication remains exptimecomplete syntactic form dependency terminology coherence terminology sufficiently weak transfer emerging objectoriented normalization many considerable incentive enhance modeling utility feature capture richer uniqueness dependency dehaan khizder stanchev weddell toman weddell unfortunately feature role inversion implication quickly undecidable calvanese investigate inverse feature boolean dependency pfds weddell consequent implication remains syntactic imposes prefix pfds terminology complement extends calvanese dependency role coherence terminology unrestricted pfds sufficiently weak formal specification arbitrary schema fail normalization nortel canadian government nserc cito gratefully acknowledged latter enables incremental terminology encode schema terminology fails normal form used calvanese capable handling anomalous case normalizationalgorithms employreasoning service thus coherence equipped transfer normalization emerging data biskup biskup polle work coherence conditionderives conditionproposed biskup polle sound axiomatization objectoriented data inclusion dependency data weddell thus settle open decidability implication calvanese dependency form identification show dialect undecidable case decidable unary dependency disallowed show undecidability simpler restriction prefix pfds complement extends decidability pfds coherency serf alternative regaining decidability form dependency feature path coupled concrete domain lutz lutz milicic explore satisfaction influenced concrete domain syntactic restriction dependency admits kind dependency identifying arbitrary domain remainder introducing dialect remainder dialect feature style opposed role derivative consequence straightforwardto incorporate dependency capturing pfds show inverse feature arbitrary pfds lead undecidability implication main follow decidability prefix restriction pfds terminology coherency terminology comment follow preliminary setsoffeaturenamesandprimitiveconceptnames isdefinedbythegrammar conceptdescriptionobtainedbyusingthefinalproductionof dependency inclusion dependency form terminology consistsofafinitesetofinclusiondependencies semantics semantics semantics withrespect domain aninterpretationfunctionthatfixestheinterpretations ofprimitiveconcepts subsetsof primitive feature tobetotalfunctions theinterpretationisextendedtopathexpressions andderivedconceptdescriptions aninterpretationsatisfies inclusion dependency implication asksif hold thatis forallinterpretations thatsatisfyallconstraintsin remainder abbreviated shorthand also identify feature name path concatenation path composition classify side pfds side form undecidability implication show reduction unrestricted tiling implication construction calvanese unrestricted tiling triple finite tile type binary mapping berger emde defining grid step reduction establish grid achieved four disjoint denoting cell edge grid cell mapped four incoming feature formed force extend accumulated inclusion dependency illustrated adjacency rule tilingproblem captured corresponds tile type form terminology unrestricted tiling atilingproblem admitsasolutioniff thus implication undecidable unrestricted terminology recovering decidability decidability implication syntactic prefix pfds occurring terminology coherency terminology decidability case exhibiting reduction implication decidability monadic sentence ackermann prefix monadic ackerman monadic monadic ackermann formulaoftheform ackermann prefix converted skolem normal form replacing skolem unary skolem appearing boolean equivalence yield finite clause containing ackerman sentence herbrand syntactic construction establish satisfiability ackermann furer pfds recall syntactic applies pfds occurring terminology complement extends calvanese accidental prefix sufficient follow calvanese simply requiringunary pfds resemble nonunary pfds also trouble illustrates consequence thus construct tiling path precondition prefix avoid suffices impose prefix pfds beanarbitrarypfdwhere isthemaximalcommonprefix ofthepathexpressions thepfdis ifeither isaprefixof isaprefix restriction treemodel property restriction able construct satisfies terminology falsify tree rooted domain counterexample capture equality implied pfds tree allowed node path respective root able indegree branching rank implication terminology tobethenumberofoccurrencesofthe conceptconstructorsin maximal predecessor terminology tool describing herbrand fixed branching outdegree monadic sentence simulate showing herbrand term represents left unless made unary unary representing feature representing inverse feature used denoting root form term overload path term well true representing left part emulate partiality inverse true belongingto respective part true agree finite assertion feature subconcepts feature appearing call followingcollection assertion assertion superscript stand pair assertion substituted totality feature must outgoing feature feature outgoing feature rule equality equality propagate node predecessor must must belong constructor enforce restriction assert restriction pair neighboring node restriction existential restriction inverse note case left side agreeing predecessor side assertion satisfaction terminology gcds enforce subsumption satisfaction pfds inverse disallow violation pfds existence inverse feature agreeing node prefix path agreement extend equality assertion node agreeing path avoid exponential blowup path pfds prefix path pfds pfds enforce pfds left part assertion simulate implied capture violation ordinary terminologyand ifandonlyif isnotsatisfiable sketch struct distinct term easy satisfies violates thus conversely construct must part successor part violates satisfies extend existential restriction chose predecessor implied existential restriction identify term predecessor term extract tree extend side follow step left part note satisfies translation ordinary satisfied pair node violate thus satisfying pfds must process noting root construction transform arbitrary satisfies violates informally referred motivate monadic assertion translation exptime procedure appealing completeness implication fragment toman weddell implication constructor restriction requiringlower coded binary predecessor maintaining coherent terminology recovering decidability impose coherency terminology main thereby regain unrestricted pfds terminology disadvantage roughly restriction feature inversion terminology coherent terminology aterminology coherent foralldescriptions thatappearassubconceptsofconceptsthatappearin ortheirnegations note syntactically coherent assertion restriction construct property aninterpretation coherent lemma beacoherentterminology asimpleconstraint aninterpretationsuchthat thenthereisacoherentinterpretation suchthat sketch distinct coherent lead contradiction thus tree property remove farther descendant node falsifying resulting satisfies falsifies repeating process yield coherent restricting implication case terminology coherent reduction satisfiability ackerman coherent terminology implication decidable sketch reduction terminology terminology coherent left part never incoming feature name thus inverse sufficient monadic also left side vacuously pfds thus assertion item dropped pfds inverse captured auxiliary toman weddell note coherent pfds vacuously node possibly agree path make pfds trivial coherent consequence coherent coherency restriction terminology weaker postulate avoid predecessor wish work pair syntactic semantic combine feature inversion dependency boolean descriptionlogic ensuring implication undecidable resolve open decidability analogous implication biskup polle natural regular replace path yielding constructor developing procedure toman weddell main envision describing data optimization extending inductive data type considers weaker restriction terminology decidability relaxing coherence unary pfds actually terminology
