data discrimination term presence integration discrimination equational prover associativecommutative time term linear occurrence procedure match linearized term occurrence replaced match linearized term also match term substitution occurrence consistent work well proving actually fail filtered comparatively case unification operation proving unification part deductive inference rule resolution subsumption normalization rewriting simplifying eliminating redundancy evidence provers mainly simplification equational provers time spent term rewriting automated reasoning relatively little deducing unification provers deletion subsumed clause indispensable provers mccune also many ramesh system forgy becoming increasingly clear many proving reasoning work extending equational prover reveal presence preliminary term built letter used term subterm dewey decimal associativity commutativity axiom also associativity commutativity term said acmatch term substitution convenient term flattened term rewrite rule flattening rule bachmair automated reasoning time term linear benanav process phase linearized used filter linearized certainly none phase term identified need phase term presence straightforward used phase evidence proving eliminated phase phase invoked sparingly substantial gain term adopt variant data flat term used hiper christian flattened term permutation congruence term acequivalence ordering lexicographically extending ordering term term equivalence serf discrimination next discrimination discrimination proving term need discrimination dynamically variant deletion main deterministic latter backtracking identify match deterministic backtracking term stored root leaf maintains list pointer matchset leaf node node maintain representing labelled edge node list kept sorted edge label traversal linear list show discrimination ordering variant discrimination corresponds variant mccune hiper also discrimination bachmair distinguish distinction potentially backtracking consume memory checking consistency substitution done traversal failure caused inconsistency discovered consistency checking maintain substitution descending branch substitution subterm term recall operation bipartite secondary automaton intersection matchsets produced reporting next data operation associate subterms stored linked list list control block corresponds control block term maintain relevant bipartite secondary automaton transition term deleted control block must also deleted facilitate deletion control block derived inherit used deletion linear linked list pointer control block control block term matchset leaf pointer leaf control block closest enclosing list control block enclosing super term acfunction root bachmair etal putting operation indiscrimination upon step exceeds subject fewer subject case marked unmatchable done behalf test secondary automaton used existence bipartite bipartite graph secondary automaton used bipartite graph deriving term nonvariable bipartite papadimitriou steiglitz reported never resort bipartite successful step matchset matchset intersected stickel mccune list intersection list automated reasoning mark marked marked marked intersection done visited mark leaf node reached matchset also intersected outcome intersection subject entered node upon processing subnet node marked matched term matchset node marked marked next sparc memory straightforward show resulting prover show acdiscrimination compromise prover associativity commutativity data indication effectiveness took term proving otter mccune built term used subject resulting successful resulting time straightforward acmatching discrimination mode identify term stop find term also repeated test subset summarized seen term variant rewriting time equational prover reveal contained grobner grobner base ideal ring note term otterexamples declared binary canonical rewrite system abelian specified jacobson commutativity proved ring satisfying moufang sesquilinearity associator proved alternative ring robbinh proved robbins algebra huntington algebra boolean algebra robbinh property quantum proved summarizes prover column naive prover normalization term rewriting rewrite rule term normalized prover take rule match root case failure next rule tried match else rule exhausted latter case process restarted next time normalize term rewrite system time leading normalization computing time normalization naturally significantly time prover need find expect normalization half time spent match expect normalization consistent normalization computing time spent normalization rest operation unification deduction pair expect bachmair phase phase linear consistency substitution checked phase show high percentage filtered phase leaving consistency checking phase benchmark case case also want mention able bring time minute minute consistent like mention memory consumption never exceeded memory storing extra memory doubled mentioned discrimination used successfully degrade used show accomplished column discrimination column pertains acdiscrimination observe overhead negligible integrated equational prover reveal used fact time restricted linear term solves automated reasoning evidence secondary automaton tool significantly improving provers acknowledgement like thank reviewer helpful comment part grant
