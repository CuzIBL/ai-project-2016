show resolution procedure used construct procedure involving transformation explores alternate sample monkey banana puzzle hanoi puzzle exhibit bused show practical robot word proving resolution automatic robot transformation answering automatic proving resolution procedure represents perhaps powerful automatically determining validity raphael illustrated resolution procedure used follow axiom resolution procedure procedure find construct satisfies showed axiomatize subject procedure dialogue answer construction prof correctness describes latest introduces constructive formalism illustrated used automatic writer part defender agency defense monitored rome preprint preliminary subject modification publication listed twofold explore calculus statetransformation elaborate upon robot exactly proving careful thought part user experience encountered statetransformation formal seeing illustrate alternate axiomatizing presenting classic monkey banana next ternate tower hanoi puzzle robot automatic transformation existence long time usefulness well transformation show used automatic resolution prover practice employment greatly problemsolving mccarthy hayes relevant philosophical attempting formalization considering universe discourse fact describing universe discourse expressed form mathematical stated conjecture proved proved prover constructive asserts existence find construct moment universe consideration said subscripted letter subscript ranging mean objectx true axiom expressed answer system brought achieved axiom describing form describing achieved describing entity termed situational fluents mccarthy axiom describing fact pushed axiom push push corresponds pushing robot executor equivalently possibly resulting applying answer axiom push pushed jdjpushfobject axiom imply pushed robot expressed composition push push push normal innermost outermost give find getting conjecture posed prover atposition stated answer returned push push resolution demonstrates desired answer formed composition thus describing answer answer answer explained show work answer displayed beneath clause containing step answer constructed prover constructed answer answer clause representing negation interpret clause clause answer inside answer holder constructed construction process successive instantiation instantiation containing instantiated creation resolvent inference step need necessarily instantiate step inference verifies property hold answer step final step yield clause answer push push terminates reader familiar vocabulary proving resolution resolve exhibited generating happens backward goal upon determines clause resolved answer show answer regardless used refinement show considerat time operation brought formalism reader omit read subject previously corresponds transformation system give mapping mation applying composite axiom form formation axiom describes property thus property axiom cates composite posed observe lead transformation thus next show consideration brought used kind represents hold axiom ship movable time time time give time show lead singlevalued know goal reached formalization goal reachable operation answer heuristic clause answer call axiom operation axiom answer waldinger programwriting prow also resolution prover constructive creating conditionals combining answer closely used prow target operation relationship axiom allowed target operation test target embedded prow axiom acquisition path mean path axiom illustrates formalism robot made dependent must thus axiom must robot asking path pure theoremproving formalism mean want know must need prover must conjectured case prover take long time find mccarthy refers frame word frame refers frame relevant easing arises time stated produced insufficient precisely name test robot move lead path illustrated assignment operation assignment operation assigns ment assignment assign axiom reached guide area life path asked perhaps reached robot sensor observe discover path formalize proper path simplicity name path resulting asking monkey banana axiomatization mccarthy monkey banana monkey faced getting bunch banana hanging ceiling reach monkey must push empty banana climb reach suitable axiom monkey banana reach move reach reaching climb climbing move moving movable movable climbable climb reachable reach axiom movable monkey banana answer reach monkeyibananas climb monkey move monkey monkey banana monkey must execute usual innermost outward thus move banana climb reach banana printout formalization tower hanoi puzzle questionanswering used obvious subject area major searching data base long reasonable work well like tower hanoi puzzle find suitable puzzle proved axiom system puzzle apparently good axiomatization leading quick entirely obvious many axiomatizations alternate lead disc diameter disc disc stacked pegx descending size illustrated astute reader axiom leave much keeping axiomatization reasonably reader puzzle find move transfer disc allowed move consist taking disc placing disc never disc formalization must disc disc rule game legal disc simplest specifies disc disc disc relative disc must specified else disc must implicitly understood proper perhaps simplest specifies positiong many configuration move constructing stack disc stack alternative stack disc representing disc stack rest representing rest disc stack corresponds lisp empty ment pegx asserts stack disc disc disc discg illustrates construction operator consistent constructor next perhaps simplest idea move legal must indicating move lengthy fact move thus move jpeg disc move pega inil move disc disc move pegg move move move specifies whole move restriction must part formalism axiom enumerate legal move thus preventing incorrect restriction restricts move legitimate legal think legal reached resolution process work backward goal toward reach goal sometimes forcing thus illegal forcing reached backward goal incorrect forcing must reached legal restriction moving legal thus prevents unnecessarily prover considering lead eliminate illegal forcing move legal legal perhaps best specification sense axiom legal legal distinct move move legal true disc listed size cheat simpler axiom omitting resulting move legal stack disc force prover work backward legal final legal axiomatization incorrect legal axiom quicker distinct mean clause concerned illegal subsumea disc stack formed placing disc legal stack disc disc stack thus legal stack axiom need enumerate move configuration whole move thus disc disc stack legal block construction incorrect stack axiomatization naming disc disc represents disc trates procedure shortened frequent decidable subproblems lisp prover lisp lessp quick step generating wherever axiom resolve subsume literal clause lisp evaluates distinct note move axiom break clause clause task process move nine binary resolution binary factoring clause extend unification subsumption term term type symmetry axiomatization configuration puzzle specified mean stack stack stack thus hold stack pegx legal stack disc allowed formalization axiom puzzle clause clause entail seven move thus passing eight counting final clause correspond searching used thus sufficiently poor axiomatization requiring enumeration incorrect disc system saturated fails time elimination extra clause alternate path reach happens subsumption heuristic eliminates redundant clause subsumption dependent thus must examine mine subsumption eliminate alternate path puzzle much puzzle term must careful ernst formalizes used show property must posse succeed good tower hanoi utilizing solves four disc considering incorrect thus ernst guide puzzle save puzzle answer puzzle move disc move disc much cheating machine guided told subproblem away guided toward possibly desirable puzzle posed puzzle puzzle automatically recognized lemma follow induction axiom axiom imply form recursive solves puzzle arbitrary disc aiko hormann gaku automatic lemma induction guided robot robot tested stanford intelligence automaton robot emphasize describes work progress work completed exploration robot robot nilsson cole translator part robot simplest central storage retrieval system accessible part system well user data base thus robot tool test suitable desirable perhaps involving axiom system case axiom retained used troublesome case made storing axiom axiom describes call lisp axiom used unit informat derived teletype axiom stored memory clause prover evaluated lisp fortran machine robot sensor sensory data disprove robot cart wheel camera mounted cart bumper cart grasping agent robot manipulate pushing severe restriction grasping robot must clever effectively involving modifying axiom robot axiom describes move axiom robot path robot moving path path adequate term prover path path fortran subroutine used good path obstacle ground show case prover used obscure kind obscure path axiom merely semantics fortran meaningful subprogram used fortran axiom form path stored memory prover axiom push axiom describes pushing robot graspers bumper wedge cube roughly size robot time used simplest used fortran push polyhedron reasonably polygon form surface polyhedron turn polygon else implied mapping topologicallydescribed robot system structural axiom supplied used robot axiom describing robot manipulation axiom movable theoretically rotated pushing path theoretically rotated mean resulting pushing frame resulting pushing pushed axiom axiom pushed unmoved used perhaps fast handling deduction updating done robot remains observe axiom assumes pushed robot move case pushed accidentally strike move lead dealing real axiom real feedback real axiomatic best moved robot necessarily accurately predicted even great calculate predicted robot grasp slippage floor surface smooth distribution rudimentary kinesthetic sensing bumper contact thus feedback loop iterating toward form plan pushing possibly push axiom push plan back take look desired sensor robot predicted axiom move successful sensor reasonably accurately give must used next feedback find true property axiom form property property truth sensor robot close must assert true step time degree truth used possibility case robot obstacle attempted invalidates plan able part dated hold reach continue planned axiom axiom probably incorrectly predict case best probably iterate toward target repeated push axiom plan hopef process converges axiomatization feedback necessarily make find knowing system feedback simpler accurate axiom system axiom system lead shorter envision formalizing process feedback verifying updating recursively prover attempted formalization formalization prover raise possibility practice well robot requiring ramp onto trated goal push onto robot must push ramp ramp onto axiom obvious quick leaf much desired term generality robot translation term sensory learns deal make quickest frequentlyencountered certainly lend learning degree problemsolving closer greatest generality axiomatization axiom describes rectangle slope robot width robot height clear rectangle solid surface path joined axiom push axiom solid used ramp term climb push join slower ramp axiom hand probably robot construct ramp recognize push ramp standing wide danger trying asking prover rederive math physic automatic automatic checking debugging great tool intelligent machine show prover used automatic formalization used precisely automatic recursive concurrent correctness thus automatically take lisp lisp entity side side term upon describing operation well automatic simplicity pure lisp lisp corresponds side thus pure lisp feature lambda calculus restricted system lisp merely lisp thus lisp yield remainder thus take formalizing lisp mapping lisp lambda calculus calculus lisp pure lisp normal composition formalization also composition lisp false else true semantics axiom relating lisp remainder emphasize distinction lisp solves test validity much construct construct well test wish sort specified sort explained explanation true sorted false precise defining prover lisp give prover axiom axiom defining construct subset lisp used axiom defining true form lisp produced lisp axiom prover disprove formulate four kind checking simulation verifying debugging explained sort checking form proving true false checked sorted desired answer accordingly simulation form answered sorted sorted constructed prover thus prover sort answer proved sorted impossible answer proper form vhere user mode bugging proving answer omitted sake wherever proper answer counterexample must constructed prover mode axiom looping converge null list form atom synthesis mode constructed else proved impossible answer must constructed sort atom proper answer unsortable case must duced mode also axiom rest form sake form answer answer answer atom halted time dotted answer assumed explained cond else note summarized reader view representing usual lisp desired empty form desired answer checking atom atom simulation atom axiom lisp lowed axiomatizations sort case axiomatization subset lisp lisp atom something cond used lisp cond lisp copy atom atom redundancy null term redundancy sort examining axiom thev case sort lisp sort constructed giving sorted merge lisp merge merging sorted returned also sorted stating merging sorted merged thus hold fact sorted sorted merge merge cond null cond lessp merge axiom merge completes sort merge posing prover need axiom convergence recursive induction axiom recursive converges proper prover induction axiom induction keep taking reach step analogous induction nonnegative analogous nonnegative kind induction besides unfortunately recursive converge induction axiom must carefully formulated user induction axiom also serf introducing name give sort introducing induction sort four kipds checking simulation verifying verifying debugging sort want know thus sort term cond merge sort sort previously axiom also need induction axiom term sort induction axiom sort sort induction axiom prover next synthesizing sort part part data base phrase asking piece assigns name constructed recursive term construct name must else internally specifies induction axiom give inductive hypothesis used constructing formi answer thus name sort specifies give inductive sort asks sort answer labeled sort unable sort reasonable time find resolution creation merge also posed prover automatic axiom conjecture trate idea automatic work well work vides merely part need done profit fruther investigation loop obvious loop recursion carrying operation recursive many recursive converted loop stack give criterion convert recursion iteration determining case recursion converted iteration conversion process embedded lisp compiler recursive separation divide type concerning semantics axiom axiom defines sorted concerning target axiom cond concerning interrelation target lessp reformulated axiom sort sort cond merge sort kind mutually exclusive axiom system distinction made consequently prover axiom type need type lead nowhere useless clause mation used thus leading axiom time prow waldinger promising separating construction construction system axiom used construct target well relationship part prow processor convert completed postprocessor also convert recursion loop target goal automatic involving probably wish optimization target want axiom give semantics target also intercommunication target possibility efficiently suggest gain problemsolving minimize unnecessary system construction separated construction possibly construction process term existence axiomatization considerable room missing lisp feature lambda bind must user must also specified user heuristic heuristic examining constructed looking inside answer even guaranteed answer nonsense undefined construction clause containing constructed answer eliminated heuristic actually sample prover know sample else counterexample stored memory else user pseudolisp incorrect eliminated done properly valuable experience usefulness clear practical lisp employed construct construct induction induction studied kind automatic induction axiom helpful segmentation automatically generating specification subfunctions system sort divided merge next sort construct term merge segmentation specification user prover assertional declarative case user distant unless know something system answering questionanswering easy prover easy done raphael slagle deducomv cooper chemistry questionanswering obvious subject area reasonable work well harder like tower hanoi puzzle good reasonably used desirable prover adopt best even believe goal impossible done slowly evolving user must know parameter radically user presently know lisp must able modify practice used system modified suit need debug heuristic modify reprogramming seems take minute perhaps averaging ultimately system able semantics experience robot automatic emphasize need versatile system suitable system seems best relevant promising system robinson banerji crucial inference system suitable treatment equality treatment equality robinson robinson kowalski mccarthy hayes modal used tool testing exploring test machine tends sharpen believe problemsolving quick testing idea form axiom system correspond closely conceptualization sometimes reformulate axiom system rewrite problemsolving ease reformulation facilitates exploration resolution serve system modified proving robot puzzle much work remains done system capable acknowledgment like acknowledge valuable bertram raphael robert yates
