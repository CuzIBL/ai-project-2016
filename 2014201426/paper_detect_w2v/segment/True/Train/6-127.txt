system computation correspond naturally explained need explanation series domain previously answer recycled arises answer substantial repeated computation system classic answer nonmonotonic system tends believe answer recycling form show answer recycled nontrivial rewrite procedure negation encoding logistics domain answer gelfond lifschitz stable przymusinski adopted framework abduction formalism answering procedure dung eshghi kowalski kakas mancarella kakas satoh iwayama address sound procedure abduction explanation conveniently disjunction also computing explanation actually proving preserve soundness completeness procedure answer positively nontrivial rewrite procedure work part cerg main recycling preserve soundness completeness rewrite procedure idea abduction confluent terminating rewriting system canonical system literature rewrite system dershowitz jouannaud confluence termination property rewriting terminates normal form rewriting thus rewriting yield rewrite procedure idea recycling recycling system classic inference system viewed transforming logically dynamic answer previously subgoals reduces computational game playing champion checker shinook endgame database endgame referenced efficiently recycling nonmonotonic system rarely investigated note recycling differs consequence semantics answer maximal stable posse cautious nonmonotonicity property consequence gain thus losing consequence answer thus consequence augmented rule gain answer losesas consequence next defines semantics review rewriting framework formulate rewrite system rule recycling preserve soundness completeness extends rewrite system abduction nonmonotonic reasoning semantics rule form atom propositional default negation literal atom negation normal finite rule comp equivalence atom head rule cornp comp default negation replaced erals exactly rule head empty rewriting system sound stable semantics przymusinski stable even introducing alternating fixpoints yuan default negation default negation lation propositional derivation default negation treated atom stable fixpoint applies twice satisfying atom undefined answer fixpoint goal rewrite system goal rewrite system formulated goal rewrite system rewrite system type rewrite rule rule comp literal rewriting simplification rule transform simplify goal loop rule handling loop rule completed cornp used left rewritten literal rewriting goal also goal goal resulted literal rewriting goal derived goal like goal transformed goal changing semantics carried simplification rule goal negation front literal achieved transformation rule simplification rule simplification rule constitute nondeterministic transformation system formulated loop handling mind keeping track literal goal resulted rewriting central formalizing goal rewrite system rewrite rewrite literal literal derived goal rewrite abbreviated rewrite literal proving call also used maintain consistency proved conjuncts need proved simplicity automatically replaced literal rewrite automatically replaced note literal derived goal rewrite leading literal goal uniquely rewrite literal last goal rewrite simplification rule goal literal merges complementary literal make failure repeated transform goal disjunctive normal form loop rule literal rewritten goal rewrite rewrite rule formulated handle loop loop atom literal also atom loop literal literal also even loop nonmonotonic reasoning case loop literal loop loop loop even loop rewrite zero rewrite step goal literal rewriting literal applying simplification rule subformula applying loop rule loop literal proved rewrite goal rewrite system canonical system confluent terminating goal rewrite system sound stable semantics rewriting framework abduction relatively straightforward goal rewrite system rule illustrate main rewrite system rewrite failure recycling extra existence rewrite step existence contradicting rewritten giving next rewrite goal transformed distributive rule rewriting matter view rewriting generating dnfs thus rewrite goal conveniently derivation tree tree representing proving root node wherein branch leaf node corresponds rewrite eventually disjunct successful branch succeed resulting consistent next carefully constructed illustrate recycling yield answer recycling carried sometimes answer loop recycle answer replacing rewrite rule rule thus system trying branch left expanded goal rewrite last step make answer arises previously soundness pleteness proved next goal swers positively rewrite sume successful termination even loop recycle existed recycling produced wrong pare recycling clearly successful nonmonotonic reasoning fourth left succeed middle node fails recycling previously proved recycling terminating rewrite leading successful fails recycling recycling wrong belong stable thus recycling lead incorrect answer redundant show incidental true stable derivation look middle must rewrite system rule goal rewrite system rewrite literal rule goal rewrite system literal rewritten normal form rule rule rewrite rule rule rewrite rule recycling rule meant replace literal rewrite rule rule form representing failed derivation used literal rewrite rule must combine rewrite leading keep consistent recycling rule rewrite eral rule subset containing consistent recycling rule sequel rewrite system recycling rule well zero rule note termination confluence property remain hold system interested soundness completeness series rewrite system recycles answer goal rewrite system literal rewrite rule clark term rule literal rewrite system replacing rewrite rule literal rest sectin refer fixed thus drop subscript property provability rewriting loop rotation completeness recycling namely successful branch terminated loop rule captured rotated form property need rewrite dependency segment empty rewrite greek letter thus rewrite mean rewrite followed segment rewrite also used literal lemma loop rotation rewrite system rule literal succeeds branch literal succeeds loop literal rotated loop even loop resp rotated loop rotation remove node link node attach occurrence existence loop ensures round rotation occurrence node illustration rotation proceeds left seen type loop preserved literal tree remains unchanged soundness completeness recycling sound sketch proved induction system rule sound nonmonotonic reasoning sound show also sound need rewriting differs literal rule rewriting rewriting literal case rewriting terminate soundness need show stable generates root node show inductively fashion literal belong stable completeness show simply branch expanded eventually terminated simplicity branch rule used need case proved previously rule branch terminated loop latter expanding rewrite form loop loop exactly loop rewriting goal part rule loop cross form loop literal case loop rotation branch lemma terminating rewrite proving goal loop loop even loop resp thus recycle failed exactly puted rule form literal normal form recycling abductive rewrite system rewriting framework abduction straightforward framework clark abducibles abducible goal remain unless eliminated simplification rule goal rewrite system rule abduction well nonmonotonic reasoning goal rewritten disjunction abducible literal abducible literal consistent cycled rewrite procedure branch procedure used explanation nonground rule body must also head satisfied need instantiate body rule departure ground computation instantiated ground effectiveness idea recycling tested system logistics ilin domain truck package package outside truck truck moved truck package time package truck truck move package derive specification moving truck truck package initially package truck initially truck package moving package truck moving truck computing abduction successor term abducibles ilin instantiated domain system abduction true package initially inside truck subgoals want abduction framework recycling introduced independently idea recycling recycle previously goal arises even want abduction goal computing sometimes abduction goal recycle find dependency body rule head inductively easy want abduction form form form depended form abduction rule rule turned false computation relatively easy domain took took recycling time data refers regular rewriting system recycling refers rewriting system rule hard like recycling case significantly computation concluding reuse previously answering abductive rewriting system negation showed done also recycling system practice analysing dependency relationship computing logistics domain showed recycling domain good gain work want system automatically analyse decide best recycle computation sicstus prolog done notebook memory generating explanation regular rewriting system domain took minute reported comparable machine recycling logistics domain legend recycling recycling goal time
