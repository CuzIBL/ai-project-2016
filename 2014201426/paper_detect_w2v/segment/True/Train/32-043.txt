shop hierarchical ordered planner planning system shop plan task avoids goalinteraction arise planner planning relatively shop know step planning process highly expressive domain planning numeric computation test shop magnitude blackbox time tlpian even shop coded lisp planner coded wisdom planning hold totalorder forward idea excessive backtracking begun argue opposite true planner expressive domain used encode domain make planner highly prodigy veloso blythe fink veloso forward guided male backward chaining goal veloso blythe showed causal link commitment affect planner goal property linkability prodigy many time snlp mcallester tlpian bacchus kabanza forward axiom prune unpromising path bacchus test tlpian magnitude blackbox kautz selman koehler satplan kautz planning scheduling selman prodigy veloso blythe ucpop penberthy weld smith combine reduction backtracking prolog used successfully planner practical manufacturing planning smith game bridge smith argued analyzing success planning test smith formalization planner shop hierarchical ordered planner shop http term public license shop shop plan task avoiding make shop simpler planner nonlin tate wilkins currie tate umcp erol also make soundness completeness shop know step planning process considerably expressivity domain planner shop inferencing numeric computation agent shop expressive used highly domain test logistics shop magnitude blackbox time tlpian even shop coded lisp planner formal defines semantics used shop well shop planning brevity simplified shop semantics give informal feature full semantics formal feature clear nothing block make clear move semantics ground applicable list intent operator operator accomplished modifying remove atom atom primitive task usual term atom conjuncts unifiers horn clause adapted lisp horn clause prolog ground atom axiom horn clause axiom satisfies conjunct substitution satisfier entail satisfier satisfier modulo lexical renaming distinct task list form task name task task tarms task primitive primitive task exclamation compound compound task task list list task operator head primitive task deletion atom containing operator block form head compound task precondition conjunct tail task list pair clearing block plan execute plan intent satisfies thai accomplished task axiom task atom unifies satisfies applicable applying task list task list reduction plan list head ground operator plan produced operator head planning tuple task list axiom operator planning plan recursively empty exactly plan namely empty plan task atom remaining task atom case primitive plan primitive plan compound reduction soundness completeness shop planning procedure procedure procedure list task remaining task primitive plan zppexid else fail else reduction append fail lotem fail straightforward easy show sound finite also infinite incomplete prolog incomplete leftmost unexplored path infinite never path straightforward make infinite deepening user practice planning domain illustrate shop work domain defines domain show domain show plan shop domain domain want travel city mode transportation taxi foot taxi travel hailing taxi riding paying driver plus mile traveled travel hailing paying driver riding foot travel walking feasible walking weather thus plan layout city want much money weather like mentioned shop incorporates semantics illustrate transportationplanning domain tail precondition negation evaluated call lisp evaluator axiom taxi fare plus mile traveled precondition driver need sufficient money fare precondition satisfied tail passed lisp evaluator lisp quote backquote comma construct used prevent subtraction axiom tail used fashion axiom head taill head true taill true taill false taill true taill taill false true give planning scheduling expressivity restricted prolog axiom walking mile good weather mile precondition axiom tail shop prover satisfier prolog looking satisfier used tell shop hailing taxi taxi stand hailing pair precondition tail used fashion head prel taill prel reduction head taill prel true tail prel false true travel unless money taxi travel operator numeric cost default cost cost plan operator cost transportation domain illustrate domain easy shop believe planner sufficient expressive numeric computation need done part planning process tested shop planner blackbox kautz selman fastest planner planning competition mcdermott tlplan bacchus kabanza outperformed blackbox magnitude bacchus kabanza test planning shop block encoded planning gupta axiom operator tested shop tlplan blackbox blackbox distribution shop tlplan ultra blackbox ultra machine blackbox worst time increased quickly size shop tlplan shop tlplan guaranteed time blackbox blackbox largest memory tlplan took time shop plan test establish statistical significance clearly algorithmically tlplan plan encoded shop operator gupta avoid logistics shop logistics domain encoded procedure operator axiom remove useless contribute plan package mentioned goal empty truck city truck step repeatedly package final truck package need picked dropped pick drop lotem else package city city city truck city collect package city need moved bring airport package planning scheduling need airport load onto city else package package else package need picked truck else truck carrying package final package truck shop tlplan logistics blackbox tlplan distribution ultra blackbox memory used data blackbox machine show blackbox worst shop best blackbox magnitude slower shop tlplan significantly plan shop tlplan plan comparable size shop time tlplan magnitude difficult conclusion surprise shop much blackbox shop axiom contained sophisticated domain blaekbox operator surprise shop much tlplan think tlplan sophisticated seen pruning heuristic planning shop make easy planning block logistics domain tlplan planning basically statespace shop reduction reduction much even exponential case korf yang contention forward combined reduction scale planning planning blackbox data bacchus kabanza fahiem bacchus data came originally blackbox distribution machine silicon around also illustrate planning planning shop formalization evolved work manufacturing planning bridge ongoing work shop powerful noncombatant evacuation operation planning make embed shop creating shop java straightforward soundness completeness difficult soundness completeness presence call lisp evaluator begun experience shop solid formal footing developing handle operation shop expressivity control intend forthcoming acknowledgement work part grant army laboratory naval laboratory force laboratory
