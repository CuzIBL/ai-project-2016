explores style computation line processing pursued system cognitive architecture dual computational entity dual agent agent processor capable manipulation also activation agent activation spread connectionist rule processor proportional activation dual agent varies dynamically thus explored parallel computational resource dedicated promising degree reevaluated dynamically flexible system whole relationship connectionist activation energetic analogy processor conceptualized machine converting connectionist activation work manipulation delayed introduced cognitive illustrates variablespeed marker passing semantic network computational system operating must flexibility stated term task system turn flexibility ruled priori time pressure restricts actually case hard even demanding push opposite dual addressed ranging exhaustive backtracking early heuristic newell simon hill climbing elaborate control cognitive architecture anderson lebiere soar newell hofstadter hofstadter kokinov rest four idea candidatesolutions parallel cheap calculates rough computational resource system allocated unevenly favoring promising promise constantly taking whatever computational resource accordingly spreading activation seems ideally suited cheap continuously poll dynamically hand many task structured hierarchically suggests system system desirable property dinsmore alexandre build hybridization idea kokinov concentrate interface subsymbolic main idea processor proportional activation attached processor estimating processor upon concretizes varies dynamically activation varies next brief alternative literature variablespeed idea followed illustrative simulation machine learning processing manipulation done discrete step describing process branching loop unfolds linear step assumed step refined thus process step time operating system process parallel processor serf process turn priority control time allotted process scheme adapted activation priority centralized task hinders kind parallelism production system newell anderson step production production system activation anderson carpenter cognitive architecture anderson lebiere production operate declarative memory chunk activation chunk strength production subsymbolic parameter used conflict resolution stochastically production fire time execute production activation chunk matched temporal relationship used predict reaction time data psychological used control processing architecture control goal stack production match chunk stack firing thus little parallelism process process carried manipulating goal stack douglas hofstadter collaborator hofstadter mitchell french step codelet many codelets wait repository coderack chance codelets tend form codelet post successor coderack corresponds process coderack codelets belonging thus emulating parallelism urgency codelet urgency depend activation codelet coderack probabilistic biased favor codelets urgency sampling repeated many time process parallel proportional urgency respective codelets scheme socalled computational temperature parameter controlling degree randomness system temperature modulates strength bias urgency coderack temperature probability selecting codelet roughly linearly urgency high temperature codelets approximately chance regardless urgency freezing temperature bias overwhelming urgent codelet deterministically specialized codelets temperature dynamically restated term hofstadter parallel process urgency temperature kind vary dynamically sometimes phenomenon urgency explosion coderack french analogous inflation economics many codelets high urgency posted coderack thus inflating urgency codelets waiting therein urgency explosion undesirable consequence must prevent french task system parallel process addressed straightforward cognitive architecture dual kokinov represents population computational entity dual agent agent connectionist processor connectionist analogous unit neural network bundle labeled slot filled agent agent interacts agent referenced sending message activation activation dual agent agent regarded link activation agent represents system relevance surrounding dynamically threshold imposed activation agent fail reach degree relevance kept dormant processor agent proportional activation thus agent rapidly flow computation moderately agent slowly inactive agent agent threshold parallel central executive system work coordination consistency achieved massive message connectionist activation petrov kokinov system whole emerges style dynamic emergent computation great flexibility sensitivity kokinov presentation simply postulated processor dual proportional activation agent next concretize specification energetic analogy activation relationship connectionist activation architecture dual rest energetic analogy manipulation conceptualized work connectionist activation work supplied processor connectionist agent calculated integrating time computation activation work completed rapidly plenty slowly scarce lacking processing architecture categorized segment petrov operation smallest unit manipulation operation atomic deterministic elementary processor step operation agent intervening agent rigid process fixed priory specified step agent intervening emergent process distributed coalition interacting agent priory specification computation dynamically interplay pressure kokinov operation characterized consumption real work embedded operation operation consumption free parameter fixed ground empirical data scheme considerably freedom alternative consumption operation operation warranted consumption specified step latter convenient grain size step agent agent step thus communication concerned step treated unit disregarding constituent operation matter final outcome machine learning form message send agent appearance processor machine transforms connectionist work converted work overhead covering need processor coefficient ratio work coefficient characterizes processor processor cognitive processor highly automated task close processor novel task even adjusted dynamically kind rule practice processor operation step time operation calculated consumption operation must connectionist agent take time rate supply describes accumulation time integral activation activation dual must threshold processor work drop threshold even moment processing aborted lost thus inverse inverse time putting piece moment operation completed outcome operation moment message sent agent modification processor move next operation prescribed whole repeat processor idle produced connectionist agent unused accumulated word allowed amass expend thus attaining high peak energetic analogy computation benefit clear specification agent rapidly activation dynamically instant architecture dual time continuous scale frame occurrence dual agent independently agent thus architecture modification parallel hardware relationship connectionist activation specified recourse process finely parameterized parameter straightforward coefficient computation dual architecture lisp lisp lisp petrov computation rudimentary compiler translates lisp outline main feature lisp main plain lisp four operator analog respective lisp operator also lisp primitive progn setq also call recursion turn loop establishes step processor dual agent host complementary suspension primitive signal form suspendable announces suspension primitive lexical scope elsewhere conversely like ordinary progn treatment suspension primitive illustrated remaining suspension primitive used export import delayed specification dual postulate process smoothly instantaneous jump pause imposed jump postulated processor operation actually execute wrap closure stack stack foil code accompanying documentation upon request maintained processor dual agent balance stack balance supplied consumed balance processor wait nectionist connectionist machinery balance activation coefficient host time balance closure stack popped compiler analyzes code trap occurrence replaces lisp form closure arrange stack stack established enclosing progn form loop stack dual agent energetic balance scheme also parallel work agent care many intuition lisp violated call execute form body delay thus expects long call must used export suspendable must mailbox used transfer suspended destructive operation side mailbox data containing modified destructively make empty mailbox arrange suspended stored suspended computation completed catch mailbox open time bind accessible lexical scope processing work final processing also illustrates utility hybridization simulation widi cognitive ambr kokinov petrov simulation ambr everyday milk teapot also plate goal heat milk solves analogy case memory system past also semantic regularity domain faced target ambr retrieve analog target transfer retrieval mapping attempted parallel petrov kokinov ambr like entirely dual agent representational computational system memory population interacting agent milk liquid agent form backbone ambr semantic memory also standing agent form coalition episode process tentative correspondence note passive data agent entity heavily interacts peer agent milk sends message connectionist activation agent liquid processor liquid handle message sake concreteness concentrate computational used ambr marker passing stem semantic network tradition hendler form tool answering node semantic network path connecting idea node origin marked mark neighbor turn mark marker intersect path ambr intersection build hypothesis correspondence agent coalition word agent line agent note milk treat agent marker passing ambr hand hand spreading activation newly agent participating target agent dormant zero activation memory goal activation spread activation agent referenced agent parent milk brings activation threshold enters memory ambr turn milk activates agent coalition gradually enters note branch hierarchy receive unequal activation permanent transient permanent reflect domain embodied milk send activation beverage transient priming target teapot indirectly activates liquid agent vary episode activation population agent dynamically relevance agent varies enters memory sends marker parent turn spread marker superclass marker originated well color indicating origin target agent transcript illustrates marker passing process marker color meet latter detects intersection initiate agent ultimately creating hypothesis alternative hypothesis constructed parallel respective agent handle marker slowly population agent whole explores path parallel proportional dynamically agent mapped retrieved past episode vast possibility case machine learning biggest system attenuation marking attenuation many intersection useless overwhelm attenuation explored year reviewed hendler limitation link marker traverse outbranching node ambr need attenuation naturally architectural dual attenuation relevant marker reach agent left totally inactive spreading activation marker passing architecture processor handling marker consequence marker move rapidly semantic memory slow reach periphery area delineated activation marker intersection reported temporal reflecting usefulness task worthwhile stress marker passing dynamic emergent process whole coalition dual agent cooperatively final agent marker passing multitude relatively minor strength varies dynamically response processing energetic analogy instrumental desirable property
