associative processor proving deduction plan introduced pietrzykowski main feature separation unification deduction incorporation kind backtracking unification procedure unitization procedure unification graph straints case unification sufficient nnation backtracking step gained deduction plan memory part deduction plan unification graph duction unification part consist subpart keep clause term subpart cell control subprocessor production progress microelectronics realization powerful processor type processor associative processor associative memory oriented parallel access data stored make associative processor well suited handling process ligence process directed deduction proving associative processor able deduction plan incorporates backtracking deduction plan unification procedure used procedure schneide kaiserslautern postfach kaisorslautern deduction plan resolution refutation clause construct closed deduction plan succeeds clause proved unsatisfiable central idea deduction unification unification case unification conflict simply stop failure yield unification conflict namely deduction step reset processing intelligent backtracking node deduction plan clause eventually variant clause edge literal precidate sign negated negated labelled edge clause triple literal satisfying negation sign type edge type edge edge type refering backward clause literal clause plan edge deduction plan closed dilger schneider pair torms arising literal edge uniliable deduction plan pietrzykowski pietrzykowski ition type edge literal target literal literal clause literal incoming edge type target literal literal clause literal subproblem open outcoming edge literal subproblem closed open subproblems deduction graph closed node predecessor node path edge type teral edge preceding literal successor omit deduction plan deduction graph constructed deduction step edge drawing step plan node eight clause show closed deduction plan edge drawn literal target literal labelled type step plan construction edge drawn literal literal literal subproblems clause node predecessor dilger schneider edge labelled transformation step form sorting step transformation step classifies node node connection four sorting sists node directed edge labelled term dilger schneider soundness completeness unification proved dilger main unifiable term connection thus able simp acking graph edge belong edge node labelled deduction plan edge dilgerand schneider backtracking take backtracking step edge node removed plan thereby rther step parallel processing come open subprobleni parallel treatment dilger schneider dilger schneider practice work edge mean head able well processing separation deduction unification
