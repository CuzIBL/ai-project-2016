time explore tree visit leaf discrepancy make opposite distribution good leaf unfortunately rarely clear priori fixing adjust distribution leaf cost tree exploring sacrificing completeness flexible gathered weak show additive cost tree learned empirical generic tree show adaptive probing competitive systematic hard tree outperforms make many mistake boolean satisfiability partitioning confirm adaptive probing combine flexibility robustness take constructive heuristic searching tree find best leaf many tree arising practical explored time hope tree leaf chance optimal encountered sooner heuristic expand child node preferred heuristic backtracking visit child last branching node reconsidering next last branching node child discrepancy harvey ginsberg visit leaf path root discrepancy visiting leaf discrepancy corresponds implicit discrepancy lead worse leaf taking discrepancy deeper discrepancy harvey ginsberg korf mind assumes discrepancy equally disadvantageous visit leaf discrepancy anywhere path visiting leaf discrepancy discrepancy walsh discrepancy worse taking discrepancy shallower motivated idea accurate problemsolving reflects remaining subproblem opposed embodied faced obvious accurately reflect distribution leaf cost tree even particularly investigate adaptive tree cost leaf seen cost discrepancy simultaneously guide tree preconception relative choosing preferred child node probe root leaf sharpening leaf cost observe choosing child probability lead cost probing area tree seem good leaf stochastic incomplete used absence goal leaf generates full path root leaf visit incurring overhead proportional tree generates roughly node leaf adaptive probing lead leaf much inappropriate trap systematic exploring vast poor leaf adaptive probing even avoided pathological fraction describing adaptive investigate tree harvey ginsberg find adaptive probing outperforms systematic tree heuristic moderately inaccurate exhibit heuristic perfect bottom tree confirm also test combinatorial optimization partitioning goalsearch boolean satisfiability well satisfiability naive partitioning competitive long powerful heuristic adaptive probing outlined many extract leaf cost cost leaf cost reach root ordered list child distinct tree modeled separately tree branching parameter assumes choosing child node used discrepancy variance cost cost mean normal distribution variance easy learn probe root corresponds leaf cost cost taking cost leaf seen probing time binary tree give regression reported perceptron used parameter gradient cost prediction leaf cost leaf cost control learning rate gradient reported also worked well resulted little memory take linear time adjusts parameter leaf well impractical estimator also able track cost probing focussed variance straightforward cost variance observe leaf cost must variance cost onlycomplicationis variancecontributedby influenced mean cost cost variance even none formally normally distributed variance take accordingto probability probability recording time cost subtract away mean divide remaining variance distribute equally tree probing also straightforward trying minimize leaf cost want cost mean inaccurate sample want node cost merely wish probability truly best mean variance cost know many time tried probability mean test sample mean probability mean cost eliminate chance converging path probability choosing clamped tree ensures deviation probe adaptive tree probing assumes tree drawn additive discrepancy cost learns parameter tree efficiently exploitation balanced exploration variance cost time tried extends tree branching able built diverse discrepancy well many weighting captured systematic empirical investigate adaptive probing heuristic give precise control density good node heuristic conclusion domain also combinatorial optimization partitioning boolean satisfiability tree introduced harvey ginsberg discrepancy goal node binary tree goal distributed parameter control goal density control heuristic node goal case good case clearly root good node child probability configuration parent child good good good good good good good goal node tree walsh discrepancy leaf must examine goal empirical lazily deterministically tree leaf cost adaptive probing continue analogy satisfaction motivated leaf cost node path root able failure reaching leaf remaining prune tree probability leaf goal investigating goal relative path preferred heuristic show korf discrepancy ilds discrepancy adaptive probing tree heuristicbiased probing also selects preferred child largest probability allowed adaptive probing walsh raise heuristic root make heuristic leaf ilds modified incorporate take discrepancy tree adaptive probing quickly learns tree much even kind tree branch tree ilds waste time branching equally bottom heuristic accurate biased probing branch competitive probability goal tree linearly varying root leaf tree varying root leaf ilds actually surpass time fails vainly branch bottom tree ignorant fatal mistake tree solves leaf heuristic accurate steadfast devotion preferred child middle bottom tree show tree heuristic accurate time leaf median adaptive probing exhibit robust leaf leaf last visited leaf sense heavier tail cost distribution adaptive probing tree high adaptive probing avoids entrapment poor part tree expense adjustment partitioning divide disjoint used johnson simulated annealing korf discrepancy walsh discrepancy encourage difficult tree chance encountering perfectly even partitioning karmarkar used lisp arbitrary arithmetic used normalized normal distribution logarithm used leaf cost greedy straightforward greedy encoding sorted descending largest remaining preferring adaptive tree probing discrepancy ilds discrepancy node greedy partitioning node tree probing horizontalaxis represents leaf seen adaptive probing poorly like sampling surpasses seeing leaf successfully learns informative tree explores leaf productive systematic recall adaptive tree probing suffers overhead leaf generates probe root reuse node probe node leaf correlate well time leaf cost incrementally nodeordering heuristic node clarify plot ilds permitted visit many leaf demonstration overhead dominates searching partitioning view ilds comparably adaptive probing reuses node leaf path generating leaf ilds need explore discrepancy tree need fraction path leaf discrepancy tree incurs overhead adaptive probing never reuses node middle tree adaptive probing dominated clearly surpassed ilds ilds visited discrepancy tree bottom suggests tree adaptive probing ilds size sophisticated partitioning suggested korf heuristic karmarkar karp essential idea postpone assignment merely constrain pair decreasing constrained reinserted list remainingdifferencethey representationcreates greedy heuristic show leaf seen slight ilds adaptive probing eventually able learn equally sampling powerful heuristic greedy interior node overhead consideration show adaptive probing able make overhead suggest difficulty argues heuristic extraordinarily capturing relevant little remains consistent conclusion discrepancy ilds best partitioning node fraction confidence around mean clause mean boolean satisfiability also tested boolean satisfiability walsh clause filtered unsatisfiable used unit propagation occurring clause size preferred unit propagation left unassigned cost leaf unassigned empty clause encountered show percentage node walsh used argue suitability ilds purely sampling significantly crawford baker sampling scheduling converted satisfiability poorly adaptive probing slightly sampling noticeable distribution slight persisted size examined summarize examined systematic ranked differently make difficult even taking overhead adaptive probing seemed respectably best near best partitioning heuristic accurate work domain high branching interleaved meseguer work abramson used sampling game tree outcome selecting move also learning predict outcome static feature node optimization juille pollack used tree probing heuristic beam learning used bresina used stochastic probing scheduling introducing fixed bias favoring child preferred adaptive probingprovides bias beforehand presumably trial removing burden user also feasible flexible system othar hansson learning help allocate learns heuristic node node probability goal explore node subtree explores node greatest payoff unit vein discrepancysearch training probability node goal beneath distribution derive optimal searching adaptive probing ambitious merely cost goal probability optimization joslin clements adapts tree learns ordering greedy constructive learning tree ordinary heuristic relative benefit adapting ordering opposed ordering seem unclear adaptive probing slightly user identifying receive increased priority next probe adaptive tree probing spirit adaptive boese pbil baluja comit baluja davy promising generatenew fromthat tree natural heuristic guidance expressed constructive adaptive probing give freedom pursue incomplete heuristic whichever suitable promising area type heuristic combined greedy adaptive procedure grasp resende essence stochastic probing leaf adaptive probing principled relatively parameterfree probing step colony optimization dorigo gambardella accumulates informationgathered trial seen adaptive probing adaptive probing also boyan moore predict promising feature discrepancy cost user usual used tree used give geometry althoughadaptive tree probingseems superficially like reinforcement learning trying find good yield best differ transition deterministically probably never seen receive learning emphasis representing compactly facilitate independence collapse breadthof tree andadditivityof cost learning leaf essence generalize adaptive probing evaluated pursue restricted perhaps forcing cost smooth worthwhile distribute variance unequally feature besides helpful perhaps characterizing path investigated take experience bias favor heuristic beneficial also reuse learned domain adaptive probing used goal boolean satisfiability long progress leaf many quickly scale guide probing conclusion widely held intuition tree dominates hard poorly understood domain adaptive probing overcome built systematic tree procedure learning tree simultaneously guide seen incomplete heuristic heuristic accurate systematic discrepancy unknown characteror domain robustness adaptive probing make superior flexibility raise possibility difficult messy incomplete tree even viable alternative acknowledgment thanks stuart shieber pfeffer irvin schick rocco servedio jeff enos harvard many helpful suggestion comment work part grant abramson bruce abramson game pitman baluja davy shumeet baluja scott davy fast probabilistic modeling combinatorial optimization proceeding baluja shumeet baluja genetic explicit statistic michael mozer michael thomas petsche neural processing system tania optimal protocol thesis oregon eugene august boese kenneth boese andrew kahng sudhakar muddu adaptive combinatorial optimization operation letter boyan moore justin boyan andrew moore learning optimization boolean satisfiability proceeding bresina john bresina stochastic sampling proceeding philip long manfred warmuth quadratic loss prediction linear gradient ieee transaction neural network crawford baker james crawford andrew baker satisfiability scheduling proceeding page dorigo gambardella marco dorigo luca maria gambardella colony system cooperative learning traveling salesman ieee transaction evolutionary computation resende resende greedy adaptive procedure optimization gent walsh gent toby walsh phase transition annealed partitioning case proceeding hansson mayer othar hansson andrew mayer scheduler telescope monte zweben mark intelligent scheduling page morgan kaufmann francisco harvey ginsberg william harvey matthew ginsberg discrepancy proceeding page johnson david johnson cecilia aragon lyle mcgeoch catherine schevon optimization simulated annealing part graph coloring partitioning operation joslin clements david joslin david clements squeaky wheel optimization proceeding page juille pollack hughes juille pollack heuristic tree grammar induction proceeding page karmarkar karp narenda karmarkar richard karp differencing partitioning berkeley karmarkar narenda karmarkar richard karp george lueker andrew odlyzko probabilistic optimum partitioning probability korf richard korf optimal case partitioning proceeding korf richard korf discrepancy proceeding meseguer pedro meseguer interleaved proceeding walsh toby walsh discrepancy proceeding heuristic infinite guided lyapunov theodore perkins andrew barto massachusetts amherst amherst perkins barto infinite many heuristic terminate unsolvable fail terminate even show control lyapunov stability employed existence path find optimal lyapunovframework analyzing guidance formulating tractable heuristic illustrate idea simulated robot distinct artificial intelligence reliant continuous mathematics control recognized heuristic play role infinite boone davy property heuristic differ greatly finite infinite finite wellunderstood suit need find optimal also optimally heuristic variant cost time conversely suboptimal inadmissible heuristic suboptimal quickly find optimal pearl russell norvig able guaranteeing eventual arrival goal korf infinite none guaranteed property hold cost operator terminate admits pearl suboptimal terminate even closed list maintained guaranteed construct path goal korf difficulty infinite natural infinite heuristic must finite subset explored possibility arises reachable goal unreachable difficulty unavoidable infinite encode turing machine memory tape thus infinitestate undecidable address difficulty subclass examine lyapunov help address difficulty applicable lyapunov relies domain taking form lyapunov existence lyapunov used succeed incrementally construct path main goal show lyapunov help analyze formulate heuristic applicable find heuristic lyapunov lyapunov domain find path relationship lyapunov heuristic also demonstration idea control simulated robot concludes tuple arbitrary goal operator operator applicable operator succj incurs cost operator optimal summed cost operator cost infinite infimal cost path attained path thus optimal possibility ruled universal clow cost incurred operator pearl phrase cost zero refer property note finite operator unavailable made purely notational convenience generalizes case infinite operator operator applicable finite control lyapunov lyapunov originated stability system differential borrowed control theorist lyapunov control widely used control system vincent grantham lyapunov tool trying identify lyapunov control term lyapunov understood opposite goal control lyapunov property operator succj property asserts operator lead procedure continue indefinitely eventually must reach step impossible goal form domain benefit knowing correspondingly existence guaranteed suboptimal constructed trivially numerous lyapunov vincent grantham krstic many clfs linear feedback linearizable system analyzed lyapunov system industrial robot vincent grantham path planning yield lyapunovmethods connolly grupen many stabilization control studied also addressed lyapunov mean attitude control ship spacecraft regulation electrical circuit engine magnetic levitation stability network queueing system chemical process control levine lyapunov relevant many operator lead stronger operator descend operator descends applicable operator applicable operator satisfies succj fixed clfs establish guaranteed find optimal path infinite relationship clfs heuristic true operator descends cost zero terminate optimal path finite reachable infinite reachable arbitrarily tree operator everywhere existence finite reachable pearl must terminate optimal path alternatively hold ensures existence path path cost operator incurs clow cost node clow expand node thus node clow ever expanded mean must terminate optimal extend variant cost reachable finite form acyclic directed graph leaf graph goal thus great many safely case also guaranteed terminate optimal initialized bounding cost nearly reasoning clfs relate heuristic seems good heuristic nice property strictly monotonically decreased goal manhattan heuristic russell norvig path manhattan heuristic time even ultimate heuristic zero fail admissible overestimating optimal depend cost operator successor clfs capture connectivity cost operator inadmissibility scale multiplied scalar defining also overestimate overestimate elaborate possibility scaling clfs admissible heuristic scalability next lyapunovdomain well suited realtime mentioned rapidly path procedure construct path step best operator next best mean operator leading leaf plus heuristic lowest call repeated korf procedure realtime rightly dismissed guaranteed path goal even finite procedure appealing simplicity respond operator examine procedure guaranteed construct path goal operator descends heuristic terminate constructing path step operator appended growing step inevitably lead difficult case operator descending path travel cost zero used heuristic leaf terminate constructing path note assumes property must operator satisfies property notational convenience assumed satisfies property everywhere generates path goal definitely step generates tree best operator next cost operator leading leafstate best lowest tree cost operator heuristic leaf corresponds goal lemma step path best leaf iteration thus need establish side simply cost path plus heuristic left side corresponds path plus heuristic goal path minimizes step thus case hold goal iteration expands path thus path cost meet minimizes path must hold best path iteration forever constructing path goal lemma cost zero clow sufficiently contradicts thus construct path goal relationship decrease caused cost incurred property know satisfies property generating guaranteed property applying decrease fixed scaling applicable cost chigh operator incur case chigh chigh chigh chigh thus satisfying scheme chigh unknown overestimate chigh satisfying overestimate made scaling defines guess checking time violated scaling fixed rule ensures guess consistent data chigh served meet exceed finite construct path goal time sufficient path afterward generating meet tesauro galperin bertsekas mean defining cost path repeated reach evaluated actually constructing path reader meet satisfies evaluating leaf path goal need constructed game playing control tesauro galperin bertsekas robot briefly illustrate applying requiring control simulated robot depicted angular joint angular joint velocity joint joint velocity column vector goal nearly stationary horizontal configuration dynamic mechanical system robot naturally continuous time robot robot craig represents gravitational force represents coriolis force inertia matrix actuator torque joint continuous time choosing feedback linearization linearquadratic regulator vincent grantham controller form operator next feedback linearization reparameterizing control torque term vector robot dynamic particularly linear form control applicable controller rule choosing thus yield main benefit controller asymptotically bring specified target lyapunov used getting goal five controller controller target configuration configuration able bring lyapunov constructing larm stqs symmetric definite matrix produced computation chooses controller target configuration multiplied tends control torque bring target configuration multiplied controller torque joint regulates joint configuration tends fold swing around joint regulating joint configuration operator construct five operator operator operator corresponds five controller succj started andcj time cost applying operator continuous time integral quantity angle joint torque torque hold steady gravity configuration kind control robotics term reflects desire move term penalizes control torque extent differ cost operator zero operator also controller controller time derivative larm lbarm constantly lbarm torque supplied lbarm unknown lbarm zero operator thus step larm unknown cost applying operator tested operator averaging nine configuration guaranteed find optimal operator heuristic leaf zero scaled larm know scaling larm configuration initialized scaling zero guaranteed producing cost node expanded virtual time robot dynamic simulated simulated time closely node expanded also time spent simulating path goal time used magnitude simulated time code optimized give cost produced controlling achieving operator significantly cost produced close anticipated good path constrained descend larm freedom ascending significantly term expanded node simulation time guaranteed guaranteed path goal produced worse produced significantly much operator produced excellent surprising apparently yield excellent distinguishing good operator unexpected slightly worse increased dramatically simulation time resulted heuristic leaf simulation trajectory produced good little yield good able seems fast response produced significantly produced tenth shallowest rollout hundredth simulation reflect expectation guaranteed find guaranteed find depend duration operator four many qualitative excellent became competitive term node cost expanded time node cost expanded time versely exhausted memory crashed grows exponentially optimal iteratively construct linear governed independently succeeded producing four simply control trajectory take freedom suggests alternative mean realtime initially high decrease find finer temporal resolution conclusion demonstrated domain form lyapunov help analyze formulate lyapunov existence used show optimal procedure find extending heuristic acknowledgment work funded foundation grant opinion conclusion recommendation expressed necessarily reflect view foundation theodore perkins also graduate fellowship massachusetts amherst bertsekas bertsekas tsitsiklis rollout combinatorial optimization heuristic boone boone control acrobot robotics automation page connolly grupen connolly grupen harmonic robotics robotics system craig craig robotics mechanic control davy davy moore applying reinforcement learning proceeding fifteenth artificial intelligence page korf korf heuristic artificial intelligence krstic krstic kanellakopoulos kokotovic nonlinear adaptive control john wiley york levine levine control handbook pearl pearl heuristic addison wesley publishing company massachusetts russell norvig russell norvig artificial intelligence englewood cliff jersey tesauro galperin tesauro galperin neural processing proceeding ninth vincent grantham vincent grantham nonlinear optimal control system john wiley york heuristic hard olivier dubois gilles dequen paris jussieu paris cedex france laria universite picardie jules verne moulin neuf amiens france dequen late insight gained inspired physic corresponds fixed truth assignment satisfying clause show invaluable viewpoint satisfiability transition also play role hard heuristic belonging backbone branch node tree procedure give magnify heuristic yield best handle unsatisfiable hard satisfiability garey johnson appeared posse property great computational clause fixed literal exhibit satisfiability phase transition phenomenon transition probability difficult property initially mitchell studied numerous crawford auton gent walsh practical manifestation clause exactly literal manageable size boolean fixed ratio probability satisfiability fall abruptly near near pass threshold leaving aside work micro device well solvable time threshold peak difficulty peak grows exponentially intriguing property correlating satisfiability threshold hardness stimulated many well eliciting phase transition phenomenon progress hard satisfiability phase transition attracted much physicist sophisticated statistical physic evolved past predict analyze phase transition viewpoint satisfiability transition shed insightful introduced monasson backbone corresponds fixed truth assignment satisfying clause maxsat relevance fact satisfying assignment satisfiable proved surely exponential threshold boufkhad dubois corroborated maxsat physic symmetric ansatz backbone turned play role scaling window transition bollobas show backbone also play role efficiently hard particularly easiest handle studied literature hard ratio around experimentally close threshold last year definitely determining classical procedure davis progress achieved hard clause roughly computing time clause year computing procedure progress viewpoint dealing clause remain satisfied successive node tree trying mainly reduce much size clause satisfied backbone viewpoint focusing clause satisfied thus viewpoint size tree procedure efficiently give practically branching heuristic belonging backbone show brings best heuristic magnify heuristic combining heuristic procedure literature unsatisfiable hard time best suitable particularly hard solvable procedure computing time relatively acceptable reported bring beat view misgiving expressed gerard possibility progress went suggest best close limitation backbone procedure need generalize backbone clause necessarily size backbone literal truth true assignment satisfying clause handle unsatisfiable remainder unsatisfiable unsatisfiable clause built literal derived boolean refutation tree procedure leaf inconsistency detected subset clause satisfied literal true path root leaf call assignment satisfying backbone practice case leaf inconsistency detected mean assignment refuted equality obtains precisely literal constitutes backbone assignment refuted leaf distinct form disjoint lowering leaf intervene namely size must equality must hold time approximately consideration extend node case node represents assignment refuted node viewpoint best reduce size root nearest node literal constitute backbone relative subset clause nearer node root satisfied clause tend crucial assignment giving false literal backbone refuted subset clause size refutation derived refutation tree assignment size illustrate clause form backbone clause reduces literal literal preferential branch stemming root branch literal refutation branching twice applying bringing forward backbone nearest node thus indifferently note backbone form resolvent literal inferred applying classical resolution next heuristic embody foregoing partially heuristic generic node refutation tree node heuristic selecting literal belong hypothetical backbone subset clause smallest size idea sustaining heuristic literal constrained true clause clause possibility true time clause possibility true false literal clause binary ternary clause must possibility binary ternary clause literal false relevant binary ternary clause proc else backbone heuristic heuristic ratio weighting matter apporximation take ratio probability assignment simply ratio heuristic exemplified allusion precise ternary clause must successively brought play reach conclusion true aforementioned fixing thus ternary clause used concluding true hand need binary clause used ternary binary clause fact literal false give rise computational heuristic node refutation tree literal must evaluated comparable heuristic embodies stated recursive call namely augmented formal heuristic remains type clause binary unary clause derived eliminating clause unary binary clause binary subclauses derived ternary clause binary subclauses false true virtue unary clause false take showing heuristic clause clause must literal appearing clause know thus regard unary clause owing proceeding thus clause assessed heuristc pure procedure node tree procedure unassigned branching node consideration favor opposite literal belong backbone relative subset clause heuristic heuristic type used heuristic appearing fastest sample step ratio mean ratio computation time heuristic computation time heuristic heuristic plotted smooth line connecting consecutive show evolution mean ratio ratio seen markedly accelerated growth size hard unsatisfiable mean time ratio heuristic heuristic hard unsatisfiable give mean size tree heuristic demonstrate backbone size heuristic heuristic mean node mean node size tree built heuristic heuristic hard unsatisfiable picking backbone improving heuristic detecting literal must belong backbone relative clause clause literal belonging backbone illustrative literal belong backbone relative clause possibility leading true necessarily hold take clause literal possibility true possibility simply necessarily belongs backbone clause conversely literal clause belong backbone true lead inconsistency generalizes classical treatment inconsistency node tree csat posit take clause criterion adopted literature literal literal clause treatment inconsistency true lead inconsistency unit propagation backbone viewpoint belong backbone mentioned case classically handled sixth clause clause unit propagation detects inconsistency hand backbone viewpoint changing classical criterion treatment inconsistency recognized clause containing contribute clause belong backbone relative possibility true false inconsistency unit propagation consequence true clause backbone inspired stated pickback briefly mention show true lead inconsistency false lead unit propagation inconsistency clause subsumes true lead inconsistency false deduct false thus validating stronger pickback heuristic procedure cnfs comparative pitting cnfs best performer tableau ntab crawford auton posit freeman csat dubois sato relsat bayardo schrag devoted structured carried experimentation classical literature clause drawn independently built drawing fixed negating probability backbone used cnfs much covered wide size going drawing ples hardware consisted linux operating system parative thus comparative give mean size tree scrutiny sato relsat ntab csat posit cnfs sample sample mean tree size expressed branching node listed separately satisfiable unsatisfiable time cnfs ntab csat posit case unsatisfiable time satisfiable ratio depend size observe time ratio cnfs size show tree size cnfs translate computation time time ratio cnfs ntab csat posit seen vary unsatisfiable satisfiable case tree size thus computation time gain show cnfs unsat mean node mean node mean node million sato unsat unsat ntab unsat csat unsat posit unsat unsat cnfs unsat size tree hard sato relsat tableau csat posit cnfs size term tree size well computation time pursuing line experimentation best cnfs sample show mean computation time curve size hard unsatisfiable mean computation time cnfs hard unsatisfiable cnfs unsatisfiable sample unsatisfiable gain previously seen cnfs time time unsat mean time mean time mean time sato unsat unsat ntab unsat csat unsat posit unsat unsat cnfs unsat mean computation time hard sato relsat tableau csat posit cnfs precise mean tree size clause unsat mean node million mean time cnfs cnfs size tree mean computation time hard computation time listing satisfiable unsatisfiable case separately tree size gain cnfs noticed entirely computation time gain gain cnfs unsatisfiable probably reflects high cost heuristic hope latter lead computation time gain whole evolution gain ratio cnfs computation time tree size curve clearly demonstrate gain cnfs hard reader show cnfs computation time node sample regarded selman reach approximately machine hour also irrespective satisfiability mean time cnfs hour size hard unsatisfiable progression unsatisfiable unsat mean node clause million mean time mean computation time size tree cnfs hard formulaes conclusion last procedure propositional seen real much spectacular case stochastic suggested close limitation giving rise fear progress difficult unsatisfiable remain reach incorporating mainly heuristic backbone introduced physic viewpoint classical heuristic thus able best hard ratio size unsatisfiable feasible lesson drawn significantly enhance deep paramount well aiming comprehension essential bayardo schrag bayardo schrag proc conf artificial intelligence page aaai bollobas bollobas borgs chayes wilson scaling window transition boufkhad dubois boufkhad dubois prime implicants crawford auton crawford auton crossover satisfiability proc conf artificial intelligence page aaai davis davis logemann loveland machine comm assoc comput mach dubois dubois andre boufkhad carlier unsat dimacs series discrete math theoret comp page freeman freeman hard procedure artificial intelligence garey johnson garey johnson intractability guide freeman company francisco gent walsh gent walsh phase transition proc european conf artificial intelligence page ecai gerard gerard branching rule hard unsatisfiable proc european conf artificial intelligence page ecai narrow tree satisfiability processing letter mitchell mitchell selman levesque hard easy distribution proc conf artificial intelligence aaai monasson monasson zecchina kirkpatrick selman troyansky determining computational transition page selman selman kautz mcallester propositional reasoning proc sato propositional prover proc internat conf automated deduction page lncs backbone optimization john slaney automated reasoning australian canberra australia toby walsh york york england backbone optimization show optimization like graph coloring resemble hardness positively correlated backbone size optimization like block planning traveling salesperson hardness weakly negatively correlated backbone size cost optimal positively correlated backbone size optimization like partitioning type find observe backbone size hardness eliminate symmetry trivial reduction size make hard correlated hardness rapid transition solubility cheeseman mitchell picture much clear optimization computational wealth largely optimization empirical like carried borrowed statistical physic backbone percolation lattice used fluid flow forest fire undergoes rapid transition cluster size threshold connectivity backbone lattice lattice transport fluid side pressure gradient backbone whole cluster minus dead size backbone property lattice like propositional satisfiability analogous backbone introduced influence hardness monasson extend optimization cost optimal backbone satisfiability backbone literal true monasson size backbone fragility correlated hardness parkes monasson singer achlioptas backbone assign absolutely wrong matter done backbone mean many opportunity make mistake waste time searching empty subspace correcting assignment backbone clustered hard find like gsat walksat systematic like backbone coloring graph fixed color culberson gent permute color pair node graph frozen color edge frozen pair backbone simply frozen pair generalize idea backbone optimization framework assigning backbone frozen fixed outcome optimal case assignment backbone simply assignment optimal relevant isomorphism assignment graph coloring color node backbone assignment blue trivial permutation color assign graph coloring optimization color color graph pair node graph coloring optimization frozen color optimal coloring edge frozen pair chromatic graph backbone frozen pair graph node edge normalize size backbone backbone size graph coloring culberson gent investigate frozen taking list edge graph measuring backbone size resulting graph frozen graph coloring culberson gent averaging ensemble graph obscures rapid backbone size frozen node graph backbone size plotted edge varied step backbone size normalized chromatic plotted cost color graph optimally graph node visited plotted plot frozen node graph chromatic distinct peak backbone size chromatic backbone size collapse plot cost find optimal coloring node graph find optimal coloring mike trick upon brelaz dsatur brelaz cost peak chromatic peak backbone size optimization closely resembles hard coloring optimal thus correlation backbone size optimization cost traveling salesperson next traveling salesperson traveling salesperson optimization frozen optimal tour backbone simply frozen backbone size optimal tour note impossible backbone size backbone size computing backbone highlight connection sensitivity backbone matrix optimal tour backbone sensitive matrix backbone explore backbone optimization euclidean city varied generating backbone optimal tour branch hungarian heuristic cost computing backbone backbone quickly increased scatter plot backbone size cost find tour optimal pearson correlation coefficient normalized backbone size node visited find tour optimal suggests slight correlation backbone size optimization cost took node visited varies magnitude conclusion spearman rank correlation coefficient distribution free test determining monotonic data spearman rank correlation explore optimization cost plot cost optimal tour pearson correlation coefficient normalized backbone size node visited find optimal tour suggests correlation backbone size cost conclusion spearman rank correlation coefficient normalized backbone size cost find tour optimal logscale normalized backbone size euclidean city node visited branch logscale plotted normalized backbone size straight line give data graph coloring optimization significantly conjecture easy tour optimality cost proving tour optimal negatively correlated backbone size roughly cancel correlation cost optimal tour backbone size cost proving tour optimal negatively correlated backbone size backbone many optimal tour like branch explore many part sure none tour partitioning seen optimization resemble depend cheap optimality partitioning domain optimality cheap correlation optimization cost backbone size optimality cheap weak correlation optimization cost backbone size difficulty defining backbone partitioning partitioning make type korf decides pair opposite korf backbone thus pair opposite greedy partitioning decides normalized backbone size cost find optimal tour logscale normalized backbone size city straight line give data backbone thus must break symmetry irrevocably placing largest fortunately observe normalized backbone size frozen averaged backbone size varied step backbone size normalized plot frozen averaged frozen gent walsh distributed prune arithmetic size optimal monotonically phase transition behaviour backbone size sharp backbone size even best heuristic like fail find backtrack free phase gent walsh backbone tends optimal rapid transition backbone size graph coloring culberson gent look jump backbone size normalized backbone size optimization cost logscale normalized backbone size partitioning straight line give backbone neither empty give scatter plot optimization cost korf backbone size data fall optimization backbone optimization optimality easy optimization cost positively correlated backbone size data backbone pearson correlation coefficient spearman rank correlation coefficient optimization backbone cost proving optimality cost optimal rapid transition backbone size witnessed backbone block planning fourth planning raise backbone also highlight considering size eliminating trivial block planning plan backbone move optimal plan move simply block goal trivially plan plan backbone informative considering deadlock deadlock block moved successor goal deadlock broken putting block move decided generating plan easy linear time slaney thiebaux move ideal many deadlock block singleton deadlock give forced move inflate backbone detectable time quickly removed consideration move plan excluding break singleton deadlock backbone move optimal distributed block block goal specified optimal used reported slaney thiebaux hardness branch tree slaney thiebaux cost peak tower goal reach tower plotted backbone size tower peak around mean backbone size block optimization tower goal hardness sense correlated backbone size must carefully size also peak tower deadlock size tower dominated singleton deadlock size backbone proportion size show dependence tower feature block block crude size heart block planning generating hitting collection deadlock size block inclusion hitting size dominates cost overshadowing backbone size next filtered size restricting size size hardness plan optimal plan plan regarded measuring cost optimal proving optimality normalized backbone size cost optimal proving optimality backbone size proportion size block size straight line give data show optimal tends harder backbone familiar clustered empty data pearson correlation coefficient spearman rank correlation coefficient proving optimality hand tends slightly backbone data backbone ignores close optimal many willing accept close optimal frozen optimal give backbone empty tour give scatter plot size backbone partitioning cost optimal plot seen data fall cost positively correlated backbone size correlation backbone size optimization cost data backbone pearson correlation coefficient spearman rank correlation coefficient cost hard hardest incomplete normalized size cost optimal logscale normalized backbone size partitioning straight line give backbone neither empty work moment used show satisfiability phase transition exponentially kamath proved whilst clustered kamath verified empirically parkes showed many frozen free parkes argued hard clustered distributed monasson introduced computational monasson behaves like whilst behaves like monasson singer rapid backbone size continuous discontinuous transition onset hardness exploited backbone also studied kirkpatrick toulouse boese boese show optimal tour well tended highly clustered boese heuristic optimization identify eliminate backbone schneider backbone satisfiability spine bollobas literal spine clause satisfiable subset literal false satisfiable backbone spine coincide backbone spine monotone clause ever enlarges conclusion studied backbone optimization optimization like graph coloring resemble hardness positively correlated backbone size optimality easy optimization like block hardness weakly negatively correlated backbone size optimality hard cost optimal tends positively correlated backbone size optimization like partitioning type lesson learnt backbone indicator hardness optimization well heuristic identifying backbone reduce difficulty like randomization rapid restarts gomes also backbone essential eliminate trivial like symmetry trivially forced considering hardness parallel computation statistical physic idea area like spin glass percolation acknowledgement epsrc fellow wish thank achlioptas achlioptas gomes kautz selman generating satisfiable proc conf boese boese cost traveling salesman ucla bollobas bollobas borgs chayes wilson scaling window transition brelaz brelaz color vertex graph communication cheeseman cheeseman kanefsky taylor really hard proc ijcai page culberson gent culberson gent frozen graph coloring gent walsh gent walsh heuristic partitioning computational intelligence gomes gomes selman mcaloon tretkoff randomization backtrack exploiting profile hard scheduling conf artificial intelligence planning system kamath kamath motwani palem spirakis tail occupancy satisfiability threshold conjecture kirkpatrick toulouse kirkpatrick toulouse configuration traveling salesman physique korf korf optimal case partitioning proc ijcai mitchell mitchell selman levesque hard easy distribution proc conf page monasson monasson zecchina kirkpatrick selman troyansky determining computational transition parkes parkes clustering phase transition proc conf page schneider schneider froschhammer morgernstern husslein singer searching backbone parallel traveling salesman comput phys commun singer singer gent smaill backbone fragility cost peak artificial intelligence singer singer gent smaill proc ecai slaney thiebaux slaney thiebaux linear time planning block proc conf page slaney thiebaux slaney thiebaux hardness optimisation proc ecai page cooperative nogood recording cyril terrioux lsis equipe inca marseille cedex france terrioux framework satisfaction scheme cooperative parallel cooperation realized exchanging nogoods instantiation associate process nogoods regulate nogoods nogood recording phase size tree nogoods differ ordering heuristic experimentally linear superlinear consistent like inconsistent satisfaction main task determining instantiation satisfies task resolution parallel used parallel heuristic heuristic suitable tested graph coloring hogg williams classical resolution gain seem hogg williams recommend cooperative parallel cooperative parallel idea guide resolution cryptarithmetic clearwater hogg huberman graph coloring hogg huberman hogg williams show gain time case exchanged correspond consistent instantiation martinez verfaillie cooperation exchanging nogoods instantiation exchanged nogoods permit prune tree expect find quickly forward checking nogood recording noted schiex verfaillie realized gather process simulates parallelism turned monoprocessor system experimentation csps show cooperative weak gain give doubt idea martinez verfaillie scheme cooperation nogoods turned system processor associate process avoid raised cost communication nogoods role regulate nogoods sending receipt message phase size tree nogoods main answer open martinez verfaillie cooperative parallel nogoods show experimentally plan give csps nogoods scheme describing nogoods phase csps satisfaction quadruplet ables take domain subject represents allowed binary note afterwards binary csps idea csps instantiation consistent inconsistent indifferently term assignment instantiation note instantiation meaningful form consistent instantiation instantiation induced forward checking filter said nogoods property part give main property nogoods schiex verfaillie nogood corresponds assignment formally schiex verfaillie instantiation subset nogood nogood justification note subject arity nogood note restriction inconsistent assignment corresponds nogood converse hold calculate justification nogoods introduced schiex verfaillie extend scheme assignment induced nogoods hold used corresponds schiex verfaillie inconsistency detected domain empty failure justification correspond formalizes creation nogoods assignment unassigned remain nogood next make nogoods nogoods build nogood nogood schiex verfaillie nogood nogood word keep instantiation inconsistency thus nogood arity strict build nogood nogoods instantiation unassigned assigning nogoods nogood nogood used backjump tighten case nogoods pruning tree explores tree like forward checking take nogoods nogoods used prune tree main drawback nogoods potentially exponential nogoods recording nogoods arity unary binary nogoods schiex verfaillie schiex verfaillie nevertheless idea nogoods independently differs ordering heuristic thus tree cooperation exchanging nogoods nogoods produced prune part tree resolution nogoods communicated find nogood must send message inform partner nogoods cost communication prohibitive even process nogoods role inform existence nogoods accordingly find nogood informs communicates part sends message back quickly resolution next paragraph devoted role contribution scheme nogoods role task base nogoods communicate nogoods base nogoods tightening unary binary nogood corresponds unary resp binary nogood communicated base cost communication must inform nogoods nogood said size tree next characterizes usefulness nogood arity instantiation characterization usefulness unary nogood binary nogood instantiation binary nogood instantiation resp resp resp resp removed terrioux explicite receive nogoods usefulness unary nogood communicated find binary nogood communicated find instantiation case certify nogood backtracked sending nogood receipt view cost communication instantiation nogood conveyed communicate justification nogood form thanks forbid justification contribution part show contribution nogoods scheme message exchanged nogoods exchanged unary nogoods binary note nogoods double find independently nogood scheme communicates nogoods find message sent unary nogoods binary scheme nogoods sent convey message unary nogoods binary sends unary nogoods nogoods correspond nogoods minus double likewise binary nogoods double communicated remaining binary nogoods restricts recipient message sent binary nogoods scheme message unary nogoods message binary worst case scheme message scheme little scheme fewer message phase going nogood message developing node filtering phase analyze nogoods size tree stopping branch lead enforcing filtering unary nogoods phase corresponds permanent deletion backjump phase nogoods phase unary nogoods instantiation nogood backjump empty nogood nothing empty empty nogood terrioux binary nogoods phase corresponds enforce filtering backjump describes done phase binary nogoods phase binary nogoods instantiation nogood backjump deepest resp filtering resp resp resp resp resp filtering resp resp resp empty nogood resp terrioux phase unary nogoods deletion permanent phase case compromise property next paragraph devoted maintening remind property property instantiation built fcconsistent backtrack like cancel filtering assignment restores domain domain wiped filtering empty restoring ensues preserve property communication phase property compromised tree explored cooperates assignes enforce assigning remove filtering assignment deletes assignes visit subtree subtree failure receives unary nogoods forbid assigning backtracks unary nogood forbids backtracks assignes raise namely empty permanent removal unary nogoods instantiation property hold next characterizes fcconsistent instantiation exploration subtree rooted remain forbidden nogoods exploration nogoods recorded exploration none removed exploration restored cancelling filtering assignment terrioux ensues case receipt creation nogoods filtering induces existence empty domain thus property hold checking domain wiped cancelling last filtering domain backtracking domain empty emptiness domain thanks lemma determines origin lemma recording receipt nogood induce loss property terrioux lemma enables emptiness domain empty recording receiving nogood emptiness induced receiving nogood phase backjump phase empty domain receiving nogood make keep fcconsistent instantiation backjump phase empty nogood backjump empty instantiation empty nogood unary empty nogood binary note backtrack empty instantiation inconsistent terrioux emptiness induced recording nogood recording nogoods wipe domain communicate nogoods easy take nogoods protocol work produced frost dechter regin take parameter build domain size binary tuples forbidden give afterwards concern varies near satisfiability threshold corresponds difficulty graph time reduce resolution resolution solves experimentation realized intel pentium processor memory heuristic distinct tree heuristic heuristic heuristic choosing choosing differently applying heuristic regin next assign minimizes ratio domain binary heuristic classical heuristic size domain varies instantiation degree thanks nogood regard next assign appearance reverse unless specified half appearance domain half reverse consistent consistent inconsistent paragraph resolution serie parallel ratio ratio linear superlinear sublinear varies linear superlinear linear superlinear sublinear note also decrease consistency observe consistent remains linear superlinear note decrease inconsistent appearance sublinear lack inconsistent infers decrease explanation take explaining gain origns cooperation scheme nogoods calculating ratio cooperativeversion observe note cooperative observe ratio near consistent solid line mean good mostly ratio remains ratio cooperative nogoods participates gain inconsistent dashed line ratio consistent word mostly cooperation contribution cooperation inconsistent must underline predominant role heuristic heuristic heuristic reverse exchanging nogoods visit tree exchanging nogoods explores part tree thanks nogoods consistent stop soon decrease scheme like usual lack cost communication make case explains decrease ordering half appearance half reverse appearance realise message node explores tree differ used heuristic ordering heuristic ordering near diversity resolution thus diversity lack diversity main communication decrease message real contribution real contribution cost communication scheme cost message presence communication binary nogood twice unary nogood binary nogood pair pair unary nogood ratio cost communication scheme scheme consistent inconsistent belong observe ratio scheme note contribution thus hope cost communication penalizes scheme precisely note communication unary nogoods scheme foreseeable case unary nogoods remove double probability find simultaneously nogoods thus scheme regarding cost communication binary nogoods scheme significantly cheaper economy explained fact binary nogoods communication scheme best binary nogoods significantly unary nogoods conclusion limiting exchanged message avoids lack time message receipt useless nogoods conclusion work idea martinez verfaillie scheme cooperative parallel exchanging nogoods experimentally observe linear superlinear inconsistent consistent nogoods form cooperation note decrease communication lack diversity work diverse heuristic well extend scheme applying maintains consistency permit combine incomplete like hogg williams diversity generalizing form cooperation regin regin combined heuristic forsake hard proc page clearwater clearwater huberman hogg cooperative satisfaction hogg huberman hogg huberman best cooperation nadel stein lecture system volume page hogg williams hogg williams really hard cooperative proc aaai page hogg williams hogg williams gain parallelizing hard proc aaai page seattle martinez verfaillie martinez verfaillie echange nogoods pour resolution cooperative satisfaction contraintes proc cnpc page dijon france french schiex verfaillie schiex verfaillie nogood recording static dynamic satisfaction proc ieee ictai terrioux terrioux cooperative nogood recording high degree graph toby walsh york york england show node high degree tend infrequently graph wide graph real alternative generating graph give realistic topology show watt strogatz narrow distribution node degree hand barabasi albert give graph node high degree topology graph benchmarking node high degree topology cost coloring graph long tail cost graph disappears graph also constructed node high degree conjecture size backbone pair edge frozen color topology graph practice differ graph topological hardness exploitable barabasi albert graph derived area diverse wide electricity distribution node high degree graph size edge density barabasi albert redner citation graph node high degree render whilst receive citation cited time citation presence node high degree graph scheduling node high degree difficult resource scarce adjacency graph hamiltonian circuit many node high degree easy many path node hard stuck node heuristic like brelaz graph coloring heuristic brelaz node degree structured show node high degree tend infrequently graph wide real test case exactly studied walsh alternative generating graph give nonuniform graph barabasi albert watt strogatz hogg ultrametric explore node high degree graph coloring graph type graph used graph node edge sampling edge graph node edge edge fixed probability property distribution degree node graph probability node exactly poisson distribution precisely node probability pair node node degree poisson distribution decay exponentially node high degree unlikely cumulative probability probability node node whilst smoothly varying graph behave erratically real graph cumulative probability monotonically tends give clearer picture show cumulative probability normalized node degree graph lative probability normalized degree graph rapidly step degree node tightly clustered around degree real graph next studied distribution degree node real graph studied walsh graph coloring looked real graph coloring dimacs benchmark focused register allocation real code demonstrates cummulative probability normalized node degree register data register allocation converted graph coloring node edge graph graph size edge density dimacs graph coloring benchmark gave skewed distribution degree node dimacs benchmark gave cumulative probability distribution degree node graph size edge density register allocation node much degree node degree node graph twice degree million chance node graph size edge density degree hand node degree half degree million chance node graph size edge density degree plateau middle graph node degree node degree degree node graph tightly clustered around plateau around degree seen register allocation dimacs benchmark naturally modelled graph coloring node color tested real industrial archive toronto demonstrates dataset also skewed distribution degree node benchmark gave curve graph node edge timetabling node much degree node degree node graph nearly time degree chance node graph size edge density degree hand node degree approximately tenth degree chance node graph size edge density degree walsh suggests sparse dataset clustering node dense obvious indication distribution node degree quasigroups quasigroup latin column quasigroups practical like sport tournament scheduling factorial open finite mathematics existence quasigroups property answered satisfaction fujita quasigroup benchmark generating hard satisfiable achlioptas quasigroup binary satisfaction cummulative probability normalized node degree data earl haig collegiate converted graph coloring node edge graph graph size edge density industrial archive toronto gave domain size graph clique column clique size node graph node cumulative probability step node graph quasigroup degree quasigroups suffer limitation benchmark brelaz heuristic brelaz degree node graph well quasigroup realistic benchmark variability degree node tend give graph narrow distribution degree node generating graph look give realistic graph watt strogatz showed graph many social system neither regular topology node highly clustered path watt strogatz graph tend real walsh graph topology rewire regular graph like ring lattice watt strogatz gent ring lattice node highly clustering whilst rewiring introduces rapidly reduces path unfortunately graph constructed tend wide distribution degree node unlikely node high degree rewiring peak around lattice degree converges poisson distribution graph extensive rewiring cummulative probability normalized node degree graph topology rewiring ring lattice node neighbor rewiring probability graph graph size edge density plot cumulative probability node degree graph topology rewiring ring lattice graph distribution node degree narrower graph node edge lack variability degree node graph limitation real graph absence node high degree heuristic like brelaz node degree find graph harder color graph wider variability node degree find variability node degree seen real graph studied ultrametric graph realistic hogg grouping node hogg ultrametric node grouping binary tree measuring tree ancestor pair node ultrametric joined edge relative probability graph purely graph hierarchical clustering edge nearby node give cumulative probability distribution node degree graph ultrametric hogg definite broadening distribution node degree graph node degree ultrametric graph graph node ultrametric graph cummulative probability normalized node degree ultrametric graph ultrametric topology node edge give degree graph graph size edge density node node twice degree million chance node graph size edge density degree hand node degree half degree chance node graph size edge density degree ultrametric graph thus distribution node degree lack topology node highly clustered walsh find topology real graph variability node degree also barabasi albert real graph containing node high degree follow probability node proportional around barabasi albert redner highly cited tend follow zipf approximately render degree node citation graph highly cited proportional decay exponential decay seen graph graph barabasi albert node repeatedly node edge edge preferentially attached node high degree suggest linear probability edge attached node degree node barabasi show graph node proportional note also proportional degree graph presence term preferential probability scaling route scaling cummulative probability normalized node degree graph scaling node degree note logscale used graph constructed modified barabasi albert graph size edge density minor modification tackle degree size graph hinder construction high density graph uncommon suggest connecting edge node probability node graph approximately edge modification moving graph plot cumulative probability degree node graph modified ultrametric graph observe definite broadening distribution node degree graph node degree graph graph node degree node graph time degree chance node graph size edge density degree hand node degree nearly fifth degree chance node graph size edge density degree graph distribution sharpens size graph spread distribution node degree graph increased size ideally want like generating graph give graph node high degree topology node high degree modified barabasi albert keep path node tightly clustered demonstrates graph tend topology graph size increased path clustering coefficient graph constructed node degree clustering coefficient fraction neighbor cliqueness graph node modified barabasi albert path clustering coefficient graph size edge density also last column proximity ratio normalized ratio clustering coefficient path graph proximity ratio topology graph modified barabasi albert broad distribution degree node topology feature real graph rare graph graph good benchmark testing graph coloring also benchmarking involving graph generating graph satisfaction adjacency graph hamiltonian circuit unfortunately coloring graph modified barabasi albert easy heuristic node degree quickly many case find quickly node high degree showing optimal graph clique graph ring lattice watt strogatz walsh graph quasigroup gent case observe graph little evolution node high degree ring lattice graph quasigroup promotes appearance topology achlioptas gent mixture regular graph randomness node node probability visiting many node coloring graph scaling node degree topology purely topology note logscale used node graph constructed modified barabasi albert graph quasigroup node graph edge graph size edge density graph formed rewiring node ring lattice node neighbour edge rewired probability graph parameter gave cost distribution plot distribution cost coloring graph scaling node degree topology purely topology find optimal coloring mike trick upon brelaz dsatur brelaz graph graph long tail distribution cost whilst graph color graph spread cost graph graph absence long tail mean benefit graph randomization rapid restart gomes graph walsh backbone hardness satisfiability focused backbone frozen monasson hard phase transition backbone parkes backbone lead thrashing behaviour branch incorrectly branching mistake high tree costly undo idea backbone graph coloring culberson gent permutation color also coloring look node must take color look node colored differently culberson gent node frozen graph color edge node frozen backbone simply frozen pair graph modified barabasi albert backbone many case pair node backbone hard color incorrectly node graph help lack long tail distribution cost graph backbone fifty hundred pair node easy color incorrectly node give rise long tail distribution cost backtracking like brelaz dsatur conclusion node high degree tend infrequently graph wide real test case used exactly studied walsh studied alternative generating nonuniform graph watt strogatz give graph narrow distribution node degree whilst hogg ultrametric give graph containing node high degree lack topology barabasi albert combine best giving graph node high degree topology graph benchmarking graph coloring satisfaction involving graph node high degree topology graph coloring long tail cost graph disappears graph also constructed node high degree size backbone pair edge frozen color lesson learnt practice neither structured optimized purely poorly randomness benchmark randomness topology many real graph wide degree node node high degree much purely graph topological feature major cost conjecture graph coloring heuristic like brelaz able distribution node degree preventing much thrashing behaviour seen graph acknowledgement epsrc fellow wish thank achlioptas achlioptas gomes kautz selman generating satisfiable proc conf barabasi albert barabasi albert emergence scaling network barabasi barabasi albert jeong network physica brelaz brelaz color vertex graph communication culberson gent culberson gent frozen graph coloring fujita masayuki fujita john slaney frank bennett automatic finite algebra proc ijcai page gent gent hoos prosser walsh morphing combining randomness proc conf gomes gomes selman crato distribution combinatorial smolka proc conf practice page springer gomes gomes selman mcaloon tretkoff randomization backtrack exploiting profile hard scheduling artificial intelligence planning system hogg hogg refining phase transition combinatorial artificial intelligence monasson monasson zecchina kirkpatrick selman troyansky determining computational transition parkes parkes clustering phase transition proc conf page render render empirical citation distribution european walsh walsh proceeding ijcai artificial intelligence watt strogatz watt strogatz collective dynamic network satisfiability satisfaction satisfiability backjumping quantified boolean satisfiability enrico giunchiglia massimo narizzano armando tacchella dist genova viale causa genova italy enrico reasoning tool deciding satisfiability quantified boolean qbfs artificial intelligence many procedure last year davis logemann loveland procedure propositional satisfiability show extend backjumping schema applicable jump existentially quantified literal backtracking backjumping universally quantified literal show incorporate backjumping procedurefor satisfiability also test procedure show backjumping backjumping time idea experimented qbfs reasoning tool deciding satisfiability quantified boolean qbfs artificial intelligence many reasoning task involving abduction reasoning monotonic reasoning reasoning reducible time determining satisfaction reasoning prototypical pspace many reduction readily seen last year presentation procedure qbfs like karpinski flogel cadoli cadoli decide rintanen quip egly qsolve feldmann procedure davis logemann loveland procedure propositional satisfiability davis easy extend deal qbfs also core many deciders show extend backjumping schema prosser bayardo schrag applicable jump existentially quantified literal backtracking solutiondirected backjumping universally quantified literal show incorporate procedure satisfiability also test procedure show backjumping backjumping time idea experimented qbfs structured formal preliminary rest qube procedure qbfs devoted presentation backjumping procedure reported conclusion work omitted lack formal preliminary propositional letter atomis literalis atom negation atom literal atom occurring atom clause disjunction literal distinct disjuncts case propositionalformula clause customary clause literal propositional clause clause emptyclause stand empty disjunction propositional emptysetofclauses stand empty propositional stand clause empty clause qbfis form quantifier existential universal pairwise distinct atom propositional atom prefixand matrixof clause literal existentialif belongs prefix universalotherwise unitin existential clause belongs prefix monotone existential universal clause contradictoryif existential literal belongs empty clause contradictory semantics recursively contradictoryclause false matrix empty clause true true true literal deleting clause removing easy universal quantifier deciding satisfiability reduces qube qube decider giunchiglia qube initially stack empty stack simplify contradictory clause false matrix empty true unit unit extend monotone pure extend undef backtrack stack empty retract false true null qubesolver simplify undef chooseliteral else backtrack null extend null qube stack storing stack initially empty false true undef null unit pure pairwise distinct atom property unit pure obvious existential extend deletes clause remove additionally operation push stack retract literal stack literal returned intuitively retract inverse operation extend simplify simplifies till contradictory clause line matrix empty line pspace pseudocode indentation block line belong block assignment operator construct cond block block cond cond block else block simplification line simplification line correspond lemma cadoli cadoli chooseliteral literal occurring atom occurring left prefix existential existential chooseliteral also backtrack literal qbfs line stack till literal reached line existential false line universal true line literal returned line literal null returned line easy qube generalizationof qube qbfs universal quantifier qube simplicity chooseliteral negation atom prefix matrix consideration tree searched qube node show literal qube branch take line literal also show matrix resulting prefixed label line computation qube false unsatisfiable backjumping finite literal assign abbreviation assign assign clause assign clause deleting clause removing abbreviation removing abbreviation assign intuitively literal representing assignment resulting literal considering satisfaction dechter prosser bayardo schrag case subset literal assignment responsible true false satisfiability effectively subset avoid branch literal make precise need finite literal assignmentfor literal unit monotone atom occurring left prefix existential existential assignment literal reasonfor resultif assignment satisfiable satisfiable assignment fiable assignment satisfiable intuitively assignment matrix empty contradictoryclause backtracking dynamically modify avoid useless branch avoid branch literal next subsection show easy consequence reasonfor satisfiabilityif satisfiable reasonfor unsatisfiability assignment removing literal literal qube computation tree stand unit pure prefix unsatisfiability assign unsatisfiable satisfiability assign satisfiable backjumping matrix contradictory clause literal literal deleting contradictory clause assignment contradictory clause recursively eliminating falseirrelevant literal literal unsatisfiability unsatisfiability unsatisfiability next step show unsatisfiability backtracking literal assignment unsatisfiability unsatisfiability universal unsatisfiability existential monotone unsatisfiability unsatisfiability existential unsatisfiability considering said paragraph unsatisfiability unsatisfiability unsatisfiability last item lookingfor assignment satisfying useless backjumping procedure avoided branch leading backjumping matrix empty literal literal deleting matrix empty assignment matrix empty recursively eliminating literal literal satisfiability satisfiability literal assignment satisfiability satisfiability existential satisfiability universal monotone satisfiability satisfiability universal satisfiability considering backjump initwr stack empty retract false true unit else null procedure solutiondirected backjumping said paragraph satisfiability satisfiability satisfiability last item looking assignment falsifying useless backjumping procedure avoided branch leading qube procedure incorporating backjumping qube procedure assignment literal stored stack initwr initializes storing false contradictory clause clause literal universal initwr literal initwr true matrix empty initwr literal recursively eliminating universal literal clause literal initwr literal property qubesolver need modified unit contradictory clause clause literal universal literal unsatisfiability unitsetreason invoked unit unitsetreason line unit contradictory clause stored procedure backjump invoked backtrack line considering procedure backjump initialized line backjump literal qbfs line stack till literal reached belongs line line existential line universal line literal line stored line returned line literal null returned line safely retract despite assigning computation line line satisfied unit line line neither line line satisfied retract remove line returned initwr easy neither universal monotone literal belong universal literal existential monotone literal belong existential literal thus completeness never qube backjump backjumping procedure relsat procedure relsat nondeterministic system qbfs universal quantifier median time left branching node benefit deriving backjumping qube backtracking call qube backjumping call background satisfiability percentage system branching heuristic feldmann test pentium qbfs gent walsh property prefix quantifier quantifier type rightmost quantifier matrix clause clause literal existential show median time left branching node varied empirically satisfiable unsatisfiable transition background logarithmicscale magnitude minor branching node test file time node time node rintanen benchmark name abbreviated also test structured rintanen translation planning rintanen lack show benchmark branching node remaining none system able time never branching node sometimes much last line show branching node qubebt computational overhead paid dramatic conclusion work generalize backjumping schema qbfs introduced backjumping qube show form backjumping know time backjumping schema experimented qbfs worth remarking solutiondirected backjumping symmetrical easy treatment accounting form backjumping decided readability time showing tight conflictdirected backjumping schema beside aboveresults also comparativelytested qube mentioned show qube well deciders even backjumping rintanen structured decide qsolve able sample regard decide feature inversion quantifier sampling seem particularly benchmark qube test used qube page qube besides backjumping procedure feature branching heuristic plus trivial truth cadoli cadoli giunchiglia qube trivial truth backjumping conducted neither trivial truth backjumping around hand overhead test tried dramatic thus seems good idea reported giunchiglia work investigating branching heuristic plan extend qube form size relevance learning done bayardo schrag acknowledgment thanks davide zambonin many fruitful thanks reviewer suggesting name backjumping thanks marco cadoli rainer feldmann theodor lettman jussi rintanen marco schaerf stefan schamberger system helping analisys work partially murst bayardo schrag bayardo schrag realworld proc aaai page cadoli cadoli giovanardi schaerf quantified boolean proc aaai cadoli cadoli schaerf giovanardi giovanardi quantified boolean automated reasoning reprinted gent davis davis logemann loveland machine proving dechter rina dechter enhancement scheme processing backjumping learning cutset artificial intelligence january egly egly eiter tompits woltran reasoning task quantified boolean proc aaai feldmann feldmann monien schamberger distributed quantified boolean proc aaai gent walsh gent toby walsh qsat phase transition proc aaai page gent gent maaren toby walsh highlight satisfiability year giunchiglia enrico giunchiglia marco maratea armando tacchella davide zambonin evaluating heuristic optimization propositional satisfiability proc joint automated reasoning giunchiglia enrico giunchiglia massimo narizzano armando tacchella qube system deciding quantified boolean satisfiability proc joint automated reasoning giunchiglia enrico giunchiglia massimo narizzano armando tacchella effectiveness backjumping trivial truth quantified boolean satisfiability submitted karpinski flogel karpinski flogel resolution quantified boolean computation prosser patrick prosser satisfaction computational intelligence rintanen jussi rintanen constructing plan prover artificial intelligence rintanen jussi rintanen quantified boolean proc ijcai page satisfiability stochastic alan frisch timothy peugniez artificial intelligence york york united kingdom much excitement success stochastic procedure satisfying assignment many naturally formulated term domain size tackle boolean procedure reformulated boolean introduces alternative extending boolean stochastic procedure operate boolean evidence superior domain size much excitement success stochastic procedure satisfying truth assignment propositional procedure stochasticly assignment satisfies many naturally formulated term domain size tackle boolean procedure reformulated boolean boolean used comparable superior boolean satisfiability conceptually boolean satisfiability studied intensively publicly proposes satisfaction generalising boolean procedure operate searching assignment nonboolean generalised walksat selman procedure boolean satisfiability procedure nbwalksat peugniez frisch peugniez work domain nite able encode boolean main addressed transformational encode transformational empirically testing graph colouring nonboolean transformation consist applying walksat transforms boolean merely case intuitively nonboolean boolean grows domain size consequently expect encoding domain size parameter find encoding domain size increased show highly demonstrating effectiveness walksat boolean case case domain size superior transformation case ineffective studying nonboolean make contribution naturally generalise boolean transformation enhanced transformation used test domain size want generating vary domain size constructed propositional finite domain assignment domain atomic form domain true assignment assignment false constructed atomic truthfunctional connective usual boolean semantics observe take domain arbitrary size semantics true false usual assignment satisfies nonboolean true walksat many boolean procedure operate boolean conjunctive normal form generalisation walksat operates boolean nonboolean disjunction literal literal atomic literal negation literal literal literal generalise boolean boolean transformed replacing atom domain true false sometimes term nbformula emphasise syntactic part made term walksat highly successful procedure satisfying assignment boolean generalised walksat system operates handling boolean procedure concerned nbwalksat derived walksat describes operation boolean walksat implicitly describes operation walksat simplest operation nbwalksat nbformulas achieved considering step literal domain operates choosing assignment satisfying assignment repeatedly selecting literal unsatisfied clause modifying assignment literal literal unsatisfied clause assignment must assignment modified mapping unmodified literal flipped distinguishes walksat procedure heuristic employed selecting literal flip walksat heuristic greedy heuristic selman many reported used consequently greedy walksat form greedy heuristic greedy heuristic chooses literal flip selecting clause distribution clause satisfied assignment flipping literal break clause clause satisfied assignment flip flip clause literal flipping break clause literal flip distribution literal clause literal literal distribution literal clause distribution literal clause flipped break fewest clause made probability pnoise noisy transforming transform satisfying assignment correspond transforms binary transforms operates arbitrary transforms transform operates replacing atom sense encodes replaces resulting kernel transformation transforms employ producing kernel call encoding unary binary unary encoding kernel used transform also need conjoin kernel kernel encoding used unary binary transforms binary binary encoding kernel unary encoding kernel unary encoding kernel binary encoding size produced encoding transform transform kernel transforming distinct propositional call idea boolean assignment true assignment thus role domain played must boolean encoding satisfying assignment must exactly expressed asserting true asserting true must satisfied simply clause clause clause must satisfied clause produced transform kernel form identical produced transform binary transform transform encode domain size base encoding base encoding binary transformation bvariables encode domain size binary transform form taking binary encoding boolean domain mapped mapped mapped mapped happens domain size reconsider domain boolean assignment satisfies correspond assignment domain employed hoos extraneous binary satisfied extraneous produced extraneous eliminated mapped mapped mapped transform binary happens domain mapped binary mapped binary transform generates extraneous binary also case mapped binary confirm binary transform observe boolean assignment must binary transform exactly binary transformation necessarily binary transformation disjunction negated literal demorgan negation moved inside innermost resulting size binary transformation disjunction literal transforming distribute disjunction unfortunately applying distribution process binary transform exponentially clause transform transform kernel transform introducing binary encoding linking unary encoding binary encoding encoding linking link unary encoding binary encoding domain linking linking link unary encoding implied binary encoding domain linking linking observe linking linear graph colouring four refer nonboolean encoding binary encoding encoding encoding walksat used boolean encoding used encoding even case domain size user compiling fixed size data allocating data runtime latter used pentium megabyte memory considerable care must pnoise parameter much work area reported giving used pnoise thus irreproducible parameter fixed acceptable parameter optimal suboptimal magnitude best optimal pnoise absence experimentally also route followed hoos careful work procedure advantageous restart assignment procedure prescribed flip relevant optimal restart gained restarting procedure restarts need concerned restarts graph colouring used graph colouring publicly rutgers univ dimacs encoded node graph distinct domain colour clause form node colour boolean produced applying transforms prof transformed unary encoding used kernel clause also representing graph colouring binary transform show time four size column show size term atom occurrence walksat pnoise optimal recored pnoise column flip rate column give mean flip rate median flip median time column give sample median flip time examination reveals roughly comparable domain size colour fliprate drop sharply term flip opposing cancel resulting roughly comparable time domain size colour time competitive domain colour compete well easy domain size competitive totally ineffective conjecture easy highly sensitive domain size control parameter nbformulas good testbed domain size like know varies domain size need domain size formulating challenging faced generates five parameter exactly clause fixed domain size clause choosing distinct choosing distinct domain coupled form literal disjoined form clause simplest conjecture varying domain size systematically vary task exhibit behaviour mitchell underconstrained criticallyconstrained pnoise size flip rate median flip median time colour node colour node colour node colour node colour node colour node sample graph colouring missing flip made four pnoise term relative phase transition shortcoming vary adjust four parameter phase half satisfiable many phase transition parameter keeping size fixed requiring clause constrainedness mimicking boolean keep achieved advocated mitchell selman levesque whatever phase transition experimentally thus varying parameter holding size constrained clause proportion parameter solvable conducted domain size kept domain size experimentally located phase transition leftmost column show clause located phase transition parameter domain size series procedure kept satisfiable domain size made suite prof transformed unary encoding used kernel attempted binary transformation unreasonably long binary transform used nbformula size resulting exponential clause case consistently follow clear term time flip show decline domain size grows decline sharp ineffective domain size magnitude slower domain size graph colouring fliprates decrease domain size colouring fliprate suffers domain size time domain size reach fliprate grows domain size sharp decline fliprate rapid size size grows quadratically domain size conclusion pnoise size flip rate median flip median time clause clause clause clause clause suite satisfiable recorded flip time column flip time suite missing median flip noise exceeded literature case transformation used attack boolean selman graph colouring selman hoos hoos hamiltonian circuit hoos finite discrete satisfaction hoos planning kautz selman kautz kautz selman ernst hoos spite widespread transformation encoding ernst millstein weld binary encoding planing hoos binary encoding satisfaction hamiltonian circuit comparative know work boolean encoding hoos clever insight examines domain size work ernst millstein weld also enlightening many domain size encoding identity suite planning considers varying domain size able confirm expectation domain size parameter suggests hoos also dominant view viable alternative true domain size domain size show tends best sometimes feasible work encoded boolean encoding done mapping boolean case done manually done automatically advocate mapped manually automatically systematically case automatically transformed boolean conjecture boolean encoding produced produced come work bejar area independently generalisation walksat identical operates clause regular clause clause syntactic variant must domain regular clause domain must totally ordered lattice clause said regular literal also literal literal procedure regular clause work clause thus akin anything inherent presentation regularwsat prevents handling domain size operating clause containing differing domain size distribution choosing literal flip chooses clause chooses nbwalksat simply chooses literal clause regular clause nbclauses used effectively encode graph colouring roundrobin scheduling bejar many extra restriction regular clause exploited translate boolean clause compactly bejar aware translation encoded regular clause worthwhile extend made employing suggested boolean translation regular clause worthwhile minconflicts minton operate satisfaction encoding many remaining addressed work biggest facing encoding handling quest generality encoding guide producing encoding must decomposed progress made biggest contribution separating identifying domain size parameter developing encoding applicability enriching operates pseudoboolean walser sebastiani success acknowledgement grateful henry kautz bram cohen walksat code also thank peter stock used filter unsatisfiable suite thanks toby walsh many illuminating steve minton bart selman referee suggestion bejar many ramon bejar felip many combinatorial regular harald ganzinger david mcallester proc automated reasoning lpar tbilisi georgia volume lecture note artificial intelligence page bejar ramon bejar reiner ahnle felip manya modular reduction regular classical proc symposium warsaw poland ieee alamitos brafman hoos ronen brafman holger hoos encode encode linear planning proc sixteenth joint conf artificial intelligence page morgan kaufman ernst michael ernst todd millstein daniel weld automatic planning proc fifteenth joint conf artificial intelligence page frisch peugniez alan frisch timothy peugniez satisfiability fifth automated reasoning bridging practice andrew scotland hoos holger hoos stochastic thesis darmstadt hoos holger hoos proc sixteenth joint conf artificial intelligence page morgan kaufman kautz selman henry kautz bart selman planning satisfiability bernd neumann proc tenth european conf artificial intelligence page vienna austria august john wiley kautz selman henry kautz bart selman pushing envelope planning propositional stochastic proc thirteenth conf artificial intelligence page portland oregon aaai kautz henry kautz david mcallester bart selman encoding plan propositional luigia carlucci aiello doyle stuart shapiro reasoning proc fifth conf page francisco morgan kaufmann minton steven minton mark johnson andrew philip philip laird minimizing conflict heuristic repair satisfaction scheduling artificial intelligence mitchell david mitchell bart selman hector levesque hard easy distribution proc tenth conf artificial intelligence page jose peugniez timothy peugniez satisfiability thesis york march sebastiani roberto sebastiani applying gsat artificial intelligence selman bart selman hector levesque david mitchell hard satisfiability proc tenth conf artificial intelligence page aaai selman bart selman henry kautz bram cohen noise improving proc twelfth conf artificial intelligence page menlo park aaai walser joachim walser linear pseudoboolean proc fourteenth conf artificial intelligence page aaai satisfiability satisfaction satisfaction backtracking biconnected graph baget lirmm montpellier cedex france baget yannic tognetti lirmm montpellier cedex france tognetti enhancement well backtrack used satisfaction backtrack rely propagation graph biconnected reduce permanently removing compiling exploration well filtering biconnected achieving optimal time case tree remains compatible negligible overhead cost satisfaction csps early flourished many branch artificial intelligence used many satisfiability much devoted heuristic backtrack seen backbone extends assigning undo assignment backtracking heuristic restrict goal maximize probability good guess next assignment ordering efficiently backjumping variant filtering propagation consistency property ahead effectively domain used preprocessing phase dynamically exploration emerged identification tractable tree mackworth freuder transform time gottlob classification accepts preprocessed ordering long property biconnected graph tree reduce thrashing backtrack storing removing permanently kind consistency property used well graph biconnected achieving optimal time case tree csps sect backtrack used kernel sect devoted ordering compatible sect soundness completeness sect backjumping filtering pointing orthogonality showing mixed limitation suggest overcome binary network finite domain subset instantiated domain instantiated said satisfied test consistency consistent instantiation subset instantiation satisfies satisfaction network asks consistent instantiation loss generality graph network associating node connecting node oriented graph loop inducing orientation graph edge seen oriented smallest greatest orientation predecessor successor node note width freuder back backtrack backtrack kernel vital make usual specification examined fixed arbitrary ordering propagated ahead kernel backtrack data empty network true admits false computeorder failure false hasmorevalues currentvariable failure false nextlevel currentvariable else previouslevel currentvariable getfirstvalue currentvariable nextlevel currentvariable failure true previouslevel currentvariable prosser derecursived control successful failed instantiation unstacking recursive call sake clarity read ordering computeorder build predecessor successor implicit sort predecessor soundness history specification previouslevel must nextlevel restriction freedom getfirstvalue hasmorevalues computing built consistent instantiation make instantiation consistent sound getfirstvalue returning false missing leaf dechter frost successive call hasmorevalues iterate returning false enumerated testing done width consistency natural getfirstvalue resp hasmorevalues iterate domain halting soon consistency domain resp last successful false whole domain checked worst case cost width checked good underconstrained width refinement note domain satisfying worst case full practice tightness network smith size time used well tightness width high hasmorevalues iterates storing refinement history history trace refinement branch backtrack tree stored well used backtrack come back refine domain replacing getfirstvalue data belonging network consistent instantiation preceding also ancestor refinement history true unless empty last width last last usedval last last last usedval last last last success last success success last style simply last ambiguity pointing vector containing sorted vector size width successive refinement usedval ancestor used successive refinement note consistent assignment usedval ancestor initialized domain history benefit backmarking gaschnig memory width usual resistant jump forward backward explicited ordering compatible ordering compatible ordered subset intersection necessarily empty predset call ordering compatible subset predset predset ordering accessor smallest empty graph pair node walk node subset network graph admits namely call ordering ordering compatible arbitrary ordering launch network computeorder ordering wellknown kind thrashing fails register accessor keep generating consistent instantiation repeat failure subproblems graph usual launch stopping whole process admits also slight modification previouslevel accessor previouslevel must illustrates well ordering property graph backtrack ordering benefit independence ordering benefit restricted dependence biconnected graph removal node disconnect subgraph biconnected bicomponent note graph vertex biconnected graph bicomponents representing bicomponent node edge node forest tree linear time traversal tarjan represents graph tree tree rooted forest natural ordering node representing bicomponents child parent tree choosing root give traversal natural ordering graph tree ordering ordering network ordering compatible natural ordering tree also ordering traversal tree traversal inside ordering linear time node graph ordered ordering accessors bicomponent white bicomponent smallest accessor excepted ordering accessor accessor smallest natural ordering bicomponent belongs neighborhood accessor give accessors ordering illustrated accessor accessors ordering natural ordering tree node leaf greatest appearing leaf tree leaf coloured grey bicomponent leaf greatest node appearing subtree rooted compiler leaf accessors bicomponents covering ordering compiler kernel sect call computeorder accessors leaf compiler preprocessing take linear time network foundation bicomponent call previouslevel safely optimally accessor instantiated call previouslevel mean detected leaf part asserts backjump accessor missing dangerous backjump formal safe optimal backjumps dechter frost backjump part mean permanently remove domain part proved showing previouslevel case graphbased backjumping gbbj dechter accessor gbbj safe backjump greatest predecessor also neighborhood containing predecessor sect empty maintaining safe part relies ordering lemma locates leaf responsible lemma registered last successful instantiation belong subtree bicomponents rooted smallest containing subtree accessor also accessor sketch failure propagated upward bicomponent accessor numbered consecutively compatible ordering failure propagated accessor backjump part accessor belongs parent consequence natural ordering absurd subnetwork containing subtree ordered reduce domain admits find ordering examine leaf caused bypass thanks part domain emptied outside biconnected outside absurd elementary cestor bicomponent responsible deadend registered backjump optimal previouslevel match specification leaf numbered call nextlevel returning mark compiler compiled forward jump eventually thereafter time call nextlevel accessor compiled nextlevel safely optimally forward jump sketch dual part failure propagates accessor subtree modification outside give consistent instantiation keeping consistent instantiation modification outside make instantiation inconsistent unless modifying call nextlevel leaf mean whole subtree successfully instantiated call nextlevel mean consistent instanciation subtree rooted bicomponent covering returning call accessors mark compiled instantiate subtree containing instantiated even compiled backjump permanently remove must also remove compiled mean successfully instantiate subtree leaf make call nextlevel call compiler compiled backjump failure make backtrack successfully instantiate also instantiate compiled call nextlevel mean consistent instantiation whole know consistent instantiation safely jump forward previouslevel nextlevel naturally encode nextindex previousindex role nextlevel previouslevel returning previouslevel data examined accessor issecondvariable accessor accessor width accessor accessor accessor getindex accessor previousindex nextlevel data examined success nextindex isleaf compiler issecondvariable nextvariable accessor accessor nextvariable lemma subtree entered accessor domain consequence enter subtree find consistent instantiation accessor compiled time nextlevel smallest bicomponent containing jump next subtree registered thanks failure came accessor permanently removed tree greatest domain size bicomponents graph node accessor entered consistency bicomponents entered time freuder achieving consistency preprocessing linear encountered benefit much failure success optimal dechter pearl extends graph bicomponents size largest size largest domain worst case freuder practice backtracks bicomponents generating graph numerous bicomponents nothing inside reduces tree backjumping scheme sound must form backjumping natural performant backjumps gaschnig backjumping gaschnig triggered case leaf jump back predecessor emptied domain backjump safe optimal case leaf backjumping gbbj dechter triggered greatest predecessor safety ensured jumpback predecessor consisting predecessor optimal graph used conflict directed backjumping cdbj prosser integrates gbbj backjumps greatest removed domain jumpback predecessor removed cdbj safe optimal safe backjump scheme returning belonging bicomponent containing accessor backjump permanently removed sound idea restriction paste sound sketch specification backjump accessor make remove jumpback predecessor note also backjump backjump last parent necessarily accessor backjump must kept make sound note scheme quickly failure nothing ensures failure repeated behaviour filtering consistency used prune inconsistent ahead last instantiated said conversely maintaining sabin freuder believed family rely maintaining kind ahead studied domain emptied phase bicomponents belonging branch tree acessors domain temporarily removed phase definitively removed sketch accessor containing propagation emptied domain filtered domain failure mean extend instantiation assignment instantiation extend thanks instantiation extends proven combine good replace perhaps never remove nothing restrain fail conclusion work relies bicomponents graph early test quickly compensates inefficiency inside match effectively combining best perfect network graph many bicomponents must confess graph expressing network graph tree need phase used binary network size transform network fusioning domain composed pair compatible transformed pair belongs domain construction incident network domain size incident size iteratively fusion node obtaining network size domain size graph admits node removal disconnect graph fusioning indicated bicomponents sharing find separator size fusion separator creating bicomponents size time separator graph degenerate keeping size comparable case studied gottlob test looking heuristic undirected graph edge find separator graph removal separator creates graph greatest edge belong separator edge initialized tightness believe network decomposes subproblems slightly good heuristic acknowledgement like thanks christian bibliographical suggestion michel chein michel habib helped subgraphs evolve much formal well referee precious comment advice dechter frost dechter frost backtracking satisfaction california dechter pearl dechter pearl networkbased heuristic satisfaction artficial intelligence dechter dechter enhancement scheme processing backjumping learning cutset artificial intelligence january freuder freuder sufficient january gaschnig gaschnig gottlob gottlob leone scarcello structural proc page mackworth freuder mackworth freuder network consistency satisfaction artificial intelligence prosser prosser satisfaction computational intelligence sabin freuder sabin freuder contradicting wisdom satisfaction proc page smith smith locating phase transition binary satisfaction artificial intelligence tarjan tarjan linear graph siam computing satisfaction parametric differential micha janssen hentenryck yves deville brown belgium providence belgium parametric ordinary differential arise many area data uncertain suffer loss high computation cost satisfaction enhances pruning step relaxation show best ordinarydifferential arise naturally many chemistry physic biology mechanic name ordinary differential system form vector practice case parameter certainty givenas resulting parametric ordinary differential infinitely many system pioneered moore tackle parametric reliable enclosure time taylor make extensive automatic differentiation taylor coefficient major explosion size successive accumulate lose enclosing wrapping lohner system step feature transformation tackle wrapping nedialkov jackson extending hermiteobreschkoff viewed taylor note inherently accommodate uncertain data talk parametric take satisfaction idea view iteration process forward process computes enclosure time enclosure time bounding pruning process reduces enclosure removing real novelty pruning pruning generates unknown main contribution show pruning derived relaxation importing satisfaction differential main step derive pruning step obtaining relaxation safely approximatingits hermite interpolation step form relaxation relaxation accurately efficiently unfortunately step skeched sufficient resulting pruning suffers step globalizing pruning considering successive relaxation idea generating primitive also heart satisfaction make address dependency accumulation wrapping show benefit show pruning step make show significantly confirm show many magnitude computation time alternatively significantly slower fact dependent taylor coefficient contrary rest introducesthe main pruning background notational letter real vector real capital letter real matrix vector closed vector smallest simplicity smallest also real restrict hypothesis numerically practice motivates multistep satisfies multistep multistep undefined multistep generalize generalize bounding multistep intuitively bounding encloses going time successive integration step bounding system multistep bounding satisfaction satisfaction followed generic iterates process forward process computes enclosure time enclosure time bounding pruning process reduces enclosure removing forward process also existence uniqueness intuition successive integration step illustrated forward thus pruning process main novelty pruning relaxation next relaxation derive pruning operator pruning independently pruning pruningcomponentuses safe approximationsof shrink produced forward process idea satisfaction nonlinear ordinary differential nonlinear used pruning cartesian suffices take hold seen filter used pruning many numerica ordinary differential raise unknown obvious filter prune geometric intuition multistep filter main contribution show derive pruning operator parametric step rewriting term multistep rewriting unknown suggests show interpolation term simply bounding time safe successive time forward process form approximates used filter universally quantified simpler restricting finite time computable filter hold time time capture formally multistep filter multistep filter satisfying soundness multistep filter multistep filter hold going time filter tighter enclosure pruning last produced forward process enclosing time interested pruning last subbox pruned away hold briefly geometric intuition behind considering call natural filter side represents slope represents slope conservative side must intersect containing empty intersection mean used system illustrates intuition ordinary differential considers ignores term simplicity illustrates prune away time evaluates curve marked describes interpolation going time time idea test satisfied time seen slope interpolation slope specified time curve marked describes interpolation going time case satisfied time mean pruned away filter generalizes intuition side slope filter fails intersection empty consistency filter interested updating last producedby forward process operator novel consistency capture pruning last forward consistency multistep filter multistep filter forward used computational enforces forward consistency filter filter filter rely multistep derivative decomposing unknown multistep computable unknown term build review derived hermite interpolation simply show build filter mention natural multistep filter simply replacing multistep derivative easy enforce forward consistency natural filter nonlinear make particularlyinteresting filter derivativeof multistep expanded make term explicit thus interested mentioned computable derivative fortunately construct filter considering term taking approximated form term derivative call resulting filter implicit mean filter implicit filter time form vector matrix interested pruning last operator implicit filter turned explicit form inverting matrix intuition filter explicit filter rewrite implicit filter matrix vector explicit filter make explicit filter forward consistent isolated filter explicit filter pruning suffers dependency filter successive time step form note considers tuples form subset tuples idea remove dependency filter cluster filter give intuition filter predicting pruning simultaneously precisely idea cluster successive filter filter turned explicit form substituting resulting system system matrix vector mention filter forward isolated dependency thus wrapping wrapping approximating induce loss wrapping system compactly review briefly integrate idea filter idea transformation system diagonally dominant diagonal diagonally dominant wrapping induces little loss computing pruning step accommodate idea iteration defines sends iteration main iteration system transformation diagonally dominant matrix hermite filter show build hermite interpolation informally hermite interpolation approximates continuously differentiable specified imposing successive derivative derivative note vary hermite interpolation hermite interpolation degree satisfying easy take hermite interpolation derivative remaining term hermite term hermite interpolation term suffices take replace bounding call hermite filter filter hermite interpolation hermite filter novel specifies convergence hermite filter show natural hermite filter imposed interpolation natural hermite filter weak cost analyse cost nedialkov best know step forward process moore taylor pruning applies hermite filter transformation lohner qrfactorizationtechnique simplicity natural encoding arithmetic operation operation operation also cost evaluating time cost evaluating also separately arithmetic operation real matrix jacobians main cost step also show case case corresponds interpolation case corresponds imposing interpolation note case main cheaper mean made choosing interpolation next show substantial also case many operation case practical substantially substantially also show versatility taylored hand time ratio hilb brus benchmark biology parametric biologist hilbert quadratic hilb full brusselator brus lorentz system biology biology last step time stepsize follow forward process moore taylor predictor used taylor series bounding series time optimal binary good beginning integration chose last interpolation keeping throughout integration magnitude best gain particularly also confirmed many operation many interpolation particularly gain computation time substantial interpolation consequence believe satisfaction parametric ordinary differential promising avenue complement well main open optimal coming month acknowledgment partially recherche concertee award thanks philippe delsarte comment atkinson introductionto john wiley york cruz barahona handle parametric ordinary differential ings extractionof data base deville janssen hentenryck consistency ordinary differential pisa italy october hairer rsett wanner ordinary differential berlin janssen deville hentenryck multistep filtering operator ordinary differential alexandria october lohner enclosing ordinary arithmetic computation wiley moore siam publ nedialkov jackson computing rigorous reliable computing kluwer rihm implicit enclosingsolutions universal stoer bulirsch york hentenryck michel deville numerica modeling optimization cambridge mass lucas bordeaux eric monfroy fred eric benhamou irin universite nantes france bordeaux monfroy benhamou form consistency used survey give motivation naive consistency contribution twofold hand optimal consistency improves maximal size hand time effectively reached affordable overhead term consistency propagation consistency struggling combinatorial explosion bruteforce consistency freuder generic tuned enforce arbitrary consistency promising consistency consistency vary consistency introduced lhomme response early quiescence davis filtering adapted reduce practice stronger consistency thus size tree idea enumerated prof inconsistency instantiated know domainbased suppressing inconsistent domain tightening singletonconsistency emphasized hard debruyne deal successfully difficult nonlinear challenging transistor puget hentenryck montanari variant dechter beek faltings costly widest computing cost show overestimated optimum actually show approached case exactly reached case cautious optimization pointed lhomme lebbah lebbah integrated informally speaking time incomplete computation optimization computation successive call need restarted scratch dynamic dependency used operation avoided cost cumulation incomplete computation find time outline next introduces terminology introduces consistency naive computing resulting concerned conclusion perspective note domain computation supposed finite totally ordered thus predecessor successor seem restrictive corresponds usual practice canonical subset encoded terminology finite mapping tuples reader familiar dechter beek also thought name tuples also seen valuation belong satisfaction find npcomplete decisional form containing also referred instantiation operator property operator monotonic depend expressed concerned case system inequations system defines defines throughout text fixed consequently omit parameter call searched framework benhamou older cartesian success come fact compact expressive note thus containing inside obvious geometric intuition refer indifferently intuitive relating facet formally facet fixed note property property contractance correctness monotonicity idempotence note deliberately exclude case nonidempotent relevant reduce integrated branch prune guaranteed find remove call essential property correctness opposite property correctness completeness implication able inconsistency costly practically seen tighten modifying turn refer process facet reduction facet pushed consistency property characterize facet reduction stop inductively consistency case also benhamou older finite domain core main hentenryck codognet diaz referred lookahead greatest mean facet intersects proved greatest come property confluence fixpoint computation correctness hold suppressed provesthat remove facet idempotence straightforward monotonicity come monotonicity operator primitive correspond arithmetic like prolog decompose arbitrary primitive facet intersects rough consistency consistency relies ideally facet deciding facet satisfaction task consistency greatest informally speaking facet rejected recursive consistency turn used property confluence idempotence monotonicity hold correctness consequence correctness removed facet easy stronger monotonicity note idea customized consistency used consistency boxconsistency puget hentenryck lazy form debruyne computing consistency concerned sketch reader referred benhamou older lhomme explanation give incremental case naive successively optimization used suggested lebbah also delobel studied next computing enforcing variant seminal propagation constraintoriented handle stored queue relies fact relates alternatively constrains describes essential arbitrary constrained reduce reduce modified case numeric line time computation naive filtering facet turn reduce computation actually represents loop specified hold iteratively next loop optimized trying remove even recursive splitting unfortunately heuristic worst turn effectively reduce naive correctness straightforward loop stop storing obvious drawback preceding time facet reconsidered restarted scratch reduce clever reduction reuse next step memorize assignment fact memorized line reduce memorize storage vector associate last reconsidered restart line note intersection rewrite consequence monotonicity also contractance thus tonicity idempotence inclusion straightforward avoiding computation optimization relies worth recomputing fixpoint checked naive fashion reduction reduce memorize dynamic dependency checkings illustration preceding consideration avoided concerned case little time recall lhomme usual literature mackworth freuder consistency expressed parameter illustration greatest artificially many wished contrary ternary unless absurd case disconnected graph thus lhomme inspired mackworth freuder recall give simpler computing reduction must occurred case time queue line time give also recall time reduction dequeued time lhomme naive show time call naive worst case facet line reduction removal consequently remove suppressed worst case note seem optimal test expect optimal call presumably optimal reached case hand restrict case optimal optimal suppress time cost systematic depend last enqueued avoided finer storage queue used queue attached facet time reduction facet stop queue empty effectively reconsidered enqueued line mean queue queue containing used reduce memorize optimized handling queue note test inclusion line intersection line optimized operation effectively checked optimal call suppress throughout call computation computation cumulated queue call suppressed cost test inclusion optimized inclusion checked time effectively removed cost test refine show memorization facet show inconsistent suppressed consistency tile part show case successive reduction facet filterings tile keypoint suppression avoids computing time computing computation computation suppress thought memorization consistency facet case memorized removed worst case happen computation reduces memory computation thus suppression memory time checked facet consistency behaviour summarize stronger consistency conclusion investigating computing optimal improvedbounds reached note affordable term storage facet coexist handling queue term main contribution justify theoretically memorization computation practical relevance actually prof computation facet benchmark show facet reduction avoided computing generalize memorization detriment spacecomplexity consistency regarded complementary qualitative filtering precise collavizza also costly compromise pruning time perspective term cost note restricted alternative introduced puget hentenryck seems little customization handle case challenging task optimization helpful combinatorial case domain acknowledgement gratitude olivier lhomme encouragement advice essence propagation benhamou older benhamou older applying arithmetic real boolean codognet diaz codognet diaz compiling collavizza collavizza delobel rueher comparing consistency reliable computing davis davis propagation label artificial intelligence debruyne debruyne practicable filtering satisfaction proceeding ijcai nagoya japan dechter beek dechter beek consistency delobel delobel resolution contraintes reelles thesis universite nice sophia antipolis freuder freuder synthesising communication lebbah lebbah contribution resolution contraintes consistance forte french thesis ensti mine nantes lhomme lhomme consistency numeric csps proceeding ijcai page chambery france mackworth freuder mackworth freuder network consistency satisfaction artificial intelligence montanari montanari network property picture processing puget hentenryck puget hentenryck satisfaction circuit optimization faltings faltings consistency continuous hentenryck hentenryck saraswat deville refining propagation christian bessire montpellier cedex france bessiere rgin ilog route dolines valbonne france regin propagating main feature thus prime manage propagation efficiently justifying best ease integration also concern simplest consistency refinement preserve much ease integration data maintained giving noticeable refinement analytically showing property optimality time propagation operation extensive want efficiently hard satisfaction step thus incorporated propagation engine practical many type receive removed propagate deletion cheap expect time engine propagation scheme ilog choco natural mackworth mcgregor propagation generic propagation work partially financed ilog collaboration montpellier coconut best propagation scheme successor valueoriented propagation used propagate nothing semantics namely independence regard data maintained used procedure easiness contrary successor network much propagationoccurs bessire bessire need maintain data like accept variableoriented propagation term time like free data maintained price slight extra data valueconstraint pair reach optimal time lead substantial gain show property regarding cost need line classical need data preliminary network finite binary network domain finite binary pair ordered subset cartesian specifies allowed pair proceeding reverse verifying pair allowed network instantiation satisfied consistency network consistent viable consistent domain viable consistency removing viable stab improving background presentingthe algorithmwe proposein briefly recall mcgregor mcgregor built propagation scheme recommended next subsection main close initialization phase line propagation phase line remove line handling queue propagated seen domain modified picked queue line involving propagated mackworth chmeiss jgou name main functionac boolean false closely examine removing domain inside propagation queue subprocedures boolean pick false true boolean false remove true line line provoke call involving line look perhaps even take removing lead call look cost lost looking blindly time modified queue modified data removed last propagation call systematically looking really lost namely line process probability actually find lazymode sufficiently parameter ratio decide line boolean lazymode true ratio reached lazymode false exactly going line testing part line ratio looking effectively sought subprocedures boolean pick lazymode ratio false reset true lazymode boolean boolean false remove true save briefly correctness lazy mode domain skipped find line deleted last propagation line mean exactly thus looking useless remains consistent size size largest domain give assumed built recommended propagation scheme need attach queue main examined size lead thus time time like need data maintained domain maintained lookahead call look know lost last case look whole remember last time revised gain twofold last removed exploring effectively removed explore last predecessor checked extra data remember last lead last call lazy mode cost checking removed dependent removed test replace test consequence equally used constraintbased propagation simply replaces propagation procedure initialized beginning line belongs case look nothing done line storing checked ordering know thus look subprocedure false boolean else remove true removed simply belongs find removed looking ccks time ccks time ccks time time phase transition phase transition scen inconsistent consistency mean ccks mean time time pentium port need save proving correctness done quickly framework close exactly initialization phase line assumed belong propagation diverge revise opposed long checking belongs sufficient done limiting ordering used visit sufficient call stopped soon smallest size propagationscheme used constraintbased pointer involving give time call test thus work call pair test time optimal mohr henderson optimal consistency literature free list optimal list refinement namely remains time said previously goal compete subtle data propagation phase even fulfill expectation give marker consistency preprocessing permit refinement consistency used preprocessing case chance propagation real fall phase transition consistency gent bessire used prosser parameter size domain density forbiddentuples tightness scen fullrlfap archive link frequency assignment rlfaps cabon parameter ratio used four plus case little propagation reach consistent inconsistent best case poorly propagation suffer fourth phase transition consistency sparse dense much propagation reaching consistent respective smarter ccks time ccks time ccks time time scen scen graph graph graph mean ccks mean time time pentium dominates dominates time scen fullrlfap consistency sufficient inconsistency maintaining consistency show refinement consistency maintained sabin freuder find contained fullrlfap archive find none took ratio noticed satisfiability best criterion scope slight gain scen noticed ratio slightly improves ratio seems best gain seen time twice time scen phase transition consistency tends show trick storing data significantly keep mind comparing data prevents reaching list propagation high namely hard enforcing consistency need scen consistency binary network close inherits time thanks data optimal time briefly recall bessire look smallest ordering viable smallest list smallest removed stream driving propagation picked look next corresponds namely removed propagated closer list involving leading property network follow ordering looking propagating deletion enforcing consistency follow ordering performthe initialization phase stop soon compatible exhausted removing propagation phase look lost ordering thus find remove time property characterized find look handle data characterize time namely fact data deletion propagated property network removed propagated propagate operation propagate property know process leading traverse list operation belongs operation illustrate case compatiblewith compatible imagine removed lead case propagating much even none need empty stop take imagine removed mean clearly outperform empty thanks property characterized propagate removed give best propagate imagine switch soon forget list switching deduce time belongs cheaply elaborated maintain list even putting time permit switch reverse time process achieving consistency emphasizing easiness maintained deal tuple tuples ordered ordering domain combined ordering used searching ordering call removed simply tuple belongs look tuple belongs looking handled care propagation used recommended propagation duplicated queue propagate propagation precise propagation propagation take modified consecutively queue consecutively picking call revise revise picking call revise revise revise twice overcome weakness need precise propagate deletion technically dependent architecture used ilog laburthe conclusion refinement improves slightly time need data maintained need data maintained data permit decrease time optimal literature achieving optimally consistency free list contribution opening opportunity vein work wallace leading acknowledgement like thank philippe charman pointed side propagation also want thank ocre team specification choco bessire bessire freuder rgin inferenceto reducearc consistencycomputation proceeding page montral canada bessire bessire freuder rgin metaknowledge reduce consistency computation artificial intelligence bessire bessire arcconsistency artificial intelligence cabon cabon givry lobjois schiex warner link frequency assignment chmeiss jgou chmeiss jgou propagation artificial intelligence tool gent gent macintyre prosser shaw walsh constrainedness consistency proceeding page linz austria ilog ilog user manual ilog edition laburthe laburthe user manual choco edition mackworth mackworth consistency network artificial intelligence mcgregor mcgregor consistency subgraph graph isomorphism mohr henderson mohr henderson path consistency revisited artificial intelligence prosser prosser empirical phase transition binary satisfaction artificial intelligence sabin freuder sabin freuder contradicting wisdom satisfaction proceeding seattle hentenryck hentenryck deville teng generic artificial intelligence wallace wallace establishing consistency csps proceeding page chambry france optimal yuanlin roland school computing singapore kent ridge road singapore zhangyl ryap widely used consistency enforcing satisfaction strength empirically extensible worst case time optimal mackworth freuder size largest domain show suprisingly achieves optimal worst case time path consistency time best show comparable simpler significantly hard consistency satisfaction consistency used many many consistency mackworth mohr henderson bessiere bessiere mackworth worst case mackworth freuder give size largest domain deeply rooted literature wallace bessiere thus theoretically optimal time aware optimal firstly simplest practically wallace simplicity revision make convenient amenable many system thus outperform theoretically optimal show achieves worst case optimal time surprising coarse grained revision mackworth optimal fine grained revision preliminary show comparable easy substantially optimal fine grained hard phase transition significantly comparable best also show path consistency time best background give background used herein follow montanari mackworth satisfaction finite domain binary simplicity binary omitting unary mackworth loss generality pair graph graph refer directed edge throughout size largest domain graph consistent hold consistent graph consistent enforcing consistency presentation mackworth mackworth freuder slight node consistency removed procedure revise false true endif procedure revise revise endwhile task revise remove invalid show line lead worst case argue think framework modeled graph revise line domain modified revise queue used hold need mackworth freuder modified facilitate presentation mackworth freuder time time revision revised enters enters deleted line enters time thus revised time revise time revise reader referred mackworth mackworth freuder motivation concerning consistency view view worst case time naive line searched scratch hereafter ease presentation call classical line need searched scratch even enter many time simply resumed stopped revision idea procedure existy loss generality domain ordering resumepoint remembers hold revision succ domain consistency enforcing successor ordering belonging domain precedes domain procedure existy resumepoint domain true else resumepoint true endif false endif procedure searching revise worst case time achieved helpful regard call existy time spent enters time passed existy time existy line simply skipped next loop line time spent observe existy loop line skip give thus time spent checking thus graph good need remember resumption extra idea behind applies path consistency enforcing pair removed need recheck pair composition resumption remembered pair hold resumepoint employed idea partially motivated chmeiss jegou empty revise endwhile procedure false else resumepoint path consistency enforcing time time best anydo resumepoint succ else resumepoint endfor revision procedure preliminary preliminary consistency bessiere regin statistic consistency empirical classical property many consistency wallace bessiere bessiere adopt used bessiere namely csps link frequency assignment rlfaps zebra zebra discarded benchmarking bessiere good concern artificial domino worst case frost characterized tightness tightness pair permitted tuple tightness seed bessiere constrained csps consistent constrained csps inconsistent sense domain empty process consistency enforcing phase transition gent separated consistent labeled made consistent consistency enforcing inconsistent labeled bessiere rlfap rlfap cabon assign frequency communication link avoid interference celar rlfap domino informally domino undirected graph trigger domain trigger identity domino characterized parameter trigger make invalid consistency trigger domino domain domain left revision remove work used illustrate like revision oriented worst case imagine ccks time ccks time ccks time ccks time ccks time ccks time rflap ccks time ccks time ccks time ccks time celar rlfaps domain operation employing list queue node incident revised chmeiss jegou node ccks time ccks time ccks time domino queue queue revised fifo code pentium processor linux note list list bessiere slower bessiere adopts list consistency dimension time ccks test pair satisfies cheap thus line counted tabulated ccks represents tested time time listed constrained time slowdown constrained close hard phase transition show term time close celar rlfap rlfap rlfap consistent slowdown rlfap rlfap term take time explained main contribution slowdown maintenance list domain list checked occupied list released show overhead maintaining list compensate checking cheap domino show show half explained time spent justifying validity domino also show magnitude slower time rlfaps show satisfactory hard view work work consistency work wallace summarize discussing give insight consistency classified propagation employed oriented oriented oriented propagation originates computation graph oriented propagation originates computation graph graph thus rigorous name graph graph idea oriented propagation removed checked thus fine grained oriented propagation graph also coarse grained fine grained graph time graph straightforward computation propagation differ graph mackworth open mackworth freuder regarded realized view thought optimal worst case simply remembers revision lazy forgetting computation improving chmeiss jegou graph lazy bidirectional property property isolated consistency enforcing note idea metaknowledge bessiere computing term bidirectionality employed coarse grained gaschnig exploited graph propagation heuristic wallace propagating deletion bessiere also applicable clear picture relationship methodologically perspective time worst case time straightforward commonality face domain shrink process consistency enforcing thus recorded make view lead also used practical applying bidirectionality decrease cost cheap overhead bidirectionality compensated demonstrated bessiere also ordering processed classical make well practice wallace bessiere reach worst case theoretically constructing graph like take simpler worst case practice artificial real life rarely make behave worst case graph induced convenient accurate tool studying consistency graph lead worst case optimal strength monotonic hentenryck coarse grained monotonic consistency done view fine grained deal rlfap enforced consistent coarse grained difficult coarse grained deal tricky fine grained monotonic coarse grained fine grained competitive optimal worst case good empirical varying consistency enforcing property like bidirectionality like monotonicity heuristic desirable wallace give comparing work complement sense optimal worst case time conclusion natural previously worst case optimal time even brings optimal worst case time also used path consistency worst case time give time practice time prime consideration preliminary show significantly reduces time hard consistency time competitive best benchmark bessiere planed believe celar lead robust real also show lead path consistency conjecture chmeiss jegou give practical path consistency work want examine maintaining consistency acknowledgment grateful christian bessiere benchmark acknowledge generosity french centre celar benchmark bessiere bessiere arcconsistency bessiere bessiere freuder regin metaknowledge reduce consistency computation bessiere regin bessiere regin combined heuristic forsake hard proc practice cambridge cabon cabon givry lobjois schiex warner link frequency assignment chmeiss jegou chmeiss jegou miss time proc aaai frost frost bessiere dechter regin http gaschnig gaschnig case backtrack satisfying assignment proc gent gent maclntyre prosser shar walsh constrainedness consistency proc practice cambridge hentenryck hentenryck deville teng generic mackworth mackworth consistency network mackworth freuder mackworth freuder network consistency satisfaction mohr henderson mohr henderson path consistency revisited montanari montanari network property path consistency revisited intelligence tool wallace richard wallace establishing consistency csps proc chambery france wallace wallace freud ordering heuristic consistency proc canadian vancouver consistency monotonic linear proc practice singapore temporal reasoning preference lina khatib paul morris robert morris francesca rossi kestrel dipartimento matematica pura applicata computational nasa ames moffett universita padova belzoni padova italy reasoning involving manipulation temporal viewed implicitly inducing ordering involving time duration ordering preference pair constrained preferable delay explores temporal specified preference criterion reasoner must infer extent preference best temporal reasoning reasoning temporal preference resulting formalism examined restriction preference preference enforced tractability case shortest path used globally preferred time motivation real temporal reasoning naturally viewed involving preference long last ordered antenna earth orbiting satellite landsat must slewed pointing ground recorded data downlinked earth part daily landsat scheduling window identified slewing ground antenna thus assigning time antenna slewing landsat vibration satellite turn affect imaginginstrument instrumentis duringslewing consequently preferable slewing overlap scanning detrimental intermittently disjointness best expressed hard expressed time scanning slewing preferred cascading assign satellite must well time contact ground satellite turn data downlinked conflict preference maintaining maximal contact time ground reasoning simultaneously hard temporal preference illustrated subject system temporal reasoning globally preferred sense simultaneously meet best extent preference criterion expressed formalism reasoning temporal preference formalism temporal satisfaction tcsp framework dechter preference soft formalism bistarelli framework defining involving soft temporal resulting temporal satisfaction preference tcspps introduced tcspps temporal preference stpps also demonstrate hardness tcspps stpps pinpoint hardness preference form restricting admissible preference convex consequently tractable framework stpps introduced shortest path globally best stpps restricted preference work temporal preference framework merger formalism temporal satisfaction tcsps dechter soft semirings bistarelli merger temporal satisfaction preference tcspps tcspp soft temporal pair consisting disjoint preference preference preference involving time preferred delay minimized assigning preference close assign closer must close classical tcsps soft temporal depicts restriction time case unary pair distinct case binary unary representing restricts domain representing time occurrence shorthand binary restricts case expressed binary introducing beginning time recasting unary binary involving case tcspp call temporal preference stpps fact generalize dechter case polynomially solvable tcsps preference obvious next tcspp assignment satisfies preference combining preference formalize process combining preference preference comparing impose semiring onto tcspp framework semiring tuple additive operation commutative associative unit multiplicativeoperation associative distributes unit absorbing semiring idempotent absorbing commutative informally give tuples read monotone lattice idempotent distributive lattice greatest main idempotent also restrict case semiring preference soft take semiring operation evaluated term preference locally precisely tcspp semiring soft abbreviated preference multiplicative operator semiring abbreviate preference optimal tcspp best preference best ordering semiring semiring used fuzzy schiex preference preference best maximal semiring classical mackworth preference true false preference preference best preference true true false induced semiring thus recasts classical tcsp framework tcspp network find network explicit task normally enforcing consistency tcspps path consistency soft semiring intersection soft soft pairwise intersection composition soft soft composing path size strict tcspp pathconsistent multiplicative operation semiring idempotent easy applying operation tcspp tcspp applying operation final tcspp independently thus tcspp transformed tcspp applying operation call path proven tcsps tcspps semiring dechter tcspps semiring thus applying path insufficient hand stpps semiring coincide applying path sufficient remaining tcspps stpps also subclass identified semirings preference tcspps stpps noted tcsps preference make optimal obvious tcspps well turn stpps recall polynomially solvable thus speculate true stpps show stpps fall stpps stpps npcomplete stpps belong feasibility wish sttp preference time verificationalgorithm chop preference preference chop temporal preference remainder verification process reduces verifying temporal csps tcsp done choosing edge tcsp resulting done time sttps belong hardness reduce arbitrary tcsp stpp thus tcsp take soft temporal containing thus belonging stpp semiring resulting stpp classical thus allowed preference false true ordered soft preference give thus stpp optimal semiring coincides tcsp tcsp optimal stpp linear preference hardness stpps derives semiring preference identifyclasses preferencefunctionswhich tractable subclass stpps preference stpp linear semiring operation maintain linearity preferencefunctions stpp linear tractable cormen thus tcspp pair take linear preference fuzzy semiring preference preference semiring minimize preference case resulting constitutes linear linear preference expressive many case also need preference linear arises want must close unless preference convex linear case preferred close subintervals preference case preferencecriteria step convex linear convex also step property draw horizontal line anywhere cartesian plane line form show formally form easy linear well convex step close criterion coded linear preference specified preference closed operation intersection composition semirings happens fuzzy semiring intersection composition operation closure follow closure intersection property preserved intersection semiring idempotent multiplicative operation binary additive operation arbitrary semiring definedas multiplicative operation semiring well suffices identifies empty identifies empty empty operator assumed idempotent closure composition property preserved composition semiring idempotent multiplicative operation binary additive operation arbitrary semiring well suffices identifies empty identifies empty empty operator operator assumed idempotent closure idempotence operator demonstrated monotonicity operator preference real also clearly note distinct incomparablevalues must next case idempotence satisfied preference case satisfies idempotence also imply applying path stpp preference semiring multiplicative operation idempotent totally ordered network induced soft also next stpps tractable stpps preference semiring idempotent multiplicative operation tractably transforming arbitrary stpp preference stpp semiring preference soft stpp defines pair transformation soft stpp refer yield solvable highest preference ordering induced semiring optimal stpp stpp preference semiring idempotent take highest optimal stpp provethat optimal stpp take instantiation stpp signment preference soft contradiction optimal stpp instantiation monotonicity mean take smallest call construct easy highest contradicting next optimal stpp take optimal stpp mean stpp take construction stpp idempotent thus optimal initially assumed optimal givenstpp process consisting iteratively choosing phase performedin time process tractable phase conducted naively trying chop checking binary also chop also namely semiring finite exponential stpp binary semiring countably infinite preference never infinity highest preference exponential find step phase induced transforming graph graph shortest path graph dechter arbitrarily pick time time find time time imaging slewing preference preference landsat phase cormen main generaltcspps tcspp polynomially solvable tractability temporal preference underlyingsemiring constructing comparing preference despite encouraging extent real preference conform utilize clear illustrate motivating outset illustrated imaging constrained slewing soft prefers overlap occurrence preference slewing visualized pictured preference squeezing endpoint slewing time imaging time removing segment slewing time preference dealing case preference work work merging temporal csps soft morris khatib used framework reasoning recurring framework rabideau preference propagation primarymechanismforfinding goodcomplete optimality demonstrated property characterizes preference convexity horizontal line drawn cartesian plane around reminiscent used characterizing network consistency tractability applying path consistency beek dechter view connection note convexconditionfor matrix binary prohibits interrupted zero replacing matrix preference pair domain generalize convexityto prohibit preference decrease intuitive idea preference formalism characterizing involving temporal duration well preference formalism merges framework temporal csps soft inherits generality also rigorous examination computational property merger acknowledgment thanks david mcallister rina dechter alessandro sperduti helpful comment work work partially funded nasa ames network getgrats graph transformation system bistarelli bistarelli montanari rossi optimization march cormen cormen leiserson rivest cambridge dechter dechter meiri pearl temporal network artificial intelligence freuder wallace freuder wallace satisfaction artificial intelligence mackworth mackworth consistency network artificial intelligence schiex schiex fargier verfaille valued satisfaction hard easy proceeding page morgan kaufmann morris khatib morris khatib reasoning recurring satisfaction optimization computational intelligence rabideau rabideau engelhardt chien generic preference incrementally plan proceeding nasa internationalworkshop planningand schedulingfor march beek dechter beek dechter minimality consistency rowconvex network multidimensional knapsack michel vasquez parc scientifique besse nimes cedex vasquez universite lavoisier anger cedex multidimensional knapsack combine linear tabu resulting improves significantly best benchmark multidimensional knapsack selecting subset item profit maximized knapsack satisfied formally stated maximize subject binary profit knapsack case classical knapsack usual knapsack profit gain volume occupation want fixed profit maximized knapsack exceeded well strongly case formulate many practical capital budgeting profit consume unit resource goal subset profit maximized resource satisfied cargo loading shih cutting stock processor allocation distributed system gavish pirkul coefficient practical surprising find literature give brief review next like many combinatorial optimizationproblems heuristic branch shih shih shih solves exactly constrained relaxed knapsack tighter relaxation lagrangean surrogate composite relaxation gavish pirkul exponential time size heuristic heuristic concern part greedy construct greedy criterion time violation heuristic linear relaxation possibility relaxe integrality optimally relaxed simplex possibility surrogate composite relaxation osorio metaheuristics simulated annealing drexl tabu glover kochenberger hanafi freville genetic beasley metaheuristic approachhas allowed competitive heuristic utility criterion selecting case criterion corresponds ratio multiplier column vector impossible optimal multiplier thus criterion mislead alternative explore fractional optimal linear guide neighborhood tabu main idea around fractional optimal benchmark best show outperforms previously best tested next scope describes used promising whole give computational idea around fractional optimum relaxed hypothesis around high practice phase phase exactly relaxation find fractional optimal phase exploring carefully efficiently area around fractional optimal clearly many work done phase carried simplex relaxed phase ensured tabu relaxing integrality sufficient optimal away optimal binary convinced five knapsack relaxed lead fractional optimal optimal cost optimal binary optimal cost relaxation enforced give precise regarding discrete property relaxed series maximize defining hyperplane thus promising around careful carried show extra take leading relaxed give optimal binary case explorearoundeach fractional optimum carried away fractional optimum explore threshold composed step hyperplanes simplex fractional optimum tabu around sphere fixed radius hyperplanes simplex phase size obviousthat regarding optimum exploring hyperplanes much time consuming good feasible heuristic simplex minimize optimal knapsack hold fewer item maximize optimal hold item violate consequently hyperplanes simplex relaxed give tinuous optimum used phase tabu phase comprehensive tabu glover laguna give briefly understandingof oriented configuration binary vector unconstrained feasible unfeasible figuration move changing giving binary flipped move identified vector move neighborhood subset configuration reachable move binary move identified ambiguity flipping move move reduction regarding knapsack relaxed also largest explored tabu take idea previously limitation sphere fixed radius around optimal relaxed limitation configuration visited tabu intersection hyperplane binary continuous heuristic maximal sorted decreasing fractional worst case item give corresponds case binary vector tabu process around note disjoint good feature distributed area qualitative visited configuration best feasible configuration neighborhood neighborhoodwhich satisfies classical neighborhood remove configuration time neighborhood used neighboring configuration configuration thus easy neighborhood sect indifferently evaluates whole neighborhood move time iteration tabu list reverse elimination introduced fred glover glover lead tabu tabu visited storing list pair completed move telling move forbidden need trace back list build list residual cancellation dropped corresponds move leading visited configuration dammeyer glover time move counter move need trace list time meet move said tabu move counter tabu whole neighborhood configuration corresponds equivalence updatetabu list repeat list else trace back list configuration make move take configuration used break time list reset tabu explores area trying reach feasibility tabu consideration work series like find strictly list size considering last feature sect twice iteration cost configuration built greedy heuristic item largest computational procedure coded kind distributed like seed srand tested classical used aboudi jornsten balas martin beasley dammeyer drexl freville plateau glover kochenberger shih toyoda size varies item easy find optimal move counter else repeat move reset list list time thus omitted list size fixed next list size fixed move tested constituted last seven also largest item benchmark glover kochenberger glover kochenberger particularly difficult branch show column best reported hanafi freville column column show item best cost observe column give move time elapsed reach know move process take thus test last column give hyperplane visited test concern largest benchmark item beasley beasley reported beasley best improves significantly time last iteration column show seven hyperplanes scanned procedure giving time iteration find beasley benchmark divided series subset best osorio glover hammer osorio column column osorio cutting surrogate column reproduce also osorio column best cplex cplex column percentage continuousrelaxed optimumand best cost stopped hour computing tree size memory byte exceeded best never byte memory approachoutperforms finish presentation beasley benchmark show best latest glover kochenberger http benchmark item thus column best site give mention experimentation showed regarding computing time size neighborhood reported conclusion tackling multidimensional knapsack combine linear progamming tabu idea obtaining promising continuous optimum explore carefully efficiently binary area close continuous optimum carried introducing hyperplane geometrical qualitative tabu integrates also feature reverse elimination dynamic tabu list move tested benchmark tested inconvenience computing time item partially time neighborhood used despite constitutes promising possibility relaxed knapsack precisely relationship find good crossover operator cooperative distributed hope idea behind explored tackle acknowledgement like thank reviewer comment aboudi jornsten aboudi jornsten tabu pivot complement heuristic orsa computing balas martin balas martin pivot complement heuristic beasley beasley genetic multidimensional knapsack heuristic dammeyer dammeyer dynamic tabu list reverse elimination annals operation drexl drexl simulated annealing multiconstraint knapsack computing freville plateau freville plateau multidimensionnel encadrement somme recherche operationnelle gavish pirkul gavish pirkul allocation data base processor distributed computting system distributed data processing gavish pirkul gavish pirkul multiconstraint knapsack optimality mathematical glover kochenberger glover kochenberger tabu multidimensional knapsack osman kelly metaheuristics page kluwer academic publisher glover laguna glover laguna tabu kluwer academic publisher glover glover tabu orsa computing hanafi freville hanafi freville tabu multidimensional knapsack european operational osorio osorio glover peter hammer cutting surrogate multidimensional knapsack hearin shih shih branch multiconstraint operational toyoda toyoda simplified obtaining exponentiated subgradient heuristic boolean dale schuurmans finnegan southey robert holte waterloo dale fdjsouth computing alberta holte boolean linear blps ubiquitous satisfiability testing planning resource winner determination combinatorial auction type althoughincreasingly work tended specialized type task loosely patterned methodsfrom task thispaper introducea procedure simultaneouslyapplied tothe modification suspect well specialized find case show generic simultaneously achieves comparable satisfiability winner determination combinatorial combine idea idea boolean linear constrained optimizationproblem must binary assignment linear simultaneously optimizing linear side canonical form subject clearly case linear referred many naturally expressed satisfying truth assignment propositional work ottawa alternatively restrict find convenient kautz selman winner determination combinatorial auction sandholm fujishima planning resource kautz walser vossen scheduling configuration walser investigate hard worst case optimization nevertheless remain extensive invested improving exponential time optimal answer developing heuristic optimal answer identifying tractable subcases subcases distinctionbetween guaranteed terminate optimal incomplete make nevertheless good answer reasonably quickly conduct systematic assignment pruning rule ordering heuristic reduce assignment visited correctness incomplete hand typicallyemploy investigate neighborhood assignment flipping assignment take greedy step evaluating neighbor heuristic principled incomplete proven surprisingly many domain progress notably kautz selman well hoos boutilier investigate incomplete impressive breakthrough incomplete achieved tailoringmethods good illustration system hoos boutilier casanova system hoos mcallester neither opposing wsat system walser wsat selman achieves impressive nevertheless soft manually replace optimization main contribution investigated case yielding benefit presume generic specialized form achieves competes combining idea subgradient optimization lagrangian relaxation idea machine learning multiplicative exponentiated gradient conclusion draw fruitful idea yield benefit acknowledged background constrained optimization increasingly well informed extensive foundational work gomes investigated task tended emphasis developing applicable employ branch linear lagrangian relaxation cutting plane branch prune away assignment systematic martin yielded sophisticated highly optimized cplex system well specialized investigated fact unclear specialized andersson perhaps well systematic branch literature also body work incomplete heuristic approximately magazine oguz larsson simplest widespread idea subgradient optimization arises begun analog subgradient optimizationas core system system schuurmans southey also thornton sattar frank davenport interestingly satisfying assignment tobe recapitulatinga forty year idea going back everett show straightforwardsubgradient optimization withjust yield competes withdlm arguably fastest procedure interestingly specialized fact demonstrate modification parameter find well relative impressively case also find cplex system well perhaps best investigated give renewed investigating combine well understood idea exponentiated subgradient need recap constrained optimization canonical constrainedoptimizationproblem form lagrangian vector matrix real valued lagrange multiplier think multiplier simply violation thus lagrangian thought penalized vector violation imagine minimizing penalized lagrangian turn constrained optimization unconstrained optimization fact unconstrained optimization used dual dual subject note dual weak duality asserts bertsekas martin lagrange multiplier vector give optimum best achievable boundis achieved solvingthe dual maximizing subject yielding optimal duality asserts duality linear convex real valued bertsekas dual case constrained valued althoughthe dual used existence duality obtaining optimal achievable subgradients generalize gradient nondifferentiable note subgradient uniquely nondifferentiable ranging branch obviously natural desire maximize searching lagrange multiplier vector natural proceed vector unconstrained vector knowing vector complicated fact nondifferentiable lead last subgradient optimization concave bertsekas subgradient vector intuitively subgradient vector give plane sits touch serve plausible wish need find subgradient fact minimizing resulting vector residual violation subgradient bertsekas martin despite overbearing terminology subgradient optimization fundamentally procedure subgradient optimization optimal take vector lagrange multiplier primal vector minimizes lagrangian proportionalamount residual violation maintaining rule note intuitive violated decreasing satisfied guaranteed iteration guaranteed move closer sufficiently bertsekas idea back everett great success held karp many subgradient optimization used generating good branch lagrangian relaxation fisher subgradient optimization also used heuristic approximatelysolving straightforwardway iteration simply feasible satisfies feasible keeping best reported magazine oguz larsson interestingly last year procedure inadvertentlyrediscovered inthe ailiterature incomplete clause weighting scheme turn form subgradient optimization main control loop procedure work fixing profile clause lagrange multiplier greedily searching assignment assignment minimizes clause violation lagrangian updating clause unsatisfied comprises subgradient optimization step subtle procedure subgradient optimization outlinedabove system explicitlyuses lagrangian multiplierupdates follow system system schuurmans southey simpler albeit slower uncertain significance nevertheless simplicity latter hypothesis investigation clear connection procedure subgradient optimizationtechnique conduct deviation identify deviation truly beneficial intent validate refute significance idea literature linear nonlinear penalty subgradient optimization penalize violation subgradient optimization also satisfied proportionallyto degree violation augmented lagrangian extends introducing penalty violation penalty linear penalty hinge penalty note implicitly hinge penalty dual penalty primal intuitively hinge penalty favor satisfaction satisfied violation unsatisfied observe linear penalty lead poor satisfaction task unfortunately consequence choosing nonlinear penalty functionis findinga assignment minimizes tractable cope difficultyai replace optimizationprocess greedy augmented randomization follow subgradient despite locally optimal dual hinge penalty retain linear penalty multiplicativeversus additiveupdates procedure multiplicatively additively analogy work multiplicative machine learning kivinen warmuth multiplicative naturally exponentiated subgradient additive vector penalized violation bothtypes ofupdate find multiplicative work smoothing schuurmans southey also idea smoothing pulled back toward population rule satisfied requiring violated noticeable exponentiated subgradient optimization final procedure subgradient optimization main augmentation augmented lagrangian hinge penalty linear penalty multiplicative additive smoothing uniformize requiring violated parameter final procedure noise parameter four variant multiplicative hinge linear penalty additive penalty final procedure differs system schuurmans southey many arbitrary task applicable even form devised remain minor multiplier dual adaptive multiplier obtains primal penalty primal dual phase exponential procedure restart reached primal greedy find locally minimizes stuck probability take move continue dual step procedure hinge hinge penalty phase smooth smooth satisfied probabilityof steppingout primal employ deterministic primal simplification streamlined yield reduction overhead step simultaneously task applying specified clause clause disjunction literal literal assignment true false goal find assignment truth clause satisfied literal framework equivalently subject vector zero literal literal assignment true assignment false idea behind clause encoded vector nonzero occurring sign violatedonly assignment agrees coefficient nonzero yielding sign flipped drop satisfied note zero vector mean minimizationcomponentof thisproblemis trivialized nevertheless remains hard satisfactionproblem trivializedobjective undue difficulty introduced accommodate satisfaction constrained optimization framework albeit restricted hooker subgradient optimization novelty wsat gsat hsat fail step step cplex probs cplex probs cplex probs best last system collection satisfiable benchmark satlib runon theirstandard inputrepresentations transformed alternative encoding affect beacham find transformation yield reasonable system recorded wall clock time piii processor primal step flip reach proportion step avoid need tune restart threshold employed schuurmans southey time torecord distributionof solutiontimes used step optimal restart scheme distribution parkes walser remaining parameter manually tuned parameter walk noise tunable parameter dale satlib used phasetransition ratio clause roughly chanceof satisfiable verified satisfiable flat encoded hard graph coloring remaining derived planning series collection tuned arbitrary collection parameter tuned publishedvalues hoos stutzle tuned default parameter choosing best fail step step specialized procedure satlib salient feature linear penalty poorly anticipated unable allotted step also show multiplicative superior additive regardless penalty used omitted also smoothing improves beneficial cplex poorly show scale forsat resultsshow tends tofinds solutionsinfewer primal step flip procedure time flip time time mean time comparable nevertheless reduction step structured planning notable tend demonstrate time demonstrate time flat note none procedure cplex modification optimal winner determination combinatorial auction introduces nontrivial optimization subgradient optimization remains applicable task modifying nevertheless conduct gain time much studied literature growing rapidly optimal winner determination combinatorial auction item quantity specified subset item request matrix request item find maximizes revenue subject none item quantity exceeded expressed subject canonical form transform canonical form substitution transformed converted back task cplex casanova hoos boutilier loosely tested suite realistic tend systematically easy tested also tested artificial literature sandholm fujishimaet shownto vulnerableto trivial andersson hard push envelope difficulty also encoded hard combinatorial auction quadratic reduction unfortunately limitation preclude reduction show converted difficult size cplex optimal timed acknowledge reportingignores anytime seems sufficient give indication anytime recorded fraction optimality achieved case failed allotted time show subgradient optimization procedure show linear penalty weaker hinge lesser extent interestingly additive work well multiplicative weaken harder system encountered show casanova cplex artificial show little cplex cplex also prof answer optimal nevertheless show roughlycompetitive withcasanova specialized task note proportion fail find optimal fact even tend find near optimal holte difficulty gaining last percentage optimality show casanova demonstrates inferior difficult encoded nevertheless challenged interestingly cplex slows transforming encoding encoding used slows conclusion introduced exhibit absolute best nevertheless compete well type feel lagrangian introduced investigation myriad walksat variant pursued work investigate idea literature tabu glover resende voudouris tsang competitive perspective weak duality insightful fact obvious note imposed precisely subgradient also easy vector violation must yield subgradient acknowledgment nserc cito thanks holger hoos craig boutilierfor helpful comment access casanova thanks also peter beek referee many helpful suggestion assistance istvan hernadvolgyi also warmly appreciated fail step subgradient optimization fail step cplex casanova cplex casanova cplex casanova cplex casanova cplex casanova cplex casanova synthetic fail step cplex casanova cplex casanova hard encoded andersson andersson tenhunen ygge combinatorial auction winner determination proceeding beacham beacham chen sillito beek constraintprogramminglessons learned crossword puzzle proc canadian conf bertsekas bertsekas nonlinear optimization athena davenport davenport tsang wang genet connectionist architecture satisfaction proceeding page everett everett lagrange multiplier optimal allocation resource operation fisher fisher lagrangian relaxation frank frank learning gsat proceeding page fujishima fujishima shoham taming computational combinatorial auction optimal proceeding page glover glover tabu part orsa computing gomes gomes duality randomization theme proceeding page held karp held karp travelling salesman spanning tree operation holte holte combinatorial auction knapsack proceeding canadian hooker hooker ottosson thorsteinsson integrating propagation linear combinatorial optimization proceeding page hoos boutilier hoos boutilier combinatorial auction stochastic proceeding page hoos stutzle hoos stutzle empirical automat reas hoos hoos stochastic proceeding page kautz selman kautz selman pushing envelope planning propositionallogic stochastic proceeding page kautz walser kautz walser statespace planning optimization proceeding page kivinen warmuth kivinen warmuth exponentiated gradient gradient linear predictor infor comput larsson larsson patriksson stromberg conditionalsubgradient euro oper supply optimization collaboratively proceeding page pearson shoham universal test suite combinatorial auction proc magazine oguz magazine oguz heuristic multidimensional knapsack euro oper martin martin scale linear optimization kluwer mcallester mcallester selman kautz evidence proceeding page parkes walser parkes walser tuning satisfiabilitytesting proceeding page resende resende grasp satisfiability clique coloring satisfiability dimacs series page sandholm sandholm optimal winner determination combinatorial auction proceeding page schuurmans southey schuurmans southey incomplete procedure proc page selman selman kautz cohen noise improving proceeding page thornton sattar thornton sattar weighting proceeding page vossen vossen ball lotem planning proceeding page voudouris tsang voudouris tsang satisfaction guided proceeding page walser walser optimization globalsearch discrete lagrangian hard satisfiability proceeding page dimensional packing andrew wang ying singapore singapore dimensional packing deviate wall layering growing side tested test case able packing reported literature packing faced logistics transportation industry dimensional packing difficult dimensional stock cutting dimensional packing even packing survey packing please refer time derived packing derived packing packing divided main variant variant list size pack subset maximize volume variant list size pack orientation restriction distribution restriction imposed packing maximizes volume utility orientation restriction many heuristic optimize volume primitive gehring wallbuilding heuristic layering packing identical wallbuilding layering data representing free used heuristic comparative heuristic rule freight loading minimizing accommodate cargo examined heuristic rule emphasis wall layering wall flat time retain flat forward packing face mirror process natural many restriction feasible leave thin nonuseful empty near entrance ceiling underutilization also literature used data accessible relatively hard quantitatively packed fashion wall wall treated base locate flexibility tested test case able packing specification rectangular rectangular dimension dimension subset assign maximized subjected must totally contained intersect edge packed must parallel orthogonal wall algo idea packing wang come process constructing erecting construct basement ground rise floor floor play role floor wall ground wall build basement ground basement process like construction wall treated ground stack user reserve wall ground note take consideration packed form flat main idea wall illustrates main idea packing process getting user wall read width height orientation data file criterion subsequently packing best base area empty pseudo code main wall read width height type width height orientation quantity node node node pack getwall user free wall used basically empty ground wall form empty list empty list empty list empty data empty empty list origin system system normal system empty treat origin system lowerupper leftrightx left near emptyy treat origin correspondingcoordinate system nearfar empty system empty list head whole user wall ground empty list head pointing null note empty list take care empty wall base knowing existence empty list accurate empty overlap node namely width height width height area surrounded width base area orientation note used edge orientation type type mean width height node width height node represents orientation type orientation allowed simply omit node orientation boxnode node data file node inserted node list newly node node list node calculates priority parameter volume priority percentage biggest dimension priority percentage routine volume biggest dimension inside node getting front continue priority node behind node nearer head posse volume bigger dimension priority packed note orientation located adjacent priority packed actually pack pack find suitable empty node sane priority term percentage base area occupies base area empty inside pair node empty find pair greatest base area occupation percentage remove pack decide pack remove carefully pseudo code illustrates packing process node head node priority node head empty empty list percentage find pair greatest packed empty remove packed empty empty chance packed empty packed system convert normal system packed list node emptyspace empty packed packing case find good need decide drop priority removing node moving remove node node good else packed system convert normal cooridnate system packed list node empty empty packed updateempty empty packed packed empty modified newly packed affect empty resides also empty nearby empty effectively empty overlap responsibility routine empty process step step system absorb empty updating remove empty list inside empty list resides empty empty packed empty list resides step empty empty list convert system test overlap accordingly overlap case disscussed case intersects corner intersects left near corner case intersects edge intersects left edge plane case intersects part edge intersects part left edge case plane touching corner left plane case away plane away whole left plane case cross pair parallel edge touching corner cross horizontal pair edge case pass pair parallel plane touching corner pass plane case empty empty vertical case whole resides inside case whole updating case remove empty list newly empty inside empty list resides empty list resides successfully java alpha machine unix operating system collection test data nine test data test case packing test data tested tuned parameter packing test file omitted presentation fact pack case size much size packed best packing term volume parameter wall used best packing parameter wall packing left wall moving wall wall wall best parameter wall represents test case represents volume best test file parameter wall volume test case dest file reach high comparable literature need pack hand volume price next phase introduced incorporating packing process buildinggrowing mdbg chooses pair best empty term base area occupation percentage mdbg take care made considers also look pair empty greatest base area occupation percentage pair empty assumed pair temporarily packed packing process continued mdbg onwards packed packed final volume pair empty pair give best final volume pair empty used packing pair empty satisfies best best illustrates idea pair pair greatest final volume packing illustration phase newpack node list pack greatest base area occupation percentage node list empty empty list find best empty greatest base area occupation percentage packed empty remove else base area occupation percentage replace best pair mdbg pack pair pack empty packing pack final volume greatest final packing find empty greatest final volume pack permanently last mdbg experimented test data wall many parameter best packing come wall left wall wall wall wall parameter experience lookahead tested data file parameter wall summarized packing phase best packing come wall left wall wall wall wall parameter volume best parameter wall increased packing listed note represents test case represents volume packing packing time indicated show effectiveness packing coupled test best test file phase ratcliff work literature containing packing test scheme scheme scheme mdbg algo scheme scheme scheme respective scheme ratcliff mdbg algo refers buildinggrowing refers clear volume mdbg slightly scheme ratcliff mdbg coupled much volume scheme ratcliff evidence coupled lookahead give volume packing conclusion packing benchmark packing favorably past work area ngoi whybrew fast spatial manufacturing bischoff marriott comparative heuristic loading european operational ratcliff bischoff ratcliff loading omega mgmt gehring menschner gehring meryer heuristic packing pooled shipment european operational knott egbelu heuristic cargoloading prod george robinson heuristic packing operational dowsland dowsland packing european operational http packing hexahedral proceeding industrial automation singapore page wang ying wang packing honour thesis singapore dowsland dimensional packingsolution heuristic operational satisfiability satisfaction satisfiability balance filtering structured satisfiable henry kautz yongshao ruan dept comp engr univ washington dimitris achlioptas microsoft redmond optas seattle kautz ruan carla gomes bart selman dept comp cornell univ ithaca mark stickel artificial intelligence menlo park california stickel gomes selman hard driven progress deduction satisfaction achlioptas aaai introduced latin creates satisfiable used accurately test incomplete sided investigate biased away distribution satisfiable show imposing balance show family distribution ranging everywhere tractable exhibit sharp hardness threshold also role encoding performanceof bothsystematic hard driven progress propositional deduction satisfiability testing gomes selman introduced quasigroup latin task partially colored completed color repeated column exhibit peak hardness area phase transition percentage satisfiable ratio uncolored cell cell varied implicit domain many scheduling take form thus complement simpler mitchell like generates satisfiable unsatisfiable incomplete benchmark satisfiable problematic domain incomplete filter unsatisfiable proven difficult satisfiable achlioptas satisfiable quasigroup quasigroups hole procedure basically inverts task completed latin color poke hole backbone satisfiable receive achlioptas showed hardest arise vicinity threshold size backbone filtered walksat percentage hole flip walksat satz sato flip backtracks branch filtered balanced peak median hardness despite filtered distribution noted achlioptas aaai threshold ratio hole threshold even significantly discovered hardestproblemsobtainedusing filtered magnitude difficult hardest illustrates incomplete walksat selman parameter fixed percentage hole uncolored graph axis hole divided achlioptas demonstrates adjusts size line peak hardness filtered walksat systematic satz sato boolean encoding competitive superior optimized encoding achlioptas note backtracks satz much systematic lookahead explaining hardness showing biased away distribution satisfiable quasigroup next satisfiable balanced creates even harder foundby filtered summarized last line tool creating hard structured testing incomplete simplicity elegance suggests good structured final turn encode quasigroup boolean satisfiability systematic best encoding view quasigroupas ratherthan encoding impossible systematic unexpected encoding redundant help backtracking walksat picture emerges hardest quickly encoding encoding filtered filtered considering choosing satisfiable quasigroup uncoloredcells easy color cell test completed step impractical largest probability creating satisfiable step vanishingly loop exponentially long time word satisfiable quasigroup relative placing color certainly unsatisfiable quasigroup gomes selman filter many unsatisfiable configuration incrementally partially coloring term cell domain initialized color repeatedly selects uncolored cell assigns domain reduce domain cell column reach inconsistency empty domain erased process anew sufficient cell colored consistency checked pass test hardest unsat hole resulting satisfiable popularity literature simply call distribution process final satisfiability eliminating unsatisfiable filtered hardest hole ratio filtered shifted toward constrained side discovered hardest satisfiable filtering step eliminates latin domain latin left cell colored bottom four probability incremental forward checking successfully bias away unsatisfiable also unintended introducing bias satisfiable generating hole color loss generality step color left reduces domain remaining cell next step pick remaining cell color domain four latin probability probability last probability fourth eliminated final forward checking step color arbitrary latin colored cell column twice like colored cell diagonal introduced achlioptas work latin latin patternof hole illustrating bias ated process cell uncolored answer hole equally step loss generality hole fixed probability creating proportional latin yield fixed hole show simply presenting latin hole counterexample left word left twice biased many hardness dependent uncolored cell also rectangular aligned establish baseline tractable refer rectangular aligned left middle illustrates rectangular column cell column uncolored column partially uncolored aligned rectangular pick column treat rectangular differently aligned column permuted cell colored cell colored cell uncolored note also naturally rectangular aligned show rectangular aligned tractable latin rectangle occurrence combinatorics ryser latin rectangle embedded latin side completing rectangular rectangular column column column partially uncolored partially uncolored column arbitrary uncolored column construct bipartite graph part represents uncolored cell column need color represents color used column edge node colored color column find perfect know unsatisfiable completing column remaining column completing aligned noting aligned trivially rearranged rectangle permutating column possibly column partially uncolored show rectangle rectangle proved rectangular rectangle column time rectangle side column bipartite graph resides build graph color ryser satisfied balance rectangular aligned cluster hole turn hardness minimizing clustering reviewing role balance studied combinatorial optimization satisfiability graph coloring particularly note feature well formed selecting independently clause analyzed employ pure literal heuristic repeatedly literal satisfied thus pure occurrence sign dramatic form sign imbalance next idea propagation satisfying clause dealing shortest clause turned also come exploiting imbalance degree next considering occurrence assignment left rectangular middle aligned balanced hole bayardo schrag gave role balance considering literal numberof clause fraction blindly idea mentioned suggests many backtracks white balanced magnitude harder graph coloring graph vertex formed edge probability graph coloring also vertex prescribed list color analogously pure literal heuristic idea offered degree vertex color safely remove graph vertex degree color remaining graph certainly coloring vertex color neighbor upon potentially reaching vertex degree vertex fewest color remaining highest degree conversely graph list size tend harder color balance quasigroups pick quasigroup turn hole fixing quasigroup hole hardness resulting brevity refer naturally comment column well case hole hole case completed case turn consistent remaining quasigroup seems like good idea smallest hole thus minimizing branching tree equivalently hole column tend make harder even upon deciding hole column placement hole remains highly influential pair hole column hole column permuting column clear move four hole left corner matrix note isomorphic make four hole make giving natural subproblems matrix zero correspond colored correspond hole permute column minimize bandwidth absolute done time exponential bandwidth surprised discover even satz code computes make bandwidth exactly computing bandwidth boundedbandwidth punching hole band diagonal latin shuffling column time hide band satz type size largest tested hole ratio backtrack satz lookahead sufficient uncover hole high probability resulting matrix high bandwidth alternatively view bipartite graph vertex vertex hole high bandwidth relatively standardresults randomgraph fernandez vega hole make graph regular bandwidth intuitively balanced exhibit property hold asymptotic viewing hole regular bipartite graph readily suggests generating hole precisely hole column repeat time repeat time pick remove column balancing former used uncolor cell latter used cell colored incrementally empirical difficulty distribution walksat flip scale percentage hole data represents median flip constrained gorithms preliminary step simplified consistency conjunctive normal form data percentage hole walksat truth assignment noise cutoff satz backtracking augmented lookahead sato type dependencydirected backtracking clause learning data size clearly distinguishes difficulty sufficient data gathered omit sato qualitatively satz walksat note scale major magnitude difficulty constrained graph note opposite presenting consistent achlioptas scale constrained truly easy underconstrained moderate difficulty fact underconstrainedproblemare simply much note overconstrained moderate difficulty cook mitchell peak balanced much harder filtered showing achieved goal creating benchmark testing incomplete balancing filtered resulting balanced difficult balancing make bias remain distinct harder explanation phenomenon aligned rectangle easy walksat show hardness peak area left flip clustering hole prevents consistency overconstrained show ordering hardness peak satz satz rectangle case anomaly quickly lost underconstrained resort exhaustive satz gain lookahead rectangular lookahead pruning sato employ lookahead exhibit anomaly solves rectangular aligned also variance hole column bandwidth balanced variance balanced case averaging rage ratio case thus column hole filled encoding type satz percentage hole backtracks scale data represents median concerned make intrinsically hard practice difficulty also dependent upon backtracks hole hole unit propagation branch satz encoding hardness peak hole quasigroup naturally encoding boolean clausal form turn surprisingly boolean represents color cell encoding call encoding clause color must cell color repeated color repeated column clause cell binary clause clause binary latin viewed cube dimension column color view reveals alternativeway stating latin property holding dimension fixed must exactly true encoding capture also color much color much column color cell size encoding reported achlioptas backtracking encoding competitive specialized particularly surprising fact best take explicit generic noted backtracking quasigroup enhanced dual slaney shaw stickel suggests success type dual encoding pair domain column pair domain encoding give dual free explanationis supportedby extremelypoorperformance encoding neither satz sato hardness peak encoding backtrack work satz explodes underconstrained requiring backtracks encoding satz backtracks scale encoding size encoding satz backtracks explanation satz encoding examining unit propagation triggered tree unit propagation around encodes hard satz bold note time encoding encoding encoding inherently hard walksat even walksat show unusual encoding encoding peak harder encoding thus fact incomparable term hardness encoding walksat satz difficult hardness peak threshhold hard stay hard note underconstrained inherently easy correspond empty reinforces encoding accurately reflects computational property quasigroup distinguish property make inherently hard attack property make accidently hard encoding style accidental property main conjecture balance inherent property evidence conjecture balance time conclusion serve role tool testing reasoning make hard easy distinct fact fall intractable introduced quasigroup serve role showed balance hardness work balancing role literal balance purely structural balancing improves usefulness best testing incomplete retaining formal simplicity elegance achlioptas gomes kautz selman generating satisfiable proc bayardo schrag exceptionally hard proc cheeseman kanefsky taylor really hard proc cook mitchell hard satisfiability survey pardalos satisfiability dimacs series discr math theor comp fernandez vega bandwidth graph combinatorial mathematics northholland gent walsh empirical gsat artificial intelligence gibbs poole stockmeyer bandwidth profile sparse matrix siam numer anal encoding walksat flip scale gomes selman presence perturbation proc hall existence latin bull amer math hogg huberman williams phase transition intell hoos satlib collection tool data impagliazzo levin luby pseudorandom proc stoc kirkpatrick selman satisfiability boolean anbulagan heuristic unit propagation satisfiability proc mitchell selman levesque hard easy distribution proc regin filtering proc ryser combinatorial latin rectangle proc amer math selman levesque mitchell hard satisfiability proc shaw stergiou walsh consistency quasigroup proc slaney fujita stickel automated reasoning exhaustive quasigroup existence mathematics stergiou walsh alldifference make proc gelder contributed dimacs archive sato propositional prover proc stickel putnam automated reasoning consequence laurent simon laboratoire recherche informatique cnrs universite orsay cedex france simon alvaro informatica universidad autonoma madrid madrid spain delval extensive kernel resolution novel zerosuppressed binary concisely process clause considers full prime implicate task restricted target abduction faulttree diagnosis compilation show zbdd push clause many task artificial intelligence posed task consequence propositional base prime implicates abduction diagnosis nonmonotonic reasoning compilation marquis excellent survey unfortunately serious computational address excitement kleer clause system reiter kleer kean tsiknis soon realized system resource even moderately sized waned thus marquis concluding survey consequencefinding computational scope scale well little hope significantly conduct extensive referred quote namely kernel resolution kernel resolution focusing subset clause resolution inoue also novel namely zbdds binary minato compactly encode process clause tison tison prime implicates clausal case kernel resolution efficiently handle clause focused consequencefinding zbdds make able deal computationally time full prime implicate task restricted target abduction diagnosis polynomiallybounded compilation familiarity literature propositional reasoning resolution clause subsumes clause empty clause clause removing subsumed clause implicate clause prime implicate implicate subsumed implicate prime implicates interested subset target simply clause closed subsumption target closed subsumption subsumers clause task interested prime pilt mainly target full clause empty clause clause clause exceed thus corresponds task prime implicates simply deciding satisfiable identical deciding empty also many abduction diagnosis reasoning inoue selman levesque marquis many subset thereof pilk size relevant compilation surveyed cadoli donini sometimes interested logically pilt need thus much concise refer selman kautz also diagnosis kernel resolution review kernel resolution ordered resolution propositional kernel clause clause partitioned part skip kernel target closed subsumption resolution deduction resolution deduction constructed clause resolution permitted upon kernel literal literal resolved upon literal resolvent skip kernel ordering focusing resolvent ltacceptable mean kernel resolution associate bucket clause containing clause bucket indexing kernel largest sumed sorted ascending orderprefix resolvingc ason kernel literal yield resolvent bucket elimination abbreviated exhaustive kernel resolution process bucket computing step resolvent resolving clause upon bucket clause subsumption consequence belong target pilt identical tison prime implicate tison identical directional resolution name dechter rish satisfiability davis putnam directional fact procedure last zbdd trie clause simply ordering identical processing interrupted processed thus pilv logically necessarily identical pilv note case desired clause stored last bucket ordering form behave exactly directional resolution relatively satisfiability ordering stop thus strictly cheaper deciding satisfiability ordering continues computing prime implicates full kernel resolution bucket bbds review bryant excellent survey binary directed acyclic graph node sink node true false labeled node node child classically interpret bdds bdds derives reduction rule robdd ordered simply noted sorted graph isomorphic subgraph rule nodeelimination rule deletes node care classical semantics node labeled path node represents encoded thus viewed shannon normal tree compression bdds encoding sparse boolean minato introduced bdds zbdds encode boolean minato rule rule useless node form path default false mean absent care want encode clause zbdd need labeled literal path represents clause litterals labeling parent path represents zbdd encoding clause compressing zbdds illustrated fact exponential clause captured zbdds size size zbdd size encoded zbdd operator efficiently handle clause exponential size kernel resolution zbdds deal compact encoding kernel resolution need efficiently resolvent identify bucket former task chatalic simon introduced multiresolution rule work clause thus eliminating pairwise resolving clause multiresolution clause clause distributing multiresolution rule inference bucket expressed form rule corresponds resolvent processing main enumerating clause classical resolution step chatalic simon system zres multiresolution mean zbdds zres manipulates clause zbdd explicit clause bucket retrieved zbdd storing clause form zbdds processed specialized zbdd operator clausedistribution multiresolution distributing system come zbdds operator manipulation operator subsumed tautologous clause soon construction resulting zbdd generalize idea focused kernel resolution need deal indexing keep zbdds dead live clause dead clause resolved processed clause dead processed processed processing bucket live zbdd processing done multiresolution done clause dead moved live zbdd dead zbdd test structured benchmark gathering generating well testing represents structured obvious lack time reported timeout dynamic heuristic ordering heuristic chooses occurrence thus trying minimize resolvent labeled zres also kleer namely picomp drcomp prime implicates directional resolution zbdd clause bucket pairwise resolution trie illustrated optimization minimize trie traversal subsumption zbdds never worse much intuitively prefix clause zbdds prefix postfix factoring clause beginning term time nevertheless zbdd really push well prime implicates prime implicate computation remains consequence task tison picomp benchmark chandra markowsky mxky kean tsiknis exponential adder adder connecting full adder circuit probability fattah dechter circuit circuit form suitable diagnostic reasoning pipe drawn qualitative physic benchmark picomp prime implicates picomp mathieu mimic system representing kind drawn scalability handle huge clause thus force reconsider tison limitation picomp simply physically clause like tison competition picomp remains distribution computation involving thousand clause multiresolution step explicit clause remain relative independence time picomp easy huge hard latter satisfiable pigeon excellent satisfiability chatalic simon size compilation major compilation unlikely compilation tractable compiled size unless restrict size zres clause processed moved dead zbdd test benchmark used prime implicates summarizing many test many benchmark family easy cell column percentage benchmark quickly terminates quickly case median gain take particularity benchmark family give taste behave striking tison remains fastest procedure case median gain around case kbound much phenomenon also kbound mean fails kbound remains suggest kbound kbound latter computes much base directional resolution directional resolution compiles linear time test drcomp zres benchmark heuristic file dimacs database mean size size deletion case give good heuristic major ordering force size grow drcomp compete zres zbdds case showing heuristic seems invert picture mainly ordering help keep clause manageable size thousand clause applies tractable directional resolution circuit encoding drcomp take time zres seems overhead many clause despite relatively good reported chatalic simon diversity bench zres drcomp zres drcomp directional resolution hand zbdds scale much dealing abduction hypothesis abducibles abductive explanation clause literal consistent entail subsumed clause explanation subset also explanation adder multiplier circuit introduced circuit want instantiation thus forgetting addressed case failed benchmark also tried iscas circuit benchmark family success interpret appropriately note obtaining pilv mean precomputing answer abduction explanation read pilv kernel resolution also answering abduction opposed tested test flavor diagnosis iscas benchmark note surprisingly adder treated much efficiently phenomenon pointed chatalic simon computing subset proved harder whole harder induced hardness overcomes simplification tison clearly case picomp failed prendinger abbreviated drcomp picomp note bench time time pilv abduction circuit bench zres drcomp picomp abduction path abduction diagnosis aralia rauzy benchmark arise fault tree diagnosis want characterize elementary failure coded entail failure whole system root thus computing root duality benchmark efficiently bdds rewritting shannon normal form rauzy equivalency subformula even encoded identified encoding subformula work zres precisely thus obtaining build root show kernel resolution multiresolution efficiently handle needing rewrite shannon normal form time success diagnosis diagnosis kleer describing normal abnormality diagnosis prime noted palv pilv implicants benchmark zres pilv aralia abduction benchmark bench palv palv diagnosis iscas benchmark yield diagnosis cheaper iscas benchmark four easiest circuit normal introducing gate faulty vector denoting time case reasonable size drcomp also phase fails phase thus implicants system procedure negate hard failed time tested circuit much harder compiled diagnosis basically precompute pilv vector computing pilaboi clearly case procedure opposed full zbdds fixed conclusion drawn anything structured specially case good tool evaluating subsumption optimization resolution bench zres drcomp picomp compiled diagnosis circuit mean picomp consequence dechter rish chatalic simon hard schrag crawford even worse consequencefinding near phase transition threshold powerful picomp ratio clause satisfiable satisfiable mean prime implicates median confidence summarizes last column unsolved maximal time observe zbdds zrestison maximal clause reached median mean maximal zbdds node median mean give node clause despite fact clause even unstructured beginning calculus resolution seen really clause distribution introduces many redundancy seem zbdds conclusion extensive many combining focusing kernel resolution zbdd multiresolution scalability relative independance size handled mainly approached realistic size case spectacular size
