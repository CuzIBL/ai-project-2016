proving system programmed automating propert loop assignment formal system formal typed backward claimed term subgoals hypothesis prover cope correctness compiling formal system explains subgoals aubin describes whole system formal system formal system thought gene outermost term type bool atom consx sexpr sexpr sexpr node simply introduced help case hoare concrete term data type bool case bool false false quire used proving system automating loop assignment provers brotz boyer moore also moore moore system work typed address concordia ouest boul maisonneuve montreal quebec canada implicat equality term type concrete type seen inference rule truth modus ponens equality induction domain word algebra empty cographic ordering domain structural induction hold lead soundness weak completeness case aubin primitive system raised introducing connective cond deriving inference rule term normal form mean rule inspired ketonen dialect gentzen sequent calculus thorough formal system aubin proving seen game formal system rule besides play must meet must follow rule soundness must winning completeness must tolerable resource prover work backward goal subgoals turn subgoals subgoals procedure reduce goal subgoals tactic gordon milner wadsworth sufficient soundness never reduces nonachievable goal achievable subgoals tactic inverse inference rule primitive derived tactic rule truth reduces goal true subgoals soundness mean completeness seen converse achievable goal must nonachievable subgoals tactic rule actually vertible tactic invertible rule prover find counter subgoals succeeds subgoals rejected sure satisfied ground believe subgoals retained sufficient completeness main proving maining contribution preceding lead considering resource prover fact backtracking take goal irretrievably sufficient keep stack goal goal pushed onto tactic reduces goal stack push subgoals onto tactic bearing prover tactic turn goal stack empty simplification inverse derived rule substitutivity equality rule splitting inverse derived rule infer inverse derived rule substitutivity strengthening inverse derived rule weakening infer contraction inverse derived rule substitutivity truth inverse rule truth inverse rule induction inverse induction rule strengthening aborted goal tactic goal false induction induction tactic divided distinct part induce upon induction subgoals induction treat actually submit induction linked studied boyer moore evidence fact recursion suitable induction constrain idea focusing recursion term recursion term term case talk regarding krecursive well talk computation rule computation rule subterm term rule nothing gained completeness view introducing lead aubin computation rule optimal recursion vuillemin usefully need know able rule need know recursion term line reasoning induction goal simplified process stopped marking evaluator must submit occurrence constitute excellent induction upon call occurrence helpfully illustrate take goal appends thus reasoning recursion need trying iterate process know must know know must know know nothing occurrence make good induction equali must know undoubtedly duction note directedness never proved automatically induction evidence replace done induction conclusion occurrence replaced eventually applicable whole goal fact duction integrated natural term occurrence goal induction answer term occurrence leading word term occurrence occurrence call term occurrence occurrence duction theoretically prawitz flavour reverse term occurrence evaluator occurrence answered negatively positively prover find counterexample subgoal answer replace occurrence subgoal achievable actually duction purposeful meaningfully generalize occurrence term find fourth occurrence occurrence generalize successfully yield subgoal proved induction note essential brotz boyer moore separated induction lead nonachievable subgoal pragmatic must searching case chance success term occurrence generalize side equality implication boyer moore brotz system rule elect goal subset subset case goal induction done induction subgoal induction hypothesis used aubin occurrence yield subgoal subset subset proved induction induction subgoal want find induction subgoals induction cular need find heuristically instantiation induction hypothesis also wish discard hypothesis judged useless clear subgoals considerably induction subgoals boyer moore call bomb term bomb goal goal moore argue whereby induction subgoals constructed constitute sound soundness tactic provable system tactic separated nonheuristic part hand induction subgoals type conclusion hypothesis checking admissibility type straightforward easy convince oneself soundness nonheuristic part hand role appearing duction goal giving rejection acceptance instantiation tentative induction hypothesis heuristic part discarding induction hypothesis duction subgoal sound weakening rule preserve achievability duction subgoal instantiating duction hypothesis induction rule induction conclusion hypothesis actually substitution involving induction applying substitution induction goal bundling resulting term induction subgoals induction tactic find conclusion substitution generates representing assumed system induction base conclusion substitution constructed successively binding induction take induction goal zero induction thus next conclusion substitution find zero hypothesis substitution lexicographic ordering conclusion substitution simply find predecessor induction substitution zero proper substructure come picture serve reject hypothesis substitution foreseen find relevant free roughly speaking applies hypothesis conclusion substitution induction goal simplifies resulting term match part term failure toward rejection hypothesis success toward retention free ackermann hypothesis tentative hypothesis discarded knowlfchfcft aubin recursive case even attempted applying conclusion find stance succ zero free recursive call case match retain hypothesis letting succ four induction subgoals zero zero zero zero succ zero succ zero zero succ zero zero fool sometimes retain hypothesis fact useless sometimes discard hypothesis errs safe side much induction rule indirect nonrecursion stay fixed fact studied translation nonfixed nonrecursion accumulator moore holding computation accumulator generalize goal match simplified conclusion induction occurrence side massage goal make recur equality intuitively know rewrite goal side replace proved inducing replaced induction hypothesis automatically natural mean strengthening tactic responsible induction hypothesis experimented brotz boyer moore antecedent goal equality replace side consequent grossly speaking reduces vice versa strengthening tactic used concurrently antecedent implication discarded antecedent strenghening inverse weakening rule tactic well justified preserve achievability induction hypothesis equality constrained induction splitting prover reduces goal form subgoals tactic preserve achievability brotz used boyer moore contraction simplification tactic besides duction simplification subproblems equivalence term simplification term replace term simplified last perhaps used prover inspired vuillemin computation rule simplification rule subterm simplified take aubln subterms term tactic deal indistinguishably applies substitution undue copying term simplified resulting term term boolean true thus superterm term simplified half concern simplification rule term prover successively pure simplification rule normalization rule rule ordered gain sharing conclusion proving system typed selecting induction generalizing sound generating induction subgoals fast simplification formal system weak like relax restriction quantification type also clear pure backward limiting lemma reasonably scale user interactively work addressed cartwright system axiomatically type constrained domain type typed despite induction rule powerful system accepts computable crucially dependent user boyer moore even powerful system type axiomatically freedom accept enumerable typing freedom automatic lemma prover attempting acknowledgement grateful director milner burstall also boyer moore commonwealth scholarship commission conseil recherches canada compiling concrete used type compiling illustrates burstall milner weyrauch cartwright correctness interactively machine boyer moore automatic note presence vacuously type defining mean type name operator cexpress name compound operator form used body last type read name compound operator type also used semantic domain name force give applies type declared type zero socc semantic give syntactic construct said type name type type operator type next lanouaae synt used also give concatenate type type struct instruct operate operatok name nullpr instruct concat cask nullpr concat auhin semantic domain target pushdowns selecting inspecting constituent type pushdown type word compile execute resulting storage interpret push onto stack leaving unchanged proved automatically prover help lemma proved automatically note prover time varies hundred essenti dependent extent searched compiling take prover brotz boyer moore plus many proved core lemma subtheory booleans hardest compiler correctness equality subtheories simplification rule attempted bibliography aubin raymond mechanizing structural induct thesis edinburgh edinburgh boyer robert moore lemma driven automatic prover recursive boyer robert moore proving lisp brotz douglas embedding heuristic mechanical prover dept stanford univ burstall proving property structural induction cartwright robert data type verifying lisp proc coll lang prog michaelson milner edinburgh edinburgh gentzen gerhard recherche deduction logique trad coram feys ladriere paris gordon milner wadsworth edinburgh dept univ edinburgh hoare recursive data comp milner weyrauch proving compiler correctness mechanized machine intelligence michie edinburgh edinburgh moore strother computational sharing property thesis univ edinburgh edinburgh moore strother introducing iteration pure lisp ieee soft prawitz idea proc scand symp fenstad amsterdam vuillemin jean recursive memo dept standord univ aubin
