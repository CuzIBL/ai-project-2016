describes deductive answering system data base proving proving procedure domain investigated procedure employ breadth intorudced expanded operation algebra incorporated procedure data base mean axiom deductive system domain introduced domain used give view pseudo data base exceptional case nformat transformation system dbap data base access planner embodies feature qjjsp many concentrating inference sense reasoning data base complicated high operational preventing expanding data base hand many data base data base area kind data base assumed used consequently extensively hardware system searching many goal combine data base deductive codd introduced convert sublanguage algebraic operation show completeness algebra formal answering procedure data base hand raphael formalized deductive system essential formalism axiom answer extracted formalism combined procedure operation procedure answer procedure system generates access plan data base plan answer operation algebra expanded breadth incorporated procedure accees stonebraker introduced view user deductive realized mean semantic base axiom process process axiom axiom domain axiom used give view pseudo data base exceptional case consideration redundancy optimization access plan also eoneidered transformation system dbap explained conclusion work done rmali formal system axiom prover answer show system term formalism formal system datum data base expressed ground clause clause namely natural lanr uarf furukawa natural furukawa substituting term righthand equivalence sign dmme term base underlined transformed base axiom type axiom domain axiom virtual literal base obvious specified terras virtual base inference trnasfromation resolution rule modus ponens insufficient want answer specification answer base applying resolution fore equality hold transformation realized modification control concerned resolution horn complicated axiom whole inference ancester resolution axiom virtual domain term predefined virtual domain axiom domain transform literal literal base existentially quantified resulting base applying transformation also exsistentially quantified simplify omitting quantifier deletion redundancy base redundancy base name dname dept name virtual vemp name dname vdept name note domain transitive inquires located belongs transformed base concentrate literal datum uniquely designated name domain name tuple must refer datum fact expressed axiom tuple axiom arbitrary domain hold applying axiom replaced literal exactly literal transformed simplification factoring operation resolution procedure quantified tuple axiom meaningful axiom note axiom done resolution need resolve literal simultaneously domain name dept domain literal fact axiom domain axiom domain hold applying axiom simplified base data base access procedure data base access recommended plan data base access carefully keep process ectives natural furukawa access logically tuple tuples time tuple accessed plan access minimize data base access mentioned constituent tuple expressed ground clause merely conceptual data base database data base access tuples much domain access data base literal base tuple grouped call literal access subclause literal access subclause name tuple introduced associate clause tuple abbreviate access subclauses factoring name omitting tuple access subclauses expr name dname deeply inference rule mentioned hold getting data namely access subclause must substituted tuples tuples access subclause associative retrieval breadth firstsearch breadth associative retrieval operation access subclause expressed compound operation algebra rell domain algebraic dept name resulting planner simply expressing access subclause goal associative retrieval mentioned employed inefficient want answer hand deal breadth responsible controlling procedure data base access access subclauses resembles podb case access subclauses access subclauses access subclauses procedure obtains tree associative retrieval generates tree answer satisfying access subclauses equating tree operation corresponds operation algebra simply specified association binary graph access subclauses node call graph association graph access subclauses association graph triangular case successive join operation arbitrary join operation give proper kind tree tree constructed association graph helpful idea tree tree correspond association graph tree leaf node father node node followed join operation join operation leaf node join operation node done arbitrary theoretically done simultaneously join branched tree expressed hand successive join tree expressed natural lanpiiap furnkawa note evaluated node domain used succeeding operation node node node groundfather node used join underlined algebraic base node tree association graph graph restated optimal reasonable size process size domain construction done embedding node graph construct reverse node adopt node degree node node domain easy deal exceptional case data base domain name allowed adequate belong happen smith come belong natural langu furukawa long keep name domain domain manage schema correspondence domain dname removed name dname correspondence name name inconvenience data base data domain must homogeneous natural treat exceptional case smith dname pair stored newly domain dname homogeneous belong domain name link desirable protect user struictural data base supplying name dname virtual avoid conflict name rename base cemp fact expressed cemp case treatment call kind domain virtual domain domain term transformed domain axiom domain axiom domain name tuple axiom literal branch grouped separately make access subclauses literal outside contained access subclauses distributed branch access subclauses rest also grouped make access subclauses applying step applying tree access access subclauses reorganized data base cemp name dept name dname tree cemp name dname smith smith brown sale smith sale natural natural furukawa access subclauses regard kind access subclause call access subclause tree father join algebraic tree note passed father node tneir delayed node evaluated matter fact evaluated time tree property case need postpone evaluated namely divided tuple satisfies belongs join expressed case work branching node tuple access cond cond properly construction time investigating access node deal case transform disjunctive normal form separately remove redundancy caused separation keep unit form dbap half system qlisp dbap formal prover like resolution prover kind heuristi realized informal procedural virtual domain axiom actually qlambda invoked virtual transformation axiom definer virtual domain axiom tuple axiom treated explicit tuple axiom deletion redundancy done substitution procedure embedded dbap domain axiom simpler form axiom replaces tuple applying axiom treatment domain axiom solves tuple axiom domain axiom conclusion step toward natural system access data base user intention semantics real data base must used remove semantic data base hand virtual domain axiom data base semantics virtual user regarded conceptual real consideration modified existential quantifier universally quantified operation algebra codd deduce operation pose separability virtual domain base case whole virtual domain axiom expressed graph breadth graph acknowledgement mainly done stay like thank bertram raphael many helped like thank daniel sagalowicz earl sacerdoti stimulation suggestion concerning idea natural urukawa
