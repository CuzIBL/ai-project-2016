hawrusik rutgers brunswick system plan plan plan declarative schema specification assertion property representing wisdom suggests adopting procedural specification procedural hide part system thereby hindering system reasoning strip declarative schema parameter precondition assertional form goal outcome investigate representing system computes severe combinatorics deal aimds system form framework believer normal form john walked john true conclusion drawn john handled schema walk agent person refer fromloc refer toloc refer goal precond deal case incomplete incomplete john walked system john walked john unknown normal john walked system concludes john office walking dealing john john holding package package properly package must john outcome associate walk schema outcome inhand person walk loca tion upda outcome testing side effecting prescribed side user sentence risk levant instantiation missed system testing combinatorially prohibitive tences relevant senten missing system recognizing prompt user consistency discipline stating consistency introduced causal dependency captured consistency person inhand loeof loeof repr srdharan inhand deceptively sentence walk john hand package system consistency make note depdendency assertion supporting assertion john package changing john walk system recognizes john hand package system retrieves rule updating inhand side rule specifies package person hand worth clean causal dependency system precomputed dependency missing system prompt user causal dependency sophie answering counter denies system know frame reduces make system updating time john walk succession package want system save updating package frame whereby time john said package hand package package package john john package frame john walk schema used usual computation spent updating aimds system convenient procedure attached frame person inhand procedure attached inhand removed procedure remove frame thus updating walk computation system determines ease john drop package procedure package mailbox john walk away computing need complement suited well task make permitting reasoninq extending rule seems well suited actually simulating mean automatic form
