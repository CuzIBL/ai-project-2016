producing balanced clustering submodular submodular many broadly applicable show patkar narayanan case submodular derived bipartite graph case flow show effectiveness applying clustering word clustering many machine learning guise unsupervised learning vector quantization dimensionality reduction segmentation clustering formalized finite criterion part find part maximized size data roughly exhaustive broad criterion submodular discovered time submodular find optimal cluster submodularity formalization diminishing powerful modeling clustering rich many criterion graph linkage traditionally clustering relied computing pair capable incorporating complicated clustering decomposable part work done washington part microsoft fellowship work part grant intel corporation grant submodularity decomposable criterion also criterion criterion sensitive outlier algorithmswhich optimize criterion imbalanced part clustering much wish impose balance tradeoffoptimizing balance show patkar narayanan derived graph broadly applicable submodular lead broad bipartite adjacency clustering word preliminary work ground subset said said submodular symmetric normalized normalized submodular symmetric submodular connectivity normalized symmetric submodular think cost separating submodular time minimizes normalized symmetric submodular arise naturally many widely used graph criterion partitioned vertex graph edge proportional degree edge graph criterion seek vertex part minimize edge broken edge endpoint edge exactly endpoint edge normalized left undirected graph criterion edge bipartite adjacency criterion feature adjacent edge easy assign edge normalized submodular normalized symmetric submodular refer undirected graph criterion particularly interested slightly also fall framework left part bipartite graph part graph think feature posse vocabulary word feature word possibly word disease symptom specie subsequence nucleotide genome preference construct bipartite graph edge feature feature assign feature used balanced clustering natural assigning probability occurrence case graph neighbor word type feature neighbor type feature neighbor type creasing submodular feature take refer bipartite adjacency criterion symmetric submodular queyranne find optimal time scale impractical criterion sensitive outlier tends imbalanced part substantially graph vertex weakly rest graph graph criterion partitioning vertex many desirable cluster balanced inherent tension desire balanced cluster desire minimize connectivity cluster like minimize connectivity sure clustering balanced criterion capture optimization goal ratiocut normcut criterion clearly closely unfortunately minimizing criterion need settle necessarily optimal normalized also closely spectral clustering spectral clustering used normalized approximating normalized utilize preexisting clustering dynamic last serve anytime much time employ make final produced originally patkar narayanan producing balanced graph criterion show equally applicable submodular criterion noted applicability submodular necessarily make practical contribution show done efficiently graph criterion reduction flow show bipartite adjacency criterion also fashion flow generatea sequenceof previousone sometimes perturbation case clustering partitioning changing picking move move going bipartition bipartition moving moving good generating next move pick moving side show submodular submodular used best move time actually fast even data bipartition ggain averagegain averagegain assign edge vertex node node ggain bipartite graph ggain ggain cost ignoring balance really interested normcut incorporates balance seen find move relate normcut submodular play central role submodular minx time much regularization path give computation procedure relate minx averagegain proven narayanan graph criterion generalizes arbitrary submodular applicable interested submodularfunction derived bipartite graph narayanan bipartition proper subset satisfying ratiocut ratiocut observe dividing side ratiocut ratiocut strict normalized normcut normcut case case normcut normcut normcut normcut remaining case normcut normcut show find nontrivial averagegain find move improvethe normalized ratio ideally want show normalized ratio fact find move unfortunately slightly weaker serf converse satisfies normcut normcut show existence moved side normalized existence need able give connection bipartite adjacency move normalized narayanan proper subset equality holding left hand side note equality hold taking forward reverse taking minx find move normalized next show efficiently computing tell find satisfying moving part tell find subset done time submodular show done efficiently case parametric flow parametric flow flow parameter time flow fixed parameter minx flow network flow network bipartite adjacency node node edge sink node node remaining edge graph infinite flow corresponds examine network clear must finite finite edge part newly edge adjacent vertex side neighbor must well form minimizing minimizing computethis parametricflow also distinct namely flow computation network distinct distinct examined find move improves normalized flow computation final distinct time computing word clustering statistical used many speech machine translation estimating probability word grows word vocabulary grows exponentially statistical naive alternative learn reliable finite size training corpus brown suggested clustering word constructing predictive word word probability word case probability needing grows factored generalize note conditioning redundant smoothing encountered training data encountered word encountered construct crucially clustering construct bipartite adjacency graph generating cluster generates cluster recursively form binary tree cluster cluster stopping cluster prescribed height tree exceeds bipartite graph constructed copy word node node word word sentence ideally want word neighbor cluster ignores occurrence bigram pair replicating word form word bigram time text modify network type network goal word cluster word cluster neighbor word cluster many neighbor observe criterion word done clustering brown scheme naturally capture transitive relationship manually bipartite adjacency brown bigram bigram bigram trigram trigram trigram comparing perplexity bigram trigram clustering scheme column manually manually labeled used idealized baseline test procedure clustering cluster wall street data penn treebank tagged collection word extracted treebank sentence cross validation size submodular clustering manual cluster also clustering procedure brown note bipartite bigram surprisingly improvementin perplexity find trigram case show clustering bipartite graph also cluster predictor relative used trigram fashion clustering also done show generality
