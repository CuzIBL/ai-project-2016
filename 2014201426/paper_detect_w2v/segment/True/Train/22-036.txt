system embedded system system maximized processor architecture compilation base procedural code determining interpretive inference engine take base generating code eliminates overhead base significantly improves gain produced examined high imbedded reasoning hiper system prototype tool utilizes system promise many area particularly true control must data time also true embedded system must resource specialized hardware inferencing process undesirable many embedded hardware accessing data system major system hardware inherent interpretive even inference engine compiled inference engine data base process inefficient compiled restricting inferencing tree paradigm reasoning compilation base engineer used convert base compilable high code high proven reasoning interpretive backward forward chaining reasoning examined identify area made representing base form form rule base high embedded reasoning hiper system prototype prototype tool interpretive reasoning system internally collection data consisting node link node node rule test rule rule fact reasoning link relationship fact rule test test combined rule made test rule base node tree network augmented list data inference engine reasoning process traversing network base node inference engine examines node data test need data test node process next test test propagation rule true rule process inference engine link node highland iwaskiw backward chaining system organizes rule goal tree containing rule fact concluding goal rule goal tree reasoning process system selecting goal node node successor traverse goal tree process continue node encountered fact fact acquired fact node test test node fact test propagated goal tree reversing traversal process node node combined passed next node tree must test propagation tree traversal process must also interpretive connection node tree form backward chaining reasoning melle burn system winston horn many system forward chaining reasoning operate traversal find fact system must fact match rule propagation fact rule rule test fact test node test fact test evaluated propagated rule tree node step node processed combined passed next node tree form forward chaining reasoning system winston horn highly optimized forgy interpretive traversal tree network determination step process node degrades reasoning process node reasoning system must step step node step process node determination node process next must made system greatly process eliminated step concise compiled code compilation reasoning base compilation step interpretive inference engine reasoning process code step base step process node significantly step converted concise procedural code reasoning process step must succeed processing also identified code interpretive inferencing system converted compiled system avoids interpretive step rule compilation address code test test propagation rule forward chaining backward chaining mixed chaining combined forward backward chaining reasoning process propagation step used operation reasoning compilation benefit fact backward chaining reasoning addressed used process well rule compilation rule must converted network node rule link indicating relationship rule rule fact network used interpretive inference engine base must compile traversal network propagation preserve dynamic system compilation network rule rule tree subnetworks subnetworks tree need proper tree subnetworks tree criterion used partitioning arbitrary compilation partitioning network rule criterion adaptable incremental compilation maximize criterion subnetworks minimize outside subnetwork reduce procedure call overhead parent node tree manipulation high next rule tree converted rule procedure node part case loop case part case segment code node rule network base code segment conditionally pass control case code segment also data binding certainty parent tree parent node rule tree nominal case eliminating need multiway branching stack maintain branch invocation parent outside rule tree accessed procedural invocation rule procedure stack data must passed parent individually need also eliminated passing data list item loop around case permit propagation series code segment continue invocation rule procedure also node rule tree invoked flexibility node part data code terminal parent node must identify rule concluded consist placing conflict activation conflict resolution rule data distribution procedure produced activate rule tree data item base need rule base list rule tree node tree data item list procedural code invoke node rule tree data item process propagation started data distribution procedure data item distribution procedure node evaluated rule procedure case desired node reset cither parent node evaluated exit process continues rule concluded subconclusions derived exhausted simplified process show rule form base show internally rule tree resulting rule show simplified code resulting base distribute procedure invoke rule tree procedure test propagate tree code dependent reasoning test certainty evidential reasoning like melle test existence combine binding token forgy used control next terminate processing code manage data parent node also reasoning omitted simplicity generates rule processing data distribution procedure base combine rule base inferencing code module inference engine physically separated rule optimally merged rule code despite lack physically distinct inference engine inference engine base prehighland iwaskiw served resulting module take inference engine processing gain compilation depend heavily rule done time inference engine used gain must made alternative path processing step indirect data access must richer feature encounter alternate path processing experience gain rule inference engine procedural code removal interpretive overhead data base control block referenced indirection linked list dynamic complicated traversal data step processing code high ation access highly optimized used rule test efficiently procedural code interpretive interpretive inference engine take must base conversion base code also improves embeddability resulting system compiled base compatible compatible compiler also retargeted code compilation potentially storage data used interpretive used interpretive customized repeated node code represents node highly optimized code rule significantly interpretive inference engine type storage processing processing optimization code used interpretive storage proportional storage interpretive form base combinatorial explosion resulting rule data size code proper utility procedure operation base alternate base compilation rule network tree series used system rulemaster iowever effectively parameter access node access node dynamic rule ordering confidence forward chaining reasoning alternative compilation base rule compiled code inference network remains data used knowledgetool improves address rule distribution central inferencing process hiper high embedded reasoning hiper system prototype system tool utilizes base compilation base compiler converting text form base code user analyze base reasoning hiper forward chaining used knowledgetool hiper base compiler text form base network converted rete network traversed procedural code code utility base interface adapt base operating linked load module feature enhancement used hiper rete token processing rete process token containing data modification processing node cutting processing overhead many matched also reduces need stack hold queued token thereby simplifying code integrated frame flat frame memory used derivative frame inheritance resolve integrating access oriented frame system oriented rete processing oriented frame system augmenting data distribution procedure franr inheritance processing backward chaining inferencing rete processing augmented acquire data goal maintain rule need fired attain goal form backward chaining reasoning relative gain compilation hardware operating reasoning must system tool derivation meaningful difficult knowledgetool good high hiper reasoning noted knowledgetool interpretive partially compiled compiles rule test code interprets rete processing compiled interpretive system substantial benchmark hiper knowledgetool monkey banana used nasa system tool nasa maintenance operation automation moca prototype major airline represents highland iwaskiw data difficult scheduling rule processor utilized routine virtual time firing rule firing last rule benchmark benchmark virtual time compiled used knowledgetool storage compiled data storage seems acceptable gain hiper system prototype system tool system compilation hiper system prototype demonstrated gain partially compiled modest memory acknowledgment like thank hugh gallivan tani renee rochester chuck grady contribution hiper system prototype comparative benchmark conclusion full compilation base interpretive varies feature rule superior tree access node resulting rule network supporting forward chaining reasoning dynamic rule ordering also compile test rule also compiles inferencing increased embeddability resulting relative analyzed benchmark coded high
