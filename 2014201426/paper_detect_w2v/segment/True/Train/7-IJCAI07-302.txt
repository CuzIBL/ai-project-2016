work satisfaction planning hitherto assumed goal thus implying additive utility many make motivate need handling type goal utility dependence framework representing additive independence investigate handle compiling utility dependency extending forward heuristic planning handle goal dependency guide forward planning novel heuristic framework combine costpropagation beneficial goal find informative heuristic planner ipudand spud empirically benchmark domain ipud readily amendable handle goal utility dependency optimality spud scale much classical planning plan achieves conjunctive goal satisfaction planning relaxes focusing plan achieves best subset goal plan give achieved goal utility incurred cost process goal complicated fact interact achievement goal conflict type cost dependency goal cost achieving separately differ cost achieving framework goal interact cost dependency extend handle utility dependency user utility goal thereby expressive concrete utility dependency mutual dependency dependency mutual dependency utility goal utility goal utility left shoe zero utility much goal complement utility utility goal substitute dependency utility goal goal depend goal goal achieved utility hotel hawaii purchased ticket hawaii main handling utility dependency type goal utility dependency compactly expressed approachthat effectively combine utility cost find high plan contribution systematic handling cost utility dependenciestogether representing utility dependency planning goal additive independence bacchus grove combining utility deterministic planning planner briel novel heuristic framework combining cost propagation encoding capture mutual dependency goal achievement cost goal utility lead informative heuristic used guiding forward planner encoding forward heuristic resulting plannersipudand spud tested planning benchmark domain readily amendable handle goal utility dependency optimality heuristic scale much classical planning fluents goal partially plan achieves goal satisfaction planning smith briel goal utility representing much goal worth user cost representing costly execute time resource consumed goal achieved plan find plan maximizes achieved utility cost plan benefit work assumed goal utility dependency thus utility additive type goal utility dependency complement substitute adopt additive independence bacchus grove chose expressive compile used boutilier utility goal utility subsetthe utility user utility goal rest name utility dependency pspud goal pspud reduces utility dependency encoding pspud classical planning natural incorporate numeric objectivefunctions thatpspud planning well handle pspud extending briel classical planning outperforms previously used utility dependency briel represents planning loosely coupled network flow network corresponds planning domain network node correspond network correspond transition planning find path network merged constitute feasible plan network node represents plan used planning incrementally reachability find plan network extra planning process repeated plan briel deal utility dependency incorporate pspud goal achieved plan feasible remove goal must achieved goal utility dependency goal achieved goal utility dependency satisfied goal achieved domain plan horizon maximize netbenefit utility minus cost plan represents utility satisfying goal utility dependency represents cost optimal generates optimal plan plan horizon optimality guaranteed benefit plan horizon heuristic maximizing plan benefit planner optimal horizon work suggests heuristic planner able find briel pspud computing heuristic maximizing plan benefit need simultaneously pick best goal find best plan complicated utility dependency complicated cost dependency heuristic planning graph heuristic handle cost dependency cost achieving goal heuristic goal utility goal subset best benefit cost goal dependency inpspud must deal fact cost dependenciesbetween utility dependency goal heuristic combine planning graph declarative encoding encoding relaxed plan heuristic encoding goal cost achieving main relaxed plan handle cost goal declarative encoding capture mutual goal achievement cost goal utility dependency heuristicsearchforpspud handlepspud anytime heuristic framework sapaps briel forward temporal planner anytime guided heuristic derived relaxed planning graph like sinit continues dequeue promising node highest node represents benefit achieved visiting sinit represents projected benefit gained expanding plan benefit calculating trivial good hard success exploration tree keep outputting plan node expanded like terminates node picked open list keep node practice sapaps prune removing node unpromising node benefit improves drawback heuristic underestimate node discarded benefit best even reach mitigate modified sapaps keep node unpromising half best node unpromising node unpromising node threshold best find complement percentage benefit keep probability goal achievement cost propagation heuristic cost goal kambhampati fact fact propagation rule cost fact execute fact fpre fpre rule used extending relaxed planning graph blum furst propagation done cost cost goal deriving heuristic propagated cost name heuristic used goal utility used goal cost utility cost dependency goal utility dependency goal cost relaxed easy observe propagation maxprop underestimate cost propagation sumprop bonet calculated cost propagation process outlined achievable benefit part heuristic calculate utility heuristic applies give heuristic give hgaisum heuristic hgaimax overestimate real achievable benefit hgaisum thus hgaimax guaranteed optimal time relaxed plan heuristic hgaimax significantly real benefit achieving goal badly domain hgaisum heuristic informative relaxes cost assumes plan achieving goal overlap heuristic adapt relaxedplan heuristic introduced planner hoffmann nebel solves planning ignoring list heuristic improves hgaisum taking contributing achievement goal extending pspud efficiently find relaxed plan presence cost utility dependency goal achieved relaxed plan relaxed plan heuristic pspud note look like optimal plan replaced optimal relaxed plan achieving benefit gairelax overestimate real achievable benefit used admissible heuristic find optimal satisfying relaxed plan goal extracting optimal relaxed plan highest benefit task even know optimal goal cost bylander gairelax pspud step step introduced sapaps step novel greedily extract cost relaxed plan achieves largest achievable goal capture achievement cost dependency betweenachievable goal causal pose extracting optimal subplanwithin take cost benefit dependency encoding hgairelax encoding used compile relaxed planning graph greedily extracted relaxed plan post problemof findingh gairelax despite conceptual elegance chose follow route cost heuristic computation significantly progression planner extract relaxed plan node step heuristically extract cost relaxed plan letbe achievable goal planning graph propagated achievement cost heuristically extract relaxed plan fact subgoal relaxed plan supporting lowest cost repeat process guaranteed finish time step build cost dependency contribute achievement goal dependency cost discovered causal extracted relaxed plan capture mutual dependency goal achievement cost find plan achieving goal procedure utilizes causal link relaxed plan backward sweep fromgoals achievedby procedure goal contributes goalsupporting represents achievement cost dependency goal step achievable benefit step combine goal supporting step goal utility dependency find beneficial relaxed plan find plan iterate subset goal goal achieved benefit plan achieving declarative encoding representing beneficial relaxed plan note slow planning relaxed plan much relaxed planning graph find optimal reasonable time build encoding node forward heuristic relaxed plan representing goal supporting step also enforce goal contributes achievement also binary binary encodinggives benefit beneficial relaxed plan benefit plan used heuristic guide empirical heuristic framework sapaps planner encoding call planner spud ipud ipud spud heuristic hgaisum ofsapaps heuristic ignores goal utility dependency ipud cplex lpsolve free java wrapper encoding spud lpsolve powerful cplex shorter time suitable spud encoding node test time spudsand sapaps continuously find termination criterion test automatically pspud subset propositional planning benchmark used zenotravel move city satellite satellite turn take picture rover rover navigate take sample truck visit market domain java file generates pspud cost goal utility goal dependenciesalong utility also thus dependency size dependency goal utility cost varied domain goal soft planner trivially null plan varied cost goal utility domain utility dependency zenotravel ending plan utility significantly flying person cost slightly utility achieving goal thus vital desired purchasing item cost utility item item utility plan considerably idea simulate benefit item build crate need wood nail hammer satellite domain remove emphasis cost cost comparatively benefit mosaic domain also goal utility dependency substitution utility ending plan pointing inconvenient rover domain substitution data give redundant remove utility gained separately empirical effectiveness heuristic pspud ofpspud planning plan differing show plan achieved planning time reach null plan extensive plan time time best plan show tested varied relative plan domain butspudsusing hgairelax heuristic best observe planner zenotravel domain gathering zenotravel delivering well utility dependency play role domain sapaps poorly spudsheuristics ipud fared much sapaps heuristic informed utility dependency come surprise hgaisum heuristic tends plan used size hgaisum plan worse hgairelax term numberof plan best ipud size encoding unable find good feasible satellite domain goal remove utility plan also plan tend many seen plan ipudreturns reachability unable properly goal searching horizon hgairelax heuristic turn help guide toward goal rover domain ipud well like satellite domain turn plan horizon horizon give spud hgairelax heuristic edge ipud heuristic hgaisum hgaimax regarding utility dependency worse hgairelax plan hgaimax able find null plan neither heuristic dependency domain show domain difficulty graph show bottom graph show also time take heuristic encoding used ipud thespudsheuristics encoding node take much procedural sapaps heuristic unfortunately sapaps lack heuristic guidance properly goal utility dependency thoughwe encoding hgairelax increased time find time spent node time sapaps highest spudswith theheuristic reaching time sapaps spud ipud best spudsand sapaps come best anytime ipudthis come cplex best feasible time insight observing time take find eventually returned used anytime illustrate scalability show domain difficult best term throughouttheir best best tested solves planner also obtains best plan mean best show anytime zenotravel spudsheuristic quickly find high plan ipudcontinues time sapaps able find poor plan work work orienteering goal subset david smith also briel introduced planner altaltps sapaps optiplan tackle greedily selecting goal heuristically searching compiling none highest anytime plannerfrom domain planner deal utility dependencieswe planning competition gerevini preference indicating cost plan failed meet preferred also prefplan brafman chernyavsky find optimal plan preference goal besides used utility dependency attractive boutilier graphical bacchus grove graphical make user dependency modelling compiled also note utility dependency albeit unnatural modelling mdps boutilier extracting zenotravel anytime planner optimal past fails scale well even utility dependency kambhampati aware work encoding greedy planning heuristic work encoding handle subset planning involving continuous resource temporalvariables wolfman weld long conclusion showed framework used utility dependency planning introduced heuristic framework encoding satisfaction utility dependency pspud planner spud hgairelax heuristic hgairelax heuristic high relaxed plan computation computation extra guidance used also type difficulty scaling size also find slower rate ipud time plan extend work combine quantitative preference qualitative handled planner like brafman chernyavsky also considering handle preference like seen planning competition gerevini plan investigating admissible heuristic aggressively take residual cost altwlt nigenda kambhampati heuristic acknowledgement want thank david smith wheeler ruml ronen brafman william cushing ijcai reviewer helpful comment kambhampati part grant grant lockheed martin subcontract part darpa integrated learning bacchus grove bacchus grove graphical preference utility proc blum furst blum furst planning planning graph artificial intelligence bonet bonet loerincs geffner robust fast planning proceeding boutilier boutilier dean hank planning structural computational leverage artificial intelligence jair boutilier boutilier brafman hoos poole reasoning ceteris paribus preference proc brafman chernyavsky brafman chernyavsky planning goal
