progressive processing computation system tradeoff computational resource generalizes maice suitable dynamic composition retrieval framework address effectively uncertainty duration show construct optimal controller task markov extend case dynamic task opportunity cost concerned computational retrieval engine tradeoff computational resource retrieval process dynamic retrieval maximize answer produced computational resource retrieval collection uncertainty regarding duration process variability request response time taking dependent dynamic significantly service system engine composed retrieval module task formation optimization recall clustering visualization phase wide year jones willett engine built choosing integrating fixed module made system illustration progressive processing task retrieval engine static excludes work well retrieval system optimized load respond dynamically varying load computational resource dynamically adjust computational computational resource studied extensively anytime dean boddy zilberstein russell gravey lesser flexible computation horvitz imprecise computation progressive reasoning mouaddib mouaddib zilberstein adopt progressive processing framework formalize control realtime retrieval task progressive processing unit composed module contribute natural framework retrieval system show task composed list task processing alternative scan uncertainty probabilistic reasoning recognizers identify company name date name soon examine pair word high statistical likelihood enhance identify noun phrase alternative recall expanding word phrase statistical expanding relies upon word infinder association thesaurus capture well relevant retrieved retrieved retrieval resulting task raise previously addressed handling duration uncertainty uncertainty handling dependency duration handling rich task alternative computational step step skipped time pressure leading selecting best retrieval dynamic taking waiting rest control give formal step optimal ignoring fact task waiting processing show handle prus summarizing waiting request opportunity cost address reactive control highly dynamic estimating opportunity cost control brief work control describes formally control enhanced progressive processing retrieval request mapped task progressive processing unit composed processing receives last processing composed alternative module module computational module descriptor module probability distribution duration note discrete representing discrete representing duration module descriptor specifies probability module take time unit previously module module descriptor profile anytime zilberstein russell constructed empirically collecting data sample engine responds request receives utility utility returned time unit arrival time request responding request time unit arrival system maintains retrieval request arrival time request dynamically request arrive system process request progressive processing unit handle request request module descriptor progressive processing unit utility control reactive control selecting alternative module maximize utility retrieval request control reactive sense module fast largely rest optimal control control progressive processing unit task formulated markov process representing computation produced elapsed time arrival request utility zilberstein mouaddib time execute module next processing skip processing transition descriptor module rest give formal reactive controller produced progressive processing unit seen finite dicates last skipped produced last module elapsed time arrival time request note discretized normalized module note also delay response useless system module used fact failure termination time distinguish failure failure leaving remaining time request queue transition elapsed time arrival request time qinit request system module terminal form fallure former represents finishing last latter represents failure reaching maximal reaching last terminal terminal readied series skip failure reached skip take automaton last execute nonterminal execute jnodule next skip next transition need probabilistic outcome transition probability nonterminal deterministic skip next affecting elapsed time dummy module take time uncertainty probabilistic reasoning skipping last failure probabilistic duration uncertainty determines transition successful determines transition failure reached utility final produced last utility elapsed time keep mind useless terminal nonterminal representing skip middle representing skip bottom representing execute concludes dynamic illustration path prus progressive processing unit utility optimal optimal reactive control correspondence reactive control fact transition satisfies markov optimally resulting optimal reactive control progressive processing note alternative module maxi discrete time time time unit used control arbitrary system parameter time unit lead control expense unit unit tradeoff size effectiveness empirical best time unit practice optimal control prus opportunity cost need schedule prus request arrival time proach construct optimal schedule generalize construct combined prus illustrated must also request leading note elapsed time arrival request loop transition prus terminal succeeding computing optimal last time optimal progressive processing unit utility optimal optimal reactive control obvious induction prus omitted show reformulate remaining request task reformulation preserve optimality suggests control pected optimal last prus optimal simply word responding request composed utility remaining prus alternatively best calculated final opportunity cost time opportunity cost loss delay last task task deducting task opportunity cost time controlling ocpolicy optimal fvom optimal schedule need rewritten zilberstein used construct affect resulting optimal suggests optimal scheduling request request take opportunity cost remaining request request used taking opportunity cost remaining task able need control readily addressed reactive control opportunity cost optimal control progressive processing unit accounting computational opportunity cost must revised quickly time request arrives opportunity cost revised must constructed opportunity cost construction optimal task practice slow operation retrieval engine reactive controller dynamic progressive processing fast scheme opportunity cost opportunity cost rest explains estimating opportunity cost opportunity cost term represents optimal remaining task queue thus approximating cumulative remaining task task taking opportunity cost time task time summarizes scheme approximated duration optimal time relative arrival time request time task relative arrival time duration optimal simply duration easy revise opportunity cost request also examining alternative learning opportunity cost feature queue size waiting time used resulting compact opportunity cost clear work practice empirical control make control truly reactive task want avoid computing time opportunity cost revised avoid opportunity cost divided representing capture medium high load optimal offline stored system opportunity cost remain long task utility fixed dependency control opportunity cost monotonic cost imply time anticipate correspond qualitatively sufficient react quickly dynamic control switched request opportunity cost conclusion innovative control progressive processing reformulating uncertainty probabilistic reasoning markov optimal task constructed controlling taking opportunity cost remaining task control operation retrieval engine fast opportunity cost highly reactive controller precompiled control operate dynamic progressive processing relies heuristic scheduling mouaddib zilberstein task linear module uncertainty dependency heuristic scheduler fast task optimal control heuristic scheduling computational task also studied garvey lesser framework latter framework represents progressive processing framework relates body work system imprecise computation task decomposed subtask subtask scheduling imprecise computation part richer duration uncertainty dependency imprecise computation schedule constructed scheduler schedule module conditioned time outcome module dynamic control previously used hansen zilberstein control interruptible anytime optimal progressive processing task studied mouaddib zilberstein simpler task uncertainty dependency opportunity cost borrowed economics used previously reasoning russell wefald horvitz continual putation idle time used anticipated control construct highly reactive system studied greenwald dean show avionics control system schedule schedule conditioned flight operation collaboration retrieval developing stochastic module descriptor engine task collection substantial test data test applicability scalability reasoning acknowledgment thank james allan victor lavrenko contribution construction retrieval testbed work part foundation grant ganymedell plan lens
