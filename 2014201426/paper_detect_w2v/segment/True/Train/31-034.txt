deal moving target goal process trailblazer chimura tokoro achieves systematic maintaining path searched growth time make step rapidly trailblazer tbsa reduces cost maintenance improves reactiveness build control maintenance systematically manage utilize cost show cost reduction maintenance achieved heuristic process trial reach goal domain deal agent considering agent take real korf learning lrta interleaf time step stationary goal considering dynamic property real goal agent planning accomplish ishida korf moving target probem representing goal moving target taking chimura also affiliated sony laboratory graph reach node target located namely capture target moving target ishida korf extends tackle moving target exploring heuristic learn node learns task moving adjacent node closer target learn many time many step complicated maze trapped deep dead heuristic greatly differ true intelligent moving target imts ishida overlooking target conduct lookahead find exit dead significantly reduces step make widely reflect trailblazer chimura tokoro explored avoid exploring node repeatedly stored creates enables chase target target move path significantly reduces step proceeds rapidly cost maintenance growth take increasingly time make step trailblazer tbsa achieves maintenance reactiveness build control maintenance systematically manage sasaki chimura tokoro maintenance tbsa thus make time hierarchical maintenance tbsa formally analyze show empirical indicating effectiveness moving target trailblazer undirected graph unit cost edge goal moving target time process target node graph alternate turn move node adjacent separated node target coincide make assure firstly know target concretely speaking must know name node target located secondly admissible pearl heuristic node lastly move target periodically skipping target turn chimura tokoro trailblazer moving target idea path previously explored accomplishing task step target done recording undirected edge connecting departure arrival node step organizes graph trail trail calculates routing dijkstra shortest path floyd hold cost path node explored capturing process target distinct phase phase chase phase phase ploits process process phase phase distinguish unexplored explored thus conduct systematic process eliminating unnecessary node target cross trail vice versa trail target overlap find path leading target enters chase phase chase phase deterministic referred accurate simply need move reduce target automated reasoning phase must find target trail target must overlap exploring whole eventually enters chase phase chase phase move target capture target thus terminates formally target take identify node heuristic derived path explored node parent node arrived node time procedure turn move node adjacent read find path path enter phase enter chase phase phase unexplored node adjacent calculate move node broken adjacent node explored move node parent node chase phase move adjacent node broken move undirected edge connecting trail assign routing procedure target turn move move target undirected edge connecting trail target assign target routing even complicated maze capture target fewer step ishida maintenance cost rapidly proceeds trail target complicated decide proceed next take increasingly time make step increasingly difficult behave reactively autonomous robot capture target robot cost maintenance tolerable extent maintenance take computational cost step take cost cost robot move cost maintenance neglected scale trailblazer maintains time take step useless move updating area trail even move affect trail surrounding move took idea locally divide conduct routing keep track connection hierarchically maintains call hierarchical trailblazer tbsa describes maintenance twolayered hierarchical hierarchical construction tbsa regard exclusive subproblem made distinguishing node subproblem node node belong distinct subproblem call node node subproblem tbsa maintains hold subproblem hold subproblem interconnects step take node edge connecting node cost edge cost path connects node calculated hierarchical systematically manages acquired process make shorter time step hierarchical maintenance reconstruction path construct maintains hierarchical calculates node hierarchical take step subproblem maintenance proceeds stride distinct subproblem maintenance proceeds procedure routing node reach taking step move node node step identifies subproblem node belongs maintenance proceeds differently belong subproblem sasaki chimura grid fixed partitioning tbsa hierarchy overhead partitioning major creates hierarchy formal tbsa tbsa time target move analyze updating step cost path node node derived maintenance done target take step show calculate cost node target cost referred subproblem node belongs cabst cost referred node located subproblem referred hand node located distinct subproblem must calculated reconstructing path explored node located inside subproblem tbsa differs constructing calculating node tbsa process capturing target phase chase phase thus tbsa inherits simplicity completeness analyze grid represents feature many type regard junction node connection junction edge naturally convert fixed size made horizontally vertically dividing automated reasoning time maintenance step target rectangular node dijkstra routing stepwise worst case time maintenance equally subproblem node node subproblem node step target stepwise time maintenance partitioning coarsely take target tends move subproblem term dominant stepwise cost maintenance term case work hand finely piece take target stride term dominant stepwise cost maintenance term case work tbsa empirically evaluated tbsa rectangular grid torus obstacle junction prevent target moving occupying junction obstacle occupation whole preliminary tested best partitioned subproblem dividing side grid equally part target skipping turn target five turn tbsa target avoid target move furthest adjacent node meet target move cooperatively meet target move sample grid averaged sample counted step cost maintenance cost maintenance regarded routing time reactiveness cost maintenance step show step maintenance cost show cost maintenance step step target avoid obstacle ratio tbsa show tendency step tbsa differs maintained obstacle ratio systematic like tbsa capture avoiding target show dead target chimura tokoro hand tbsa significantly reduces cost maintenance obstacle ratio tbsa cost maintenance reduces time target avoid meet time cost maintenance high capturing process target long chase phase chase phase must make combined target chase phase tends shorter obstacle ratio avoiding target tend trapped dead explains avoid curve obstacle ratio chase phase target avoid biggest tbsa target avoid voiding target obstacle ratio tbsa cost maintenance time practical time tbsa much moving target grid show cost maintenance tbsa step slowly rapidly proceeds reactiveness confirm tbsa responds instantly spends long time take step nevertheless reaction time tbsa node subproblem predict maintenance cost well hand control regarded unlimited plausible cost maintenance node slow maintenance cost little imsasaki chimura tokoro pact cost maintenance planning plenty dealing hierarchical prieditis janakiraman step paradigm reconstitution organizing plan inferred plan used goal guide plan knoblock showed reduce exponential linear searching knoblock tbsa phase organizing hierarchical corresponds step phase reconstructing path hierarchical corresponds step reconstitution major tbsa hierarchical need cost scheme alpine system knoblock automatically form hierarchy analyzing even automation applicable dynamic construction idea learning hierarchy tbsa predefined partitioning tbsa initially explore predict whole tbsa applicable grid hierarchical regarded realizing strosnider paul introduced paradigm maintenance reactiveness conclusion work dealt searching moving target explored predicted searching moving target concern progress tbsa hierarchical explored tbsa handle maintains systematically manage formally empirically analyzed tbsa target obstacle formally showed tbsa reduces cost maintenance step node simulation showed tbsa actually cost maintenance tbsa inherits simplicity automated reasoning completeness reactiveness plausible time tbsa size grid size plausible time beneficial construct hierarchical control adaptively plan
