describes parallel andparallelisms prolog natural handling parallelism pepsys parallel ecrc prolog system started architecture european centre ecrc goal practicable parallel investigating parallel architecture began need ratcliffe robert well parallel syre westphal consideration high parallel prolog well orparallelism beside also parallel computational compiler generating parallel used pepsys multiprocessor system simultaneously studying parallel architecture adapted evaluated simulation pepsys high robert describes main showing main feature give high combined felt kept aside pepsys writer work hailperin philippe robert harald westphal pepsys team also baron jacques chassin kergommeaux bounthara donald peterson full time ecrc contributed comment iffe syre muenchen west germany pepsys like situate numerous parallel lack restrict review work subject syre westphal gregory crammond historically committed considerable clark gregory shapiro ueda intend fight find complementary lack feature really parlog concurrent prolog suffer complicated semantic reflected numerous around derivative kernel parlog flat logix system silverman houri flat simplify clarify semantics guard clause parallelism difficult handle basically excluded guard annotation mode parlog even make difficult lead painful really lead explosion process bring little parallelism much control synchronization overhead feeling thai user must able control parallelism avoid synchronization architecture seems well adapted system simulation control kind synchronization probably aimed delta prolog pereira explicit managed avoids implicit explicit synchronisation construct concentrate pure parallelism induced parallelism also addressed many automatic parallelism jchang despain pure hausmann system like prism kasif masuda argonne anlwam butler work prism really address parallel processor pepsys guage main pepsys careful complemented part much involving computational totally consistent integrated parallel case deal facet briefly pepsys pepsys targeted computation lead potentially user system open need determinism simply user inspecting declarative semantics true case know behaviour clause parlog retain declarative property compatible prolog user part flexible flexibility conveniently achieved explicit control clear semantics even expense punctuation felt best feature asynchronism parallelism next fulfil idea modularity explicit module interface developing piece imposing modular greatly checking particularly compiling part pepsys module mean accessible module must declared else imported module must exported module containing closed used declare interface export exported module importing module module module imported module implicitly import builtin restricts scope name clash module pepsys type module serial parallel serial module prolog code normal prolog backtracking alternative clause unusual feature clause must grouped access serial module illustrated access parallel module also interface must oneof used time call whilst collect alternative call fail backtracking parallel module parallel pepsys usual prolog plus excludes parallel module declared parallel module interface used serial module allowed import serial module parallel oneof bagof setof parallel module module type distinguished file name used code thus serial module ratcliffe syre parallel module used ecrcprolog estenfeld meier parallel part clear relieved burden imagine manage asynchronous concurrent process whilst access powerful easy manage comprehensive checking facilitated parallel pepsys parallel goal goal uninstantiated else instantiate uninstantiated overhead avoided progress made automatically detecting goal believe best guide particularly decide worthwhile parallelism worth overhead goal sense separated operator usual comma compiler runtime system goal safely mode restriction goal parallel construct property parallel module well grouped clause must preceded property expressed clause used worthwhile clause concurrently orparallelism clause ordering allowed semantic reflects clause whilst pragmatic merely advice compiler runtime system property form proper roper property orthogonal also referred restricted literature architecture property specifies able clause property specifies ordering clause property specifies clause concurrently note clause property property latter semantics merely advice scheduler effectively saying free resource allocate clause process thus parallelism exploited constrained resource also embedded scheme property clause ordered execut laey property clause property force clause ordering clause returned clause property recommends lazy invokes usual generating backtracking failure note property purely advisory observable user property processed eager clause concurrently resulting clause ordered clause generating backtracking replaced parallel assumed parallelism recommended operator parallel simulated property property time prolog last goal clause also property clause ordered must come clause able devise transformation prolog pepsys seems look pepsys code pepsys coding queen pepsys programme copyright borc qnbh muenchen ratcliffe robert serial module site exportf user import site bagof soln oris size soln writeln fail site pepsys copyright ecrc qnbh muenchen ratcliffe robert parallel module serial module export size soln boardsize soln accumulate occupied solut clause ordered execut size final newsquare next boardsiic sile final legal next queen proper clause ordered newsquare rest boardsize boardsize snint boardsize threatened safe rest newsquare boardsize snint boardsize next queen unordered eager snint usoneormore usoneormore snint queen threaten clause unordered execut lazy threatened threatened threatened threatenedfl threatened queen clause ordered lazy safe safe threatened safe pepsys coding ratcliffe syre coded module serial module user interface whilst parallel module parallel code interface serial module collect orparallelism used continue processing next queen used execute validity test newly next queen parallel informative property parallel little closely property defaulted property relevant defaulted worth clause parallel worth clause concurrently unification mostly clause decide generates generating column queen false queen test worth parallel vector operation find previously queen threatening newly valueless cprolog also trace file file term parallel concurrently process trace file make simplify work must remembered pepsys coding predict system parallelism expressed code main goal time unit overhead process splitting unlimited resource goal architecture process unification unlimited resource violates pepsys namely parallelism exploited restricted resource investigating much parallelism expressed estimating resource usefully utilise reasonable fact process unification alternative unification child process case little naive creation process fail unification thus wasting process creation thought representing perfect indexing scheme clause real somewhere hope nearer latter former tool five pepsys analysed summarises name goal argl four queen mapl pathsearch warplan quoted calculated dividing goal time also goal questionable argl salt mustard recoded argonne queen case mapl colouring coding used ciepielewski exhibit much path heuristic ecrc public transport network generates reasonable travelling node network used node final warplan warren block graph show concurrent process time analysed solid line corresponds four queen dashed line mapl tune parallelism adjusting granularity parallelism illustrated show soccer team parallelism none full full full none none part full time preliminary parallel concern danger controlling parallelism parallel many duplicate branch parallel path afterwards identical computation activation branch lead cross permutation subresults vein branch lead many parallel computation saturate multiprocessor system pepsys adequate explicit construct adjust refine clear find encouraging lend parallelism even proved gain translation prolog coding come recognise tome limitation eliminate parallel pepsys module static whilst clean also particularly come comparing prolog pepsys dynamic database parallel unusual property prolog guaranteeing coherence area lemma avoiding repeatedly computing constraining heuristic rule dynamically adjusted reasonable process synchronisation process actively wait transmit message case desirable modify property call modification override allowed clause unordered ordered eager laey modification tolvtioni property accomplishes modification also used vector list vector concurrently expressed recursion list recursive goal call andparallel mode identified parallelism prolog robert exploitation parallelism inefficient recursive goal call must next vector process vector operation save time goal vector initiate concurrent process unification goal clause head augmented test goal really unification expressed compiling unification process flat guarded guard guard introduced style pprolog keio case guard used able commit clause done pepsys parallel pepsys parallel computational handle sequentiality little overhead resource saturated potentially parallel process sequentially conversely parallel process forced sequentially retroactively made parallel overhead resource outperforms hermenegildo ciepielewski even overbeek ratcllffeandsyrt deterministic branch hash window scheme data thus kabu wake recopy whole retroactive parallelism mentioned also manchester favored branch seems area test well circuit fault finder scratch parallel public transportation system adviser tourist adviser multiprocessor system pepsys computational siemens multiprocessor sequent balance system compiler ecrc ecrc compiler inference processor test multiprocessor system adapted pepsys defining architectural adapted computational simulation tool benchmark pepsys simulation parallel architecture committed revised conclusion main feature parallel user lage scale containing well modularity clean structured interface parallel module module prolog used interface user system parallel module familiar close prolog augmented property property defines parallel seen regard also flexibility tune real parallelism wish explicit parallelism reflects specification promising parallel even architecture specification offered computational multiprocessor system real aware ultimate parallel incorporating tool kind concurrency parlog delta prolog vein asynchronous data base loose chaotic synchronisation vector parallelism construct real studied work pepsys system ecrc
