last year computational classical planning planning studied case assumed planner plan presence incompleteness planning case gelfond lifschitz planning plan feasible planning even checking attainable show planning presence incompleteness harder belongs next hierarchy precise term overcome baral show make thus gelfond lifschitz gelfond lifschitz successor made inertia ramification qualification concurrency sensing formalizing getting analyzing planning brief planning scheduling brief reminder finite list property fluents finite fluents mean property true property false property type initially fluent literal fluent negation need finite type reasonably straightforward semantics describes true domain rule rule activated true thus fluents hold next fluent activated rule enables true false mean truth fluent true true formally domain finite type initially finite type finite fluents fluents initially contained domain fluent hold hold transition describes activated fluent literal hold fluents rule activated fluents rule activated undefined undefined plan resrd applying plan planning domain desired fluent literal find plan lead true complicated goal reformulated term describes sensing brief reminder describes planning know exactly ents hold real life fluents know true fluents know false also fluents know initially true false want door closed door initially open close closed nothing must sensing checki fluent hold list plan plan next sensing fluents difficult sensing fluents reallife sensing sense fluents time view possibility precise domain also sensing type determines pair work formalizing sensing moore scherl levesqne consistent initially fluent true domain initially fluent false domain initially neither initially initially domain true false transition proper mapped reso case sensing sens fluents sensing determines belong domain remains unchanged presence sensing plan sensing next depend sensing next depend sensing plan sensing computational show planning harder belongs next hierarchy precise term overcome baral plan miss plan finite fluent literal fluents negation fluent literal initially contained domain fluent true fluent false fluent unknown neither transition resi describes proper baral kreinovich trejo activated fluent literal hold possibly activated fluent literal possibly hold true unknown fluent literal rule activated rule possibly activated resrd sensing applying simply mean fluent literal turned true sensing kind planning interested informally speaking interested domain consequence ferent goal fluent want true goal plan achieves goal interested analyzing computational planning analyzing computation time ideally want find case planning feasible computational time stand find like close feasible interested restricting time take planning solvable justified planning want resulting plan produced real time plan like know impossibility early able simply give operating worry time computing plan planning scheduling also worry time take actually plan plan plan feasible reasonable restrict feasible plan plan feasibility mind formulate planning precise term domain tion consequence goal fluent want true feasibly goal feasible plan achieves goal interested analyzing computational planning planning planning planning comment liberatore main liberatore considers arbitrary existence feasible plan liberatore preceded erol erol strip strip best formal treatment strip dealing sensing lack able remains even planning fixed finite even planning plan achieved goal planning solvable time incomplete planning complicated actually belongs next hierarchy precise hierarchy papadimitriou crudely speaking deciding satisfies property settheoretic term belongs belongs feasible belongs checked feasible property quantifier word feasible also existential quantifier belongs checked equivalently feasible property quantifier word feasible also mulas universal quantifier belongs checked equivalently feasible property quantifier word feasible positiveinteger belongs checked equivalently feasible property quantifier word feasible subclass formed papadimitriou equivalently reformulated checked equivalently quantifier feasible property quantifier word feasible crudely speaking toughest reduction time precise term widely believed also believed need exponential time computation time take even planning incomplete sensing case sensing incomplete sensing planning existence plan unknown fluents successful know know thus time final desired true show reduce propositional checking propositional ables propositional reduce parse computing elementary step planning take fluents true time initially true false false unknown goal moment time selects selects time moment rule time plan true reduction prof remains even planning fixed finite even baral kreinovich trejo incomplete sensing planning word computationally reduction good accordance intuitive case must know fluents true false uniquely subset fluents namely subset consisting fluents true subset fluents case incomplete know system baral subset completeinformation stating fluents true false unknown fluents possibility totally going full decrease doubly exponential singly exponential ning analyzing wonder computation time also make intuitively reasonable planning incomplete sensing happen sensing unlimited sensing planning much complicated helping anymore incomplete sensing planning incomplete sensing planning littman planning remain even planning planning scheduling fixed finite even proper sensing reveals truth fluent allowed repeat sensing moment time many real life control planning desirable continuously make sensing time necessity caused fact many consequence statistically need constantly find uniquely idealized need make sense repetition sensing plan limitation planning drop back helping sensing reveals fluents plan sensing incomplete sensing checking existence plan incomplete sensing checking existence plan comment hold grow root logarithm difficulty come fact know know fluents reasonable analyze full sensing fluent sensing checki reveals fluent full sensing make planning simpler simpler help incomplete full sensing planning incomplete full sensing planning comment resd proper sensing case exactly proper sensing reduces also complicated show want decrease computational planning unlimited sensing full sensing sensing auxiliary baral baral type list fluents negation proper differently fluent literal fluent negation true applying true complementing resrd take fluent literal true applying show computational namely computing next resd procedure computing next checking fluent true resd conpcomplete viewpoint preferable
