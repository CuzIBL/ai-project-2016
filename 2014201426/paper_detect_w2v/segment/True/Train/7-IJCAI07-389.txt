developing scalable partially observable markov process pomdps effectively address intractable memory pomdp representing pomdp finitestate controller illustrate disadvantage controller formulates quadratically constrained linear qclp defines optimal controller desired size wide powerful nonlinear used pomdps qclp optimization optimality optimization show open promising pomdps nonlinear early markov process mdps partially observable counterpart pomdps widely used planning uncertainty pomdps rich involving uncertainty domain stochastic noisy pomdp robot control simmons koenig medical diagnosis hauskrecht fraser machine maintenance eckles robot sensor uncertain incomplete must factored planning process medical certainty machine maintenance earliest area pomdps seek find costeffective inspection part domain inspecting manufactured numerous pomdp surveyed cassandra developing mdps pomdps thriving area cassandra feng hansen feng zilberstein hansen littman meuleau poupart boutilier thanks computing realistic mdps pomdp high memory pomdp find memory even optimal concise dynamic intractable work done make process feng zilberstein time pomdp remain serious pomdp operate memory consequence weak permitting principled optimal used find optimal controller rely solely meuleau poupart boutilier optimal controller represents optimal pomdp controller size illustrate benefit employ nonlinearly constrained optimization nonlinearly constrained optimization produced wide quickly bertsekas quadratic linear belong optimization many robust locally optimal facilitate optimization employ previously used meuleau poupart boutilier avoid convergence suboptimal rest give pomdp stochastic controller briefly work pomdps controller show optimal controller quadratically constrained linear qclp demonstrating pomdps permit valued fixedsize controller maintaining time suggest qclp controller efficiently assortment pomdps background pomdp tuple finite designated distribution finite transition transition probability taking finite probability observing resulting case process unfolds infinite agent selects yield receives agent must history seen note beneficial agent remember history agent maximize discounted infinite discount maintain finite controller used elegant representing pomdp finite memory controller turn agent controller controller address main intractability pomdp remembering whole history also stochastic transition help make memory finitestate controller formally tuple finite controller node node mapping node distribution represents node transition mapping node distribution resulting node node node transition probability linear node referred bellman work many pomdp work seek best node transition parameter controller poupart boutilier iteration step dynamic lookahead pomdp controller size alternate iterates node controller linear examine probabilistically taking transitioning controller node transition probability accordingly controller evaluated continues maintain controller find concise optimal controller heuristic also incorporating practice poupart boutilier termed biased concentrated node pair weighing pair unnormalized occupancy distribution linear node used previously probability beginning node pair also decrease node pair make parameter lost note pair node pomdp fail find optimal controller decrease pair heuristic difficult adjust applicable domain meuleau controller gradient ascent node transition probability controller pomdp considering pomdp node controller pomdp deterministic transition controller seen resulting matrix operation gradient calculated unfortunately preserve parameter probability distribution complicates globally optimal gradient followed controller incomplete gradient time consuming prone disadvantage fail find optimal controller pomdps seen pomdp transition deterministic alternating informative node distribution likelihood best probability modeled node stochastic controller also show memory node stochastic controller arbitrarily discounted deterministic controller size controller deterministic chooses converge optimal controller controller step lookahead assigning probability raise node assumed calculating true updating transition probability distribution node make biased thus preventing lost predetermined controller many decrease likewise gradient difficulty optimal controller meuleau formulate unconstrained heuristic must adjust gradient proper probability maintained heuristic controller remain stuck heuristic globally optimal controller represents causing suboptimal premise work defines optimal controller facilitates overcome limitation stochastic controller optimality show advantageous linear used controller stuck suggest heuristic becoming unstuck nonlinear step even step backup controller optimal controller parameter term infinite lookahead qclp predict true also stuck meuleau must construct controller pomdp procedure calculate gradient also take probability thus calculate true gradient gradient ascent used traverse gradient shortcoming remain optimal controller defines optimal controller size done creating represents node pair intuitively controller probability reflected node controller node transition probability quadratic bellman node must quadratically constrained linear difficult qclp exactly many robust qclp gradient intuitive match well optimization sophisticated optimization used qclps resource much simpler qclp defining optimal controller represents represents controller node arbitrary fixed suggest many pomdps optimal controller approximated concisely unnecessary memory find good optimizes controller scale intractable rest give formal qclp optimal defines optimal controller fixed size qclp alternate quadratically constrained linear improves evaluates controller phase node maximized distribution parameter probability node node transition probability node node transition probability nonlinear must optimization bellman node transition probability linear used maintain proper probability reduce node transition probability merged quadratically constrained linear qclps quadratic term linear subclass nonlinear difficult linear possibly simpler nonlinear qclp also permit describes qclp defines optimal controller designated node maximized distribution represents bellman node last proper probability depend resulting seen optimal qclp optimal stochastic controller size distribution optimality controller bellman maximization node distribution bellman restrict probability node represents optimal controller qclp constrained optimization seek minimize maximize equality linear linear linear quadratic quadratically constrained linear unfortunately nonconvex mean well thus globally optimal guaranteed nevertheless wide nonlinear able efficiently find nonconvex many locally optimal guaranteed time globally optimal also merit fitness criterion used convergence hallway domain goal designated star made convex domain much robust gradient ascent retaining modest many case also quadratic linear permit convex degree used freely nonlinearly constrained optimization snopt gill neos server find successive quadratic quadratic quadratic must quadratic linear snopt combined approximated merit also used convergence snopt biased also produced significantly worse substantially time omit competitive biased poupart boutilier poupart boutilier loss parameter biased decreased domain studied best experimentally much trial centered around suggested poupart boutilier note goal demonstrate benefit used shelf snopt many fact developing customized take inherent qclp scalability domain used qclp initialized deterministic controller mean time convergence slightly qclp produced controller taking highest lowest valued infinite step hallway domain mean qclp controller size conducted expect affect time mean time biased delta reported time slightly hallway benchmark hallway domain introduced littman cassandra kaelbling used benchmark pomdp grid robot face north south east west goal robot orientation must make goal turning going forward staying never goal consist view wall domain transition noisy goal discount used domain controller size mean produced qclp produced biased biased improves upon remains optimal pomdp optimal represents optimal pomdp size qclphal bpihal qclpmac bpimac mean time qclp hallway machine qclp good pomdp significantly closer time controller remains mostly controller size grows case significantly produced qclp computation time case qclp also noted four node controller qclp controller size little time poupart boutilier also node controller escape avoid also used hour produced controller qclp generates node controller time size machine maintenance test machine maintenance domain cassandra four machine used manufacture part good fair well broken need four machine used manufacture part inspect repair replace machine manufacture good part good good part broken part fair raise probability producing part resulting part inspecting machine noisy good good fair seen good fair broken seen repairing machine part broken high probability replace transition good degrade unless repaired replaced manufacturing good part inspecting repairing producing part discount used optimal pomdp optimal controller produced qclp exceptionally close qclp generates controller size encouraged particularly controller size four node controller produced qclp mean time seen favorable fomulation qclp time controller size remains reasonable controller size time controller size suggest qclp machine domain mean qclp controller size sentation permit controller outperform also controller size real strength qclp seems compact high valued controller conclusion introduced pomdps nonlinear defines optimal stochastic controller wide powerful nonlinear optimization showed nonlinear optimization valued controller consistently controller size even best heuristic used domain also showed significantly controller qclp suggest concise optimal controller pomdps practical domain particularly encouraged controller time used node controller work open promising relationship nonlinear optimization match nonlinearly constrained optimization thus goal identify subclass pomdps globally optimal efficiently also customized qclp take inherent pomdps show promise scaling size controller efficiently solvable qclp competitive conduct comprehensive wide domain competitive leading pomdp perseus spaan vlassis pbvi pineau suggests qclp favorably well confident well insight strength weakness qclp begun applicability qclp involving agent modeled decentralized pomdps amato successfully case bernstein confident qclp also used find concise controller agent domain acknowledgment like thank reviewer helpful comment work part foundation grant force office agreement
