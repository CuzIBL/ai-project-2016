work learning focused developing learn observing learning improving describes prodigy system learn phenomenon failure explicit target phenomenon target dynamically improving explanation formulated describing domain prodigy target declaratively specified demonstrated learning viable acquiring control learn analyzing succeeds schema describes arise learning also used learn failed explaining failed system learn avoid fact system learn phenomenon system must know phenomenon target able formulate explanation system must able modify appropriately learned describes prodigy system learns target utility learning process prodigy learns phenomenon success failure target corresponds optimizing prodigy effectiveness explanation formulated explicit describing domain prodigy target declarative lthis sponsored part defense prefect agency arpa monitored force avionics laboratory part office naval part gift hughes corporation bell laboratory scholarship view conclusion contained representing official expressed implied darpa force office government extensible optimization incorporated system also introduces construct explanation specializing schema gained training particularly learn terminology learning contributed greatly emergence relatively terminology describing learning generic term explanationbased learning refer deductive learning exemplified target training target domain axiom describing domain training target explanation constitutes training satisfies target weakest explanation hold learned training target learning process serve recognizer target adapted target safely collapsing training demonstration book safely upon domain assertion enabling safe stack book lighter book safely stacked thus learned domain lighter prodigy system prodigy learning apprentice acquires expertise interacting carrying analyzing trace prodigy divided four subsystem control searching inference rule operator system operator specified capable interleaving goal guided control rule learning explanation control transform control rule module refining incompletely incorrectly specified domain experimentation triggered plan detects divergence expectation expectation participate dialogue enabling user modify system experimentation module prodigy tested task domain machine shop scheduling domain robotics construction domain brevity exposition task domain familiar block specification block seem contrived apparently searching hundred node word domain formalization axiomization domain ideal acquiring control prodigy effectively modifies reflects inherent simplicity domain deficiency formalization learning control thus reformalization brought bear early made efficiently pickup precondition clear ontable armempty holding ontable clear armempty putdownb precondition holding ontable clear armempty holding stack precondition holding clear clear armempty holding clear unstack precondition clear armempty holding clear clear armempty block specification goal prodigy disjunction negation existential quantification universal quantification case also used describing precondition operator control rule default prodigy attacking goal left unless control rule ordering goal system selects operator postcondition list match goal precondition operator satisfied operator system subgoals unsatisfied precondition simplicity describes system illustrate sophisticated feature inference rule planning reader unfamiliar operation system tree prodigy considers applying pickup unstack holding illustrated pickup inappropriate discovered attempting pickup prodigy forced subgoal clear ontable unsatisfied precondition pickup prodigy clear unstacking achieves clear attempting ontable prodigy clear also failure knowing unstacking failure learning interleaved prodigy backtracks intelligently eventually backtracking nodel prodigy unstacking lead prodigy domain control rule control rule constrain mediating four prodigy make system must node tree expand next default node subgoals describing node subgoals must operator relevant subgoal binding operator must decided upon four affected control rule reject prefer node goal operator binding default minton carbonell prodigy applies applicable rule subset rule applicable rejection rule filter preference rule used find heuristically best alternative backtracking next preferred attempted control rule rule operator rule used deciding operator operator fails goal node system target atomic target declaratively specified system illustrated target specification template control rule heuristic selecting training node true match node goal target goal node rule template reject operator node node rule asserts goal match holding unstack operator normally pickup unstack holding operator rule learned prodigy waste time exploring descendent operator unstack node node holding node unstack node ontable prefer goal node node node control rule control rule goal preference rule used decide goal node rule goal preferred attempted piece control directs build stack block bottom prodigy find preferred goal rule handle stack regardless height goal learning control rule prodigy learning module invoked finished learning interleaved case learning process examining trace explored tree traversal pick prodigy target control rule learned explaining training satisfies target four type target prodigy succeeds control succeeds learning success preference rule fails fails consistent learning failure rejection rule fail learning sole alternative rule goal must learning preference rule type target four variant four control picking node goal operator binding target true preference transitive preference graph preference cyde disregarded best preferred preferred acquisition node goal node target specification explanation describes target corresponds construct describing well describes task domain block prodigy axiom serve domain axiom extracted domain operator axiom referred describes true illustrates architecturelevel schema relevant operatorsucceeds schema operator succeeds goal node operator applicable solves goal subgoaling creating child node operator succeeds operator subgoal creating child node operator succeeds schema operator precondition target satisfied prodigy specializes target accordance process creating tree root target incrementally expanding leaf tree specialize prodigy retrieves schema recursively specializes subconcepts schema process terminates primitive encountered process weakest premise explanation schema disjunctive specializing disjunctive prodigy schema give discriminator examines trace selects schema consistent training discriminator mapping explanation process terminates resulting target control rule formed retrieving rule construction template target specification substituting specialized training subconcept subconcept scope universal quantifier universally quantified take form forall treat universally quantified logically normal form forall negated specialized generates fixed simplified learned simplification axiom specializes separately disjunction atomic specialize primitive schema unchanged call discriminator retrieve schema consistent training atomic schema subconcept subconcept schema specialized specialize subconcept uniquely rename specialized avoid name conflict substitute specialized subconcept schema simplify schema specialized target template problemsolving episode prodigy maintain utility rule utility cumulative time cost rule cumulative time rule rule retained control rule illustrate work stated previously unstack nodel training target target goal node unstack holding nodal recursive success unstack success node eventual nodel illustrate process unrolling recursion bottom success unstack nodell subconcept goal node unstack holding nodell unstack solves holding nodell specialized schema consistent system recursively specializes subconcepts specialize goal node goal applicable node specialize goal match unstack match goal holding applicable node spaoialisa applicable node match unstack match goal holding match unstack node clear armempty trivial simplification goal node match unstack match goal holding node clear armempty simply operator succeeds goal node operator unstack goal holding precondition unstack true node particularly serf lemma explaining putdown enabled unstack goal node unstack holding time specialized recursive putdown precursor unstack applicable specialized recursive accomplished nodell node specialized simplified effectively regress putdown relevant used regression unstack succeed goal hold precondition putdown unstack satisfied goal node match unstack match goal holding node clear holding process continues successful unstack nodel explained resulting unstack goal hold precondition unstack putdown unstack unstack goal hold block block desired block robot empty goal node match unstack match goal holding node clear armempty control rule built rule construction template reader noticed learned seems process prodigy evaluates utility rule learns clear learned rule relatively weak control rule next much explanation unstack analyzing alternative putdown thus work illustrates learning successful operator guaranteed control rule utility learning task domain greatly target explanation unstack must precondition remainder take possibility formulate inductive explaining thai unstack succeeds matter many block learning failure learn failure pickup nodel prodigy target specializing schema operator fails goal node operator rejected control rule operator relevant goal operator applicable subgoaling fails operator applicable operator failure reader cautioned expository clarity schema simplified subset used pickup nodel failed prodigy must subtree rooted failed recursive corresponds traversal tree process attempting putdown failed goal holding resulting proceeds target goal node putdown ontable specialize goal node goal node node specialize goal specialize specialize node match putdown match goal omtable match putdown match holding node node prodigy simplifies putdown fails ontable goal holding true goal node match putdown match goal ontable node holding node holding describes operator putdown failed putdown operator relevant ontable goal node failed node specializes training lemma node node ontable node holdxmg node holdxmg moving tree find also explains failed fact user asked prodigy interleave learning inevitable failure recognized necessity exploring rest subtree prodigy failure process learning backtracking learning interleaved acquisition prodigy pickup failed nodel precondition true became goal holding pushed resulting failure thus yield goal node match pickup match goal holding node ontable converted control rule asserting goal holding pickup rejected even rule learned specializing target operator operator fail stating failed used lemma specializing thus prodigy learns control rule stating unstack goal holding selecting unstack slightly rejecting pickup prodigy selects alternative rejection rule filter alternative rejection rule rule much unstack rule learned illustrated learning alternative failed learning succeeded true block succinctly stupid learning success failure complementary optimization relative utility varies domain domain learning goal goal prodigy stacking stacking stacking deletes clear prerequisite stacking consequently unstacking case plan exhibit goal goal plan negated step plan complementary form goal manifest protection violation undoes previously achieved goal requiring goal prerequisite xnolation negates goal arises planning process prerequisite violation stacking deletes clear protection violation follow picking deletes goal phenomenon also independently goal plan planning system avoiding goal prodigy improves reasoning learn control rule reminiscent sussman hacker goal unavoidable even occasionally plan prodigy learns rule preference thereby enabling even unavoidable learning avoid goal optimization planning domain type domain irrelevant caused prodigy must show path tree resulted protection violation prerequisite violation failure informal target describes selecting goal goal goal goall node forall path goall path terminates failure achieving goall negated protection violation achieving subgoal arises negated process achieving goall prerequisite violation illustrates relevant tree nodel goal ordering prodigy seen expand tree goal attacked next node produced explaining goal occurred target training target goall node nodel tree illustrating goal final learning process goal preference rule indicating attacked goal learning rule prodigy work bottom goal learning process reveals attacking equivalence part achieving must clear prerequisite violation fact incidently equivalence obvious prodigy learning strip macrops algorithmic distinction demonstrates appropriateness learning take mitchell keller step instantiated explanation form tree step take explanation computes sufficient explanation hold strip instantiated explanation operator produced sufficient explanation hold thus take explanation explanation generating explanation constructed black perhaps prover demonstrated mostow bhatnagar serf explanation strip latter case operator domain hand never bother explanation tree expanded make explanation observable strip trace constitute explanation failure explanation must constructed domainlevel axiom secondly mapping trace explanation efficiently accomplished discrimination augment control explanation process schema inference rule specialize scheme dejong mooney scheme operator operator constructed domain case instantiated explanation eventually produced soar system production firing learning soar learns production goal learning production goal failure success soar able learn form failure well success schema schema failure goal regarded soft failure failure alao note learned represents weakest wrong node goal operator binding goal sufficient hold find precondition prodigy simply specializes target learned constructing instantiated regressing fact learned produced training terminates producing explanation bias determining generality resulting come schema disjunctive primitive used utility optimization learning serve optimization illustrated four dynamically improving prodigy system corresponds target explained learned target prodigy augmenting four optimization illustrated applicable domain specified prodigy concern utility obviously prodigy learn observing system target give system illustrated utility target greatly task domain formalization sense optimization regarded recovering suboptimal formalization epistemologically adequate procedurally inadequate need suggested practical work optimization acknowledgement gratefully acknowledge assistance craig knoblock kuokka henrik nordin prodigy system idea suggestion jerry dejong oren etzioni yolanda smadar rich keller sridhar mahadevan mitchell mooney jack mostow prasad tadepalli greatly influenced work schema schema simplified subset schema used prodigy assumed precondition operator existentially quantified negated goal operator addlist relevant goal schema used prodigy schema succeeds operator succeeds solves node goal applicable node acquisition operator succeed operator goal node applicable node goal node operator succeed subgoaling goaling creates node applies goal node node goal schema block postcondition unstack holding goal match unstack hatch goal holding postcondition putdown ontable goal match putdown match goal ontable precondition putdown holding subgoal match putdown match subgoal holding unstack applicable precondition established applicable node match unstack node clear armempty axiom computing regression computes node applying note must schema used incorrect node forall node schema frame axiom literal hold child node operator hold parent node match operator list match forall match schema regress fact subgoaling node subgoal node node subgoal match node node subgod match subgoal
