prolog undoubtedly good task screen network interface controller natural computational task hard reconcile prolog declarative need even committed prolog task need oriented system database sussex integrating procedural addressed distributed ring processor communicating message passing poplog system mixed hardware describes integrated prolog poplog poplog poplog system sussex prolog dialect lisp poplog series operating system progress poplog link machine poplog virtual machine compiler poplog virtual machine machine code host machine host machine code link fortran procedure planting virtual machine accessible user thus prolog compiler many poplog piece machine code easy procedure closure closure pointer procedure plus procedure closure normal procedure hardy teknowledge palo alto syntactic sugar make easy closure doubled evaluates closure invoked call procedure double backtracking continuation passing backtracking poplog continuation passing clarity practice prolog compiled poplog virtual machine code continuation passing procedure continuation continuation procedure closure describes whatever computation remains procedure finished computation continuation implicitly address code procedure procedure prog step subprocedure subprocedure thus presupposes take continuation must arrange passed continuation passed closure thus mellish hardy prog continuation continuationx enddefine thus closure closure invoked continuation continuation proved great significance semantics apparently round also enormous practical procedure explicit continuation need invoker conventionally returning invokers mean finished continue computation explicit continuation assign returning invoker sorry able wanted illustrated procedure newprog work thus newprog continuation cont continuation enddefine invoke newprog continuation call giving continuation succesful invoke continuation call newprog fails returning newprog fails returning invoker continuation unify chris continuation unify continuation enddefine unify procedure take data continuation unify make unsuccessful unify invoker successful applies continuation unify undoes made invoker unify must prolog prolog uninstantiated backtracking uninstantiated unified said soon obtains automatically obtains poplog prolog data procedure consref accessed procedure cont uninstantiated prolog containing word undef cont come make find real sharing dereference look innermost unify unify continuation continuationo elseif isref cont undef cont continuationo undef cont elseif isref cont undef cont cont nuat elseif isref unify continuation elseif ispair ispair unify front front unify xback back continuation enddefine procedure data identical applies continuation identical unify look uninstantiated cont word undef unify assigning cont assignment work left continuation fails unbinds cont back undef case unify deal unify must case type datastructure recognised prolog term note else part default simply prolog prolog make done prolog invoked rewrite prolog make procedure consref undef consref undef conspair cont nuat enddefine line prolog undef next line newly pair front back unify last line pair successful unify invoke continuation case closure conclusion prolog poplog believe system true prolog compiler many procedure code poplog machine mean compatible asymmetry mellish hardy continuation passing semantics communication subroutine control poplog make system faithful nevertheless acknowledgement like thank john gibson main implementer poplog virtual machine compiler powerful work also like thank aaron sloman cunningham many
