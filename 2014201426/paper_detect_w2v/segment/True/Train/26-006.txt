concerned module system many godel type module system module system extends godel module system parameterised module system depend fact rule module used extensively representing reasoning base base mean segmenting part base used build completed module module researched view construction concentrate module module construction module system must mean combining normally achieved module import part module protected unintended module encapsulation module divided part part defines used importing serc grant module part extends locally independently module import thus import normally restricted defining module compilation module must ordering module usable many module data type stack transitivity need tied type well domain mean type also protect syntactic caused misuse idea godel hill lloyd godel parameterised type system generic inclusion polymorphism godel module system importation encapsulation compilation well module defining data type godel module system module defining transitivity parameterised module system extends module system godel defining module investigated module miller extends prolog module horn clause module implication semantics intuitionistic module system module dynamic sense deleted time thus modification procedural semantics module system deal untyped module assumed thus data type prolog supporting module system marketed sannella wallen prolog module system modularity module system module system type godel also form parameterised module parameterisation module name main must module system parameterised module system flexible safer protected unintended goguen meseguer eqlog combine parameterised module system module system sannella wallen framework eqlog prolog applicable antoniou sperschneider divide module four part import export body parameter import export part horn clause imported exported used module exported also body part module used parameter part specifies generic full importing module supply must specification module module must module disallows flexible system organised next godel module system explained show parameterised module give modulefree typed formal modular parameterised module outline semantics godel module system godel best explained mean export jonesfamily base person coistait mary person mother father thejonesfaaily father mother mary export thejonesrels import thejonesfamily person person thejonesrels person person mother father module kind module word declared jonesfaaily module person declared base type declared type person mother father declared type person godel name arity must module module part export part module stating export part name module export part used module also module import thus type person used thejonesrels well part jonesfamily declared part module part thejonesrels declares part used outside module allowed part showing parameterised module hill rela parent ancestor type constructor base regarded constructor arity hill module declared part module jonesrels also module word import make declared export part jonesfamily jonesrels illustrates type godel godel also generic data list list term type type used specified godel system module list module export type constructor list coistructor coistant list meaber base type type list list list tuples type declared type type declared type mean type substitution thus also type list list type type list list constructor type form arity head godel module main module smallest module closed module import must module name partially ordered import module appearing export part module must declared imported export part constructor nonempty module must declared module compilation protect procedure module modified module thejonesfamily jonesrels form godel module containing rule family forced module system importing module defining family thereby preventing reuse family thus modify parameterised module next rels module parameterised base person mother father note thejones module import rels module importation opposite export thejones import rels jones base jones jones jones coistait mary jones thejones mary export rels person mother father base person mother father person person rels person import person person person mother export base module name word export identifier must export part module module rels person mother father module name identifier rels base person mother father declared module said specified module base jones specified thejones module module module substituting occurring module name substituted must distinct specified module thus module imported rels person mother father export person base person person person person person person note specified module specified module module thus specified person person import module specified person modular godel informally module main module closed identifier import satisfying module identifier module name partially ordered identifier import module identifier name appearing export part module must declared export part specified export part module imported export part constructor name declared imported module specified imported module imported module also imported module rels person mother father form modular jones show module system work module import module constructor module parameterised module system inheritance also constructor module illustrate family hill marriage family family name hiluones export thehilljonss hilljones base hilljones hiluones jones import thejones hilljones thehills hiljones coistait thehill jones hiluones mary export thehills hill base import rsls hill comstait jill thehills hill hill hill
