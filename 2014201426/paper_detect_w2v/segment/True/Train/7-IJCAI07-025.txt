decentralized distributed optimization excessive communication optapo mailler lesser centralization mitigate centralization dpop petcu faltings pcdpop control part centralized centralization optimal communication optapo priory prediction loss communication memory computational node link network communication memory specified also gain optapo domain satisfaction optimization powerful paradigm task like scheduling planning optimal process control traditionally gathered centralized find sometimes naturally distributed distributed satisfaction discsp formalized yokoo yokoo divided agent communicate address distributed optimization like adopt optapo dpop introduced adopt modi backtracking propagation operates decentralized asynchronously downside message thus producing communication overhead optapo decentralized centralized operates cooperative mediation process agent designated mediator centralize part dynamic asynchronous mediation session message significantly adopt mediator overlapping thus needlessly duplicating asynchronous dynamic mediation session make impossible predict centralized much eventually centralized computationalburden mediator suggested davin modi handful node centralize computation dpop petcu faltings dynamic generates linear message dpop message memory exponential induced width dpop infeasible high induced width parameter characterizes size largest message memory proceeds normal dpop dense part width clustered centralized root cluster solves centralized communication link network thus linear message preserved rest structured formally describes optimization introduces dpop optapo introduces evaluated empirically relates work briefly concludes preliminary discrete distributed optimization dcop tuple finite domain scope much utility mean cost dcop owned agent simplifying yokoo agent control virtual agent owns simplify virtual agent multiagent valued framework schiex goal find instantiation maximizes utility unary binary dpop extend petcu tree work traversal graph tree arrangement graph rooted tree node edge property adjacent node graph fall branch tree show tree refer rest distinguish tree edge solid line back edge dashed line node parent child obvious ancestor descendant sepi separator ancestor descendant removing node sepi disconnect subtree rooted rest optimal asynchronous overlay optimal asynchronous overlay optapo mailler lesser sound optimal dcops dynamic centralization conceptually discovers difficult trial centralizes mediating agent take fast centralized protocol exhibit early parallel hill climbing behaviorwhich progressivelytransitions deliberate optimal difficulty tightness interdependence agent centralizing optimal dpop dynamic optimization dpop distributed bucket elimination scheme dechter work dpop phase phase traversal graph done distributed like petcu outcome step node consistently label edge identified edge achieved graph linear message phase util propagation process leaf propagates upwards tree edge agent send util message parent subtree node influence rest separator sepi message optimal utility subtree instantiation sepi thus message exponential separator size induced width phase propagation initiated root phase finished node determines optimal message phase message parent sends child message centralization overcome dpop control parameter message dimensionality parameter memory node link parent maximal domain size dpop also phase construction phase util phase phase util phase dpop propagation proceeds dpop reverts centralization width exceeds util propagation exactly like dpop proceeds long dimensionality outgoing util message threshold soon node outgoing util message dimension centralization node util message sends parent message arity node used computing util message annotates message upon receiving message node test separator separator intersection node root path node node encountered dimension message child graph tree area normal util propagation high width area shaded cluster util propagation used message size cluster centralized cluster root bold node case node cluster root reconstructs subproblem incoming message solves continues util propagation dpop phase node receives message parent retrieves cache informs node cluster optimal message cluster root parent relevant child util message centralization process area shaded area initiated node send util message exceed dimensionality imposed node util message child sent parent message annotated appending node path hand ensures dimensionality arity produced sent network hand cluster root reconstruct subproblem centralized sensitive like dpop aobb alternatively save bandwidth avoid overload cluster root node also node selectively join subset message dimensionality resulting resulting packaged message annotated node sent parent happens node receives message child form message parent pseudoparents match pair joining resulting dimension dimensionality resulting dimension join successful remove join process linear size resulting sent parent message process proceeds node separator reached declares cluster root procedure phase difficult highwidth area identified distributed fashion area reverts centralization node send parent high dimensional util message arity used util message subproblem reconstruction cluster root node child scope path traveled reached creates copy node scope reconstructs subtree placing ancestor identified know path root child identified descendant case deduces subtree analyzing backwards path recorded involving receives annotated path child easy child child thus whole branch reconstructed note identifying branch well also receives annotated path reasoning infer also child like branch make cluster node reconstruct subproblem structural enables optimization also take aobb marinescu dechter centralized dpop petcu faltings centralized subproblems centralized root cluster area cluster shaded area containing root cluster maintains cache many assignment separator case normal node dpop root also creates outgoing util message many dimension size separator cache corresponds util message instantiation separator cache best assignment centralized subproblem correspond instantiation separator process proceeds instantiation sepi cluster root solves centralized subproblem resulting utility optimal stored util message cache correspond instantiation sepi instantiation tried util message parent optimal utility instantiation separator exactly dpop cache centralized subproblem yield optimal utility cluster root sends util message parent process continues like normal dpop possibility choosing optimization subproblems centralized dpop petcu faltings aobb marinescu dechter centralization dpop agent util propagation protocol wait message child sepi send outgoing utilpi incoming util normal dpop node utilpi dpop send else mean root cluster reconstruct subproblem subproblem utility inand cache send utilpi else mean part cluster join subset incoming parent dimension join join send join propagation sepi cluster root cache corresponds self node cluster else continue phase dpop phase labeling phase area inference must excessive width processing done area outside propagation dpop applies message root cluster receives parent optimal assignment separator sepi cluster simply retrieve cache optimal assignment instantiation separator assignment node cluster thus inform node cluster optimal message subsequently propagation proceeds dpop area behaves exactly dpop generates linear message size area width exceeds cluster formed dpop communication memory vary centralized subproblems width graph show separator node node cluster also show cluster util message dimension never stored sent recursively dimension prof part memory seen root cluster util message cache cluster root memory aobb linear memory exponential size cache util message dominates memory memory intensive centralized dpop proved exponential induced width subtree induced cluster mean memory exponential maximal width cluster induced width domain distributed sensor network graph meeting scheduling optapo used centralized fairness runtimes effectiveness centralization protocol communication centralization maximal arity binary width centralization message size memory sparse induced width dpop dpop centralization message size optapo agent centralize part additionally agent centralize half meeting scheduling relatively distributed meeting scheduling maheswaran briefly optimal schedule meeting agent agent meeting yielding maximal size centralized size graph coloring centralization optapo agent centralizes optapo agent centralize subproblem many agent centralize subproblems size graph coloring message pcdpop variant linear message byte much also denser even difficult induced width optapo managed terminate successfully smallest timeout believe optapo excessive centralization overload centralized optapo centralized node consistent davin modi managed keep centralized subproblems successfully terminating even difficult pcdpop smallest memory centralized node maximal centralized node dpop centralization show optapo centralize dense much work tree clustering kask long time tradeoff pcdpop loosely many part transparently area width clustering node regular dpop protocol area creates cluster size outgoing util message size cluster specified separator size note maheswaran show centralization worse distributed even node cluster send cluster root well aggregation sends sent like real aggregation resulting join util message inferring true valuation impossible even conclusion work optimal customizable message size memory priory prediction loss communication memory computational node link network explores loose part centralization like dpop tightly cluster centralized respective cluster root mean concern centralized avoided part investigate thoroughly loss work show particularly optimization width intuition dense tend centralization confirmed
