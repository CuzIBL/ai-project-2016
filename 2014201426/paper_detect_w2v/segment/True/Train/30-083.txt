computing minimax game partitioned subgames minimax relies combinatorial game locally restricted much show game traditionally regarded endgame show alphabeta impractical remaining move endgame much endgame exceeding move game perfect minimaxbased successful game gomoku nine morris heuristic reached championship game chess checker endgame database constructed retrograde uncovered wealth forced rewriting textbook successful well understood game succeeded combinatorial game game combinatorial game subgames computational combinatorial game decomposes game subgames kind subgame applies game playing combinatorial game resulting game graph determines optimal play combinatorial game subgames scope minimax optimal play game much classical extra review game combinatorial gametheoretical game decomposable introduces four step minimax optimal play combinatorial game applies endgame game tree endgame game game tree goal size traversing clever find early game attractive idea identify simpler subproblems contribute heuristic identifying subgoals game ultimate goal game difficult reach player identify subgoals goal bridge player analyze play chess player seek capture piece break pawn narrowly focused subgoal much full width game achieving subgoal outcome game database successful computational game construction endgame database game vertically progressively simpler game time axis converging game checker nine morris chess simplify game fewer fewer piece remain endgame database built simplest subgames retrograde thompson optimal play outcome optionally conversion subgame subgame database used heuristic database used heuristic combinatorial game conway berlekamp mathematical radical break game piece analyzes game term subgames heap subgames move game corresponds move subgame leaf subgames unchanged game subgames ended final outcome game subgame outcome combinatorial game played heap token move player remove arbitrary token heap whoever move loses heap constitutes subgame winning subgame trivial winning heap exhaustive much efficiently computation calculus combinatorial game develops framework game kind combinatorial game lcgs resulting game graph applying combinatorial game game decomposes subgames combinatorial game four step determining optimal play game subgame identification find subgames combinatorial game lcgs find game graph game graph terminal find combinatorial game interior node leading computation game play combinatorial game combinatorial game optimal move subsection four step game play limitation precondition applying game subgames combinatorial game outlined procedure game rule game many analyzed book winning berlekamp suitable rule game show game find good combinatorial game lcgs main gathering step independently subgame lcgs generates game graph representing relevant move played locally game lcgs work differently minimax tree move terminal game graph built lcgs differs tree minimax case minimax player move alternately analyzed player move subgame move must successive move muller player player switch subgames move full treatment prevent infinite game repetition game forbidden game chess repeatedly long whole game keep changing combinatorial game game deal locally acyclic game cyclic game enter optimal play move lcgs must legal move player terminal move provably pruned pruning rule gamespecific restricting move pruning locally move dominated move terminal scoring termination rule decide evaluated expanding game graph lcgs defines termination rule legal move good move game recognized case terminal rule game case transposition precomputed database lcgs terminated well retrieved combinatorial game previously next computes combinatorial game acyclic game graph evaluated leaf node player black white good black black move white move combinatorial game brought canonical form rule combinatorial game repeated eventually yield node game graph game playing affect game lcgs even optimal play fails forbidding player move repeat transforms game graph acyclic graph player coincide optimal play depend stop failure game play find optimal move game final step selects move improves combinatorial game incentive move incentive move subgames locally incentive dominates optimal move usual case game rich incentive combinatorial game partially ordered happen nondominated move remains case optimal move procedure involving combinatorial summation game conway summation operation worst case minim practice seems work much many opportunity reduction well summation even yield globally optimal play switch back forth subgames subtle reasonable play make perfect play database play full corresponds subgame combinatorial game retrieved database long opponent analyzed line followup move played stored database opponent play move pruned lcgs reach unevaluated subgame type limitation cyclic subgames computational resource cyclic subgames handled case affect optimal play resource exhaustion detected hold game fails subgames lcgs exceeds preset time combinatorial game practical highly depend game graph built lcgs combinatorial game impartial game partizan game applying endgame game game achieved safe stone territory resulting pruning move lcgs scoring terminal decomposed part isolated rest wall safe stone move part part wall show step safe stone territory identifying subgames remaining safe stone territory endgame safe stone territory safe territory subgames evaluated size territory area surrounded player territory territory goaldirected applying miiller safety territory play territory proven safe player never play territory opponent attack player territory find refutation restores safety area endgame area unsettled stone empty territory safe stone color surround endgame area endgame play unsettled stone safe captured empty occupied part safe territory rare case empty seki scoring terminal scoring assigns terminal chinese rule scoring many stone empty belong color japanese rule territory prisoner counted kind scoring straightforward terminal stone empty exactly pruning move speculative pruning selective move provably eliminated move achieves control area optimal move pruned surrounded area move entrance good move player area best move full move distinguishes case opponent made player territory reply keep territory stone safe combinatorial game finished play game cleanup phase fill final neutral finish game miiller full endgame puzzle berlekamp wolfe territory slightly strengthened make safety endgame full scratch precomputed database subgames used minimax minimax used alphabeta size transposition naive allowed safe territory pruning rule lcgs move must good move must allowed forced damage endgame berlekamp wolfe computing safe stone territory remaining endgame area labeled size ranging trivial challenging minimax testing series simplified endgame replaced territory show simplified size consisting area area replaced territory marking white play show node lcgs phase followed node time macintosh time size transposition insufficient full resulting enormous time hour game playing area area size node time alphabeta berlekamp wolfe endgame show subgames determining safe stone territory unsettled remain partitioned distinct endgame area size endgame optimal move system take lcgs searching node subgames remaining time proving safety territory operation combinatorial game behaved node time subproblems area size time optimal final test game played champion many face playing black gained optimal playing white gained five considering endgame play gain term time alternative move disadvantage relative clearly demonstrated time exponential size whole lcgs worst case time exponential size biggest subproblem combinatorial game much overhead dramatic reusing alphabeta generates form evaluated subgames occurring game combinatorial game stored persistent database avoided terminated early database work combinatorial game case minimax database built endgame phase converging game alternative move best move minimax evaluating alternative move hand data yield optimal move move inferior optimal computational find minimax combinatorial game framework restrict subgames powerful mathematical combinatorial game combine globally optimal play vast demonstrated perfect play long endgame exceed game tree
