node aggregation distributed inference bayesian network chang robert fung systmes plymouth street mountain view california describes framework bayesian network loop undirected network singly conversion take distributed inference framework around operation node aggregation operation cluster node network replaced node changing joint distribution network framework operation node aggregation describes cluster node combined computational ments resulting network heuristic find node aggregation make network singly inference execute time guaranteed find feasible optimal computation describes framework framework converting bayesian network loop undirected network conversion take distributed inference framework around operation node aggregation operation cluster node network replaced node changing joint distribution network like predecessor tree bayesian network influence representing inference belief probabilistic bayesian network directed acyclic graph node node probabilistic dependence network whole represents joint probability distribution proved older tree increased compactness intuitiveness user fast distributed inference network proved bayesian network loop much room expanding graph topology addressed computationally node aggregation address inference network conditioning clique influence operation link reversal node removal stochastic ulation node aggregation handle inference arbitrary network node aggregation defining step reduce graph node aggregation singly graph step need step distributed infer ence graph calculate distribution node aggregated node graph consist node step calculates node marginalizing probability aggregated node describes make framework node combinability determines node aggregated node aggregation graph computational also graph topology size node graph calculates computation time inference find optimal node aggregation criterion utilizes pruning substantially reduce optimal guaranteed retained much chang fung simpler heuristic suitable also conclusion framework make framework directed acyclic graph major topological bayesian network graph graph undirected loop graph loop distributed inference loop propagation scheme circulate message indefinitely around loop keep distributed inference scheme deal aggregation conditioning stochastic simulation aggregation aggregate node loop need able identify node loop acyclic graph done loop graph case need identify loop loop loop node loop node loop partitioned cluster aggregated macro node note node aggregated node aggregated creates network node aggregation illustrate aggregation node aggregation path directed graph usual path acfd path pair node combinable path node node node combinable pair node path pair node outside lemma lemma pair node acyclic graph combined macro node resulting graph remains acyclic node pair combinable also node combiliability node acyclic graph combined macro node resulting graph remains acyclic combinable lemma combining macro node predecessor successor node well probability macro node predecessor node predecessor successor node successor probability distribution macro node lemma lemma probability macro node predecessor node probability combined macro node probability predecessor lemma probability macro node successor probability successor node macro node node linked successor case irrelevant affect probability dimension probability matrix combined macro node probability linked probability namely need fill matrix lemma straightforward carried lemma graph singly loop graph cluster aggregate node cluster macro node graph singlyconnected graph distributed inference processing aggregating node graph graph feasible feasible infeasible loop obviously computation resulting network distinguish criterion need next subsection computational macro node computational computational network need able quantify computational configuration distributed computational node depend size node also predecessor successor well size node singly network four module upward propagation downward propagation distributed processing processing node propagate data upward downward simultaneously four processing module calculating processing time node trivial computation considering four module carried node predecessor successor mulwhere size node predecessor tree node predecessor assumed coincides assumed enlarged probability matrix stored macro node time graph initialized normal processing evidence computational propagation need alternatively probability also calculated node storing matrix macro node alternative preferable matrix memory quired nevertheless computational resource probability need time kind choosing aggregation network configuration next heuristic suitable aggregation aggregation face fact graph node recursive bell grows exponentially series thus graph node thousand many graph feasible undirected directed specialized find optimal inspection graph case searching inspection graph find feasible optimal identified directed acyclic bayesian network chang fung examined optimal graph illustrate heuristic subsection aggregation formulates aggregation identification optimal node dependent loop ordered recursively pruning feasible occurring well acyclic graph numbered node predecessor successor scheme noted arbitrary switch node ordering scheme full dependent loop identified recursive node cluster make node cluster illustration graph fourth node pruning node pruning operation identified manage removing feasible pruning operation remove node cluster combinable node combinable pruning operation remove loop node abcd form loop pruning operation remove feasible consideration proven pruning infeasible loop node cluster combinable feasible reachable ordering scheme node cluster combinable node make node cluster combinable also loop node remove loop thus successor infeasible infeasible thus pruning infeasible prune feasible heuristic must cost must cost node calculated computational derived cost getting final must cost reaching final cost completing rest node singly cost cost combined heuristic well devise initializing find good feasible next subsection heuristic node dependent loop cost initialization expand make node prune containing node cluster prune containing loop expand else done heuristic node aggregation aggregation process graph graph root leaf step loop find root node identify root successor loop successor cluster node cluster predecessor node cluster combinable combine macro node node cluster combinable collect node successor loop step node loop done reduces graph loop singlyconnected optimal computational resource serve initializing subsection used node aggregation illustrate show graph resulting conclusion framework converting baycsian network loop network conversion take distributed inferencing singlyconnected network framework around operation node aggregation operation cluster node network replaced node changing joint distribution network framework node combinability determines node aggregated node aggregation computational aggregation find optimal node aggregation well simpler heuristic suitable framework used node combinability computational node ordering pruning operation node aggregation pursue node aggregation framework integration dealing graph loop conditioning stochastic simulation promising avenue seems like utilize graph feature connectivity size identify near optimal optimal lution seem promising even pruning feasible high cost alternative computationally costly graph combine feasible also worth looking integration seems clear suggested graph topology best poorly topology suggests integrated strength dealing graph topology combinability lemma graph node pair must path node node violates combinable node pair node pair combinable resulting graph node pair combined macro node remains acyclic node pair combinable path node node pair combined macro node directed path make resulting graph cyclic maintain resulting graph acyclic node pair combined combinable computational four module respective module calculate updating part calculate transition matrix multiply matrix vector predecessor
