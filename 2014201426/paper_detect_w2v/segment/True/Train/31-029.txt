need address time imposed like process control robot navigation dependable realtime need predictable meet time task predictable decide feasibility meeting time task arbitrary task task well ahead lastly exhibit progressively optimizing produced time relaxed sarts novel proper parameter control time allocated planning time sarts also criterion predict meet time task characterization sarts dependable system increasingly used avionics process control robot system command control characterized strict time posed time system time system predict violation avoid catastrophic consequence violating dynamic lack priori compile time many realtime computing task scheduling uniand architecture hard optimization computationally prohibitive particularly take thus dynamic faced tradeoff time allocated find addressing dynamic realtime progressively optimize optimize namely find best answer allotted time upon time allocated many combinatorial optimization computing formulated answer answer minimizes maximizes combinatorial optimization addressed static rise dynamic optimization dynamic optimization take handling time allocated optimization dynamic computing controlling time find time take execute response time system domain time time execute major drawback presently meeting test predict possibility missing progress meeting signal alarm soon discovered many failure meet catastrophic violation signaled soon contingency undertaken prevent disaster main limitation adequately address allocation time plan remaining time examines parameter tuning address planning procedure control time allocated planning sarts characterize effectiveness theoretically major contribution sarts adapt parameter planning process remaining time slack cost compliance feasibility test predict violation sarts able continue progress goal enables initially inconclusive task turn infeasible sarts progressively optimizing sense continue time relaxed find optimal adequate planning time allocated presence slack also analyzing predictive remaining formal addressed specification sarts sarts concluding graph node edge connecting node graph node viev graph represents configuration edge graph represents transformation transforms node edge node edge size stored edge cost regarded cost transforming cost traversing edge many modeled searching path connects transforms edge node goal node phase also referred planning cost signifies time find path phase cost signifies time system execute path response time tresp task cost planning phase tresp planning phase task generating evaluating node find path node refers process generating successor node graph successor node node edge heuristic node goal node node refers process examining node heuristic possibly ordering node phase task applying transformation edge path reach goal node node task specified formally graph node goal node need execute path connects maximize decreasing priority predict violation soon well arrives maximize probability searching path maximize tresp time permit continue concentrate analyzing effectiveness sarts accomplishing sarts term covered elsewhere thus omitted show predictability sarts heuristic predictability improves heuristic sarts comply feature sarts observe feature sarts task sarts plan task interleaved planning phase phase repeated goal reached violation predicted sarts novel parameter tuning prediction time planning phase predict violation ahead time allocated time planning selfadjusted continually parameter remaining time time allowable planning sarts slack remaining time time reach goal slack allocated time planning slack also used infeasible predicted time allowed planning determination planning time improving dependability prediction violation also make progressively optimizing many domain monotonically planning domain slack lead planning time turn plan phase path node goal planned plan phase terminated allocated time plan stopping criterion control planning cost incurred fraction cost incurred parameter sarts adequate planning time plan optimal path obviating need restrict planning time hamidzadeh shekhar sarts greedy besides controlling planning cost criterion also achieving near optimal response time plan execute paradigm elapsed time depend node expanded expanded node descendant open list represents cost path promising frontier node planning promising node refers node best shortest path goal promising node node next sarts calculated edge path planning sarts leaf represents best node traversed path node best heuristic traversed heuristic best node left heuristic traversed node utilize avoid looping indefinitely phase path planned plan phase path consist edge graph phase sarts consist traversing path planning carried iteration iteration sarts iteration iteration remove promising node list unexplored node open list generates child node expanding node child open list sort list promising node iteration sarts treated atomic iteration mentioned task note undefined iteration iteration represents cost path promising node iteration stopping criterion examined iteration planning iteration make sarts behave like greedy gradient greedy plan phase greedy expands node descendant make open list promising descendant thus planning execute phase traversal edge planning time fraction time parameter sarts compile time remain many desirable adjust respond wide progressively optimizing fashion respond sarts parameter control planning lime slack remaining time beginning expressed absolute time sarts plan execute path time true time path goal node beginning help heuristic note expressed forthcoming goal reached time sarts allocate plan path expressed forthcoming estimating planning time difficult path sarts sarts control planning time slack lemma sarts cost sarts iteration stodding criterion sarts allocates approximately time planning slack remaining time path slack time allocated time plan show alpha proportional slack shorter slack reduction intuitively slack mean little time planning planning process sarts greedy gradient also note atomicity sarts iteration imposes smallest planning carried sarts iteration selfadjustment parameter must observe sarts reduces sarts reduces greedy gradient tight leading slack prediction violation sarts relates test classify task feasible infeasible task heuristic sarts accept task infcasibility test show infeasibility test discriminate feasible task inconclusive task sarts continues task guard danger inconclusive task becoming infeasible task time test sarts able predict possibility violation ahead time domain feasibility test domain infeasibility test admissible heuristic sarts considers task reach goal node node beginning infeasible show sarts able meet slack slack time indicative fact time remaining time task infeasible feasibility test perfect heuristic sarts considers task reach goal node node beginning feasible cost iteration edge goal goal distribution cost edge graph cost edge heuristic derived distribution edge cost confidence note need planning cost lemma sarts find execute classified feasible note perfect heuristic argue correctness predictability feasibility test correlated heuristic domain utility test heuristic sarts consist graph sarts sarts test sarts review step facilitate creates successor node system successor node goal cost node calculated euclidean used calculate heuristic heuristic monotonic guaranteed optimal case heuristic substantial pruning frontier node loss valuable reaching cost namely node successor node cost node successor node calculated rule thumb encountered case lookaheads costly also must note helpful shorter path goal cost processing planning planning cost successor node sort node successor node smallest next move process repeated reached termination case graph stuck graph done penalizing cyclic path leaving best path greedy examines neighbor node make next move sarts tested fixed iteration scheduling node traverse whole path planned scheduling traverse edge note capable controlling scheduling time also sensitive remaining time differs node lookahead neighbor node differs stopping criterion sarts terminate scheduling parameter stopping criterion fixed next adjust scheduling remaining time traverse edge partially planned path scheduling sarts traverse edge scheduling phase differs parameter stopping criterion adjusted remaining time summarizes term shekhar form well fact expands fewer node node cost cost controlling planning tradeoff cost address minimized response time show much fact stopping criterion scheduling well cost sarts reveal parameter remaining time fixed insensitive progress meeting comparing sarts ratio task demonstrate sarts fixed neighbor node explores promising frontier node lead shorter path term cost incurs planning cost perpossible concentrate fraction complied task mainly done path traversal traversal phase consequence singleedge traversal progress goal drawback traversal take full planning thus lead increased planning demonstrates paring sarts sarts well best slack predict many violalions incurred false alarm sarts false alarm prediction sarts caused poorer compliance violation prediction examine infeasibility test sarts indicator violation also examine heuristic predictability sarts test prediction test note true positivity signify dependability predictive hand represents explore heuristic predicting violation grid grid node arranged form rectangular grid node neighboring node edge width grid node node periphery grid grid goal pair examined goal node node compliance sarts four heuristic examined manhattan used estimator remaining goal grid used twice manhattan inadmissible heuristic euclidean used underestimator fourth heuristic also inadmissible estimator manhattan introduced subtracted time plot heuristic labeled perfect manhattan heuristic admissible euclidean inadmissible double manhattan noisy expect underestimating heuristic fact true planning cost incurred exceed underestimator estimator remaining expect high degree predictability overestimator true planning cost incurred thus predicted meet heuristic noisy heuristic estimator prediction compliance sarts show heading heading data sarts euclideandistance heuristic heuristic good infeasibility test predicted infeasible fact miss data sarts heuristic pessimistic kind heuristic missing highly undesirable note predicted miss fact data sarts heuristic high prediction note deviation predicting violation cost iteration incurred sarts stopping criterion examining predicted sarts manhattan heuristic revealed missed time unit case heuristic produced highest percentage case signifies degree compliance heuristic data sarts heuristic heuristic produced prediction compliance even demonstrate heuristic dependability sarts perfect heuristic outperforms heuristic compliance sarts demonstrates heuristic predictability sarts hamidzadeh shekhar overestimating heuristic enables sarts predictability perfect admissible heuristic perfect heuristic reach predictability sooner admissible heuristic compliance sarts conclusion dependable strive meet task also test violation ahead time planning time well cost meet sarts allocates time planning strictness slack selfadjustment planning time feature sarts loose slack behaves like find high tight slack behaves like greedy hope planning time sarts also infeasibility monitored continuously predict violation ahead time show sarts compliance wellknown infeasibility test reasonably accurate effectiveness heuristic used
