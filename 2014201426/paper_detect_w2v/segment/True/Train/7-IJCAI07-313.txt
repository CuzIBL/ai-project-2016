improving planning relies hand promising factored planning domain partitioned subdomains little work couple planning practical experimentation dtreeplan generic factored planning tree efficiently domain progressively describing presenting prototype promising major help enrich picture factored planning improving planning relies hand particularly interested composite system planning network investigate promising factored planning domain partitioned subdomains little factored planning planning planning abstracted planning progressively refining plan going decreasingly domain backtracking plan refined knoblock factored planning take path simultaneously plan subdomains trying merge amir engelhardt brafman domshlak avoid backtracking cost computing plan subdomains potentially form planning make factorisation localised planning lansky getoor domain explicit hierarchical tree dtree darwiche junction tree domain factorisation resulting dtreeplan generic factored planning backtracking benefit planner also planning satisfiability kautz selman zchaff planner moskewicz explore mostly aiming backtracking form caching automated factorisation planning show encouraging dtreeplan lead promising background factored planning generic dtreeplan introduced followed conclusion background planning planning strip operator goal literal part extends precondition restricted form rigid optimality criterion plan remainder window someone want throw ball room breaking window open true false broken true false ball inside outside open close throw init goal window factored planning factored planning raise plan factorisation factoring process partitioning domain possibly overlapping subdomains planning abstracted merge subdomains need cluster domain subdomain appearing cluster made real cluster plus possibly abstracted cluster consecutive hole plan window cluster make open cluster close window mainly interested composite system controllable interacting representing communication possibly indirect organised network topology lead suggestion factoring block seen cluster causal graph intuitively appealing prone depend tell block organised tree network factored planner factored planner partplan amir engelhardt brafman domshlak tree distributed node plan recursively computing plan hole subtrees node planning node mergingsubplans inserting node incomplete plan produced node many turn infeasible possibility fill hole give dynamic planning leaf root plan form backtracking restarting plan plan even tree abstracted many subplans disappear merged potentially huge memory practicability established planner inside node know anything node help prune infeasible plan plan hole filled plannersextendthe plan subdomains time leading optimality guaranteeing plan brafman domshlak planner planning procedure arbitrary ordering cluster supposed planning process planning cluster root cluster planning real plus replacing appearing real necessarily subset superset cluster goal goal cluster goal fill hole passed projected subdomain cluster tree plan seen tree node plan hole completed child subplans dependingon pass hole time process breadthfirst traversal plan completed child failure signified parent window easy throw cluster quickly plan throw preceded open true followed open false omitting subdomains taking hole plan made real satisfying hole filled fillholes call planforhole plan exhaustion subplans returned fillholes attached hole child tree abstractreplan refillholes used fillholes backtrack make look next plan subplans filling hole loop stop plan subplans plan planner abstractplan hole passed isleaf planforhole repeat planforhole failure failure fillholes failure fillholes list hole isempty failure failure failure failure fillholes abstractreplan hole passed isleaf planforhole refillholes failure planforhole failure failure fillholes refillholes list hole isempty failure refillholes isempty failure fillholes cluster visited cluster past cluster ordering cluster make visiting cluster specifies subdomains ordering dynamic cluster visit next depend hole fill fixed ordering work choosing ordering analysing depend mentioned subdomains regroup real precondition linked cluster domain ordering resulting subdomains consecutive subdomains many view early backtracking quickly identifying unsatisfiable sort cluster tree dtree darwiche recursively domain subdomains leaf cluster dtree subtrees seen neighbourhood good ordering leaf dtrees correspond branch graph robertson seymour used darwiche recursive bayesian network family huang darwiche dtrees used recursive clause dtree full binary tree leaf correspondto cluster planning cluster leaf node annotated subtrees child dtree node visited left throw close open view dtree view view dtree tool darwiche hopkins employ hypergraph partitioning hypergraph constructed node hyperedge connecting node hypergraphis recursively partitioned balanced part attempting minimise edge resulting dtree relatively cutsets subtrees dtree specifies recursive domain wish subdomain accomplished simply regarding node dtree subdomain containing leaf node clustering process dtree clustering dtree node treated subdomains take also alternative scheme cluster correspond planning dtree built cluster leaf reordering subtrees explained dtree specifies neighbourhood relationship leaf child dtree node visited left flipping child node ordering subdomains decide child employ heuristic inspired take list appearing goal rearranges dtree cluster able modify visited leftmost leaf process repeated list appearing cluster next best cluster leaf mean close node subtree leaf throw leftmost appearing throw precondition used open subtree positionits best leaf recursive process happening traversing tree rearranging reorder reorder goalv goal reorderrec goalvars reorderrec list isleaf nsharedvars nsharedvars swap leftchild rightchild reorderrec leftchild reorderrec dtreeplan visiting leaf achieved dtree traversal omit redtreeplan refillholes dtreeplan plantree leaf unfilled hole hole ordered list note traversal neither breadthfirst traversal hole refined time neighbourhood dtreeplan used experimentation informativeregardingfuture cluster type view evaluatingtheir relativeefficiency take view cluster changing cluster violating frame axiom precondition modify amir engelhardt dtreeplan dtreeplan hole passed parent isleaf planforhole failure failure fillholes failure failure failure fillholes fillholes list hole failure failure fillholes failure failure failure fillholes irtual abstracted cluster removed mapping real cluster cluster note hole type requiring cluster cluster help planning process going want keep much informative help avoid infeasible hole also brings closer central planning tree traversal make domain factorisation turn compromisebetween refining hole time preferably neighbourhood note strictly classical planner tree traversal also hole consecutive former seems promising reduce backtracking latter caching backtracking node asked time subproblem good avoid replanning cache subproblems keep track subproblems adopted mixing idea leaf node stored plan encountered subproblem node stored encountered subproblems unsolvable latter informative thus help reducespace note caching plan lead sharing partplan wouldcompute subplans memory planning satisfiability planner introduced kautz selman encode planning propositional adopt dtreeplan publicly zchaff moskewicz planner planner make give incomplete plan subdomain time step encoded locally removing frame axiom cluster suffices time time past cluster requiring replacing match controlling plan planner increasingly plan optimality partplan optimality need backtracking partially hole plan dtreeplan also iterates subplan linear lead huge numberof clause plan aimed evaluating dtreeplan amir engelhardt robot want upgrade battery charger need charge battery achieving goal variant changing battery line xbatyline computation time averaged clustering dtreeplan dtreeplan improvementfrom incrnact incremental incrmaxh incrnact incremental caching incrmaxh plan caching reorder used four tree visited cluster switch charge dtree incrnact incrmaxh caching clearly planning process hole gain main dtree vanilla dtreeplan made slower incrnact incrmaxh aware reorder procedure dtree prof planning parameter decided mentioned conducted dtreeplan parameter column planning time clustering clustering type last column show central planning zchaff used factorisation column battery segment clustering type batt planning parameter domain parameter clustering beginning clustering scale centralised even planning time unimpressiveon confirms good mean prune infeasible plan also show unknown correspond duration minute failure memory exhaustion probablylinked caching work dtreeplan factored planning backtracking planning show central planning cluster visited improvementsis rearranging dtree dtree ordering subtrees specifies neighbourhood leaf precise ordering particularly ordering crude heuristic avenue make planning rearrange dtree helmert brafman domshlak causal graph planning seems good also plan suggest child node left recomputing cluster mainly depend cluster dtreeplan framework caching planner used replaced alternative feasible plan hole searching replan stored plan also replace generic planner satplan maxplan final mention plan duration node dtree child node plan planning child restricted precisely else modify resulting plan give node process even recursively leaf root heuristic also plan blindly plan leaf goal case conclusion dtreeplan generic factored planning aiming avoiding dynamic dtree factorisation preliminary show scale planning benefit major work also illustrates connection factored planning goal specified temporal distributing plan acknowledgment work part supercom nicta nicta funded australian government backing australia initiative part australian council
