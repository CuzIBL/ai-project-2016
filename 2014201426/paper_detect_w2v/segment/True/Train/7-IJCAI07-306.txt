even propositional strip planning hard many many used benchmark easy spite hard planner encoding specification formalism strip hide need exploited investigate automatic transformation reduce accidental main tool identify weaker safe sense abstracted refined concrete time case also show kind reformulations opportunity safe planning even restricted case propositional strip formalism hard fact pspace bylander planning hard fact many benchmark domain used planning system plan procedure time helmert spite easy planner planner domain many planner scale fairly well determines difficulty planning planner intrinsic size encoding discrepancy essential accidental difficulty formulated tool adopted automated investigate transformation aimed accidental planning mainly abstracting away part long history planning reduce exponentially knoblock also potentially backstrom jonsson abstracting decomposing factoring planning attracted renewed sebastia domshlak brafman safe abstracted guaranteed refinable concrete refinement operation worst case plan exponentially shortest plan also show difficult make safe impossible suggest automatically reformulate make amenable restriction omitted request planner must encoding planning specification formalism propositional strip like done also alternative propositional jonsson backstrom edelkamp helmert helmert assigns finite domain postcondition assignment postcondition assignment mentioned postcondition indicated mentioned keep ality accidental overhead caused inadequate tool difficult causal graph logistics domain transition graph edge annotated precondition expressively propositional strip constructed strip kind namely atom property exactly atom true reachable automatically extracting exactly strip encoding edelkamp helmert scholz helmert also make kind graph summarise structural property planning causal graph planning directed graph node correspond propositional edge precondition causal graph bidirected edge pair actionthat simultaneously domain transition graph directed graph node correspond domain edge correspond graph edge fromif precondition postcondition illustrate transportation package unloaded truck move freely truck truck truck package truck note domain correspond atom strip encoding causal graph domain transition graph idea hierarchical planning abstracted ignored plan next step find plan bridge step plan filling missing plan fragment bridge consecutive step plan done recursively bridging plan successively refined ideal hierarchy refined next inserting fill changing downward refinement property bacchus yang property hold planner refinable concrete forcing backtracking knoblock procedure automatically generating hierarchy satisfying weaker property ordered monotonicity hierarchy plan refined concrete plan solvable knoblock procedure construct graph atom planning causal graph computes tree strongly graph topologically sorted yield hierarchy procedure equally resulting hierarchy transportation resulting hierarchy considers package next package well concrete truck refinement subproblem refining plan hierarchy solvable clearly plan refined case transportation truck representing truck whatever changing refine plan moving package inserting move truck downward refinement property ensured abstracting sufficient solvability relevant refinementproblemsis idea termed safe introduced helmert fast downward formalise safe free domain transition graph subgraph containing edge postcondition free reachable path free helmert safe post init post goal post binary counter planning causal graph free free form strongly free reachable unnecessarily downward refinement ensured sufficient refine plan free reachable take consequence plan externally precondition externally caused postcondition plus externally strongly free free reachable externally caused goal free reachable externally abstracting safe preserve downward refinement checking safe refining step plan size domain corresponds atom make straightforwardly transfered exponentially computational cost domain transition graph illustrate weaker make planning involving binary counter increased step form counter show causal graph free free strongly externally precondition goal externally caused free reachable safely abstractable abstracting away make transition domain free thus also safely abstractable also note causal graph form strongly thus knoblock procedure yield comprising causal graph summarises causal dependency planning recall edge free hand independently reformulation planning encoded specification formalism strip widely recognised suited planning system rely causal domain transition graph structural feature suffer encoding sensitivity ideally planner able accept reformulate suited planner need sometimes reformulation exploiting well used knoblock demonstrate construction hierarchy show encoding used knoblock represents disc disc moving disc show encoding domain introduced bonet geffner disc noting beneath disc atom disc clear nothing move disc encoding sense capture essential differ property show causal graph strip causal graph knoblock strongly atom relating disc forming tree thus hierarchy causal graph bonet geffner thus knoblock procedure find hierarchy neither safe safe atom disc disc medium medium medium medium medium medium atom disc disc medium disc clear move clear clear clear clear strip encoding coupling fewer mutual dependency bonet geffner strip rephrased automatically identical knoblock good atom clear encoding actually atom abbreviation equivalence simply restatement exactly kind used construct clear medium thus clear true exactly medium hold consequently causal graph formulationsof causal graph restricted transportation latter precondition substitution eliminate clear atom precondition atom precondition goal removed entirely enoughto make hierarchically abstractable invent abbreviating substitute precondition relevant medium disc medium medium eliminating atom exactly operation automated give rise mutually exclusive substitution chosing arrive easy automating abbreviating atom even difficult also substitution time precondition exponential compile away composition transportation restriction truck package time naturally encoded truck empty truck truck package causal graph truck safely abstractable representing package dependent truck abstracted nicely decompose truck eliminated reformulation fact empty truck truck truck remove coupling coupling truck transient goal move package leave truck plan step loading unloading goal recall truck abstracted away plan plan whole truck empty truck hold permanently visited plan uninteresting sense also plan completes plan undoes thus plan replaced compound postconditions affecting solvability break coupling precondition hold inconsistent disjoint postcondition inconsistent disjoint goal precondition consistent commutative replacing composite executable excluding safe preserve existence safe hold involving pair composite remove causal coupling simultaneous causal dependency changing preconditionon dependency nothing gained collapsing also junghanns schaeffer sokoban puzzle form call tunnel macro correspond move tunnel productive also criterion uninteresting thought defining tunnel planning tunnel macro sokoban serve reduce restricted coupling likewise botea show macro planning case heuristic interestingly removing macro haslum jonsson procedure generating macro adaptable well domain simplification gripper logistics movie mystery none mprime none grid minor atom blocksworld minor atom elevator strip freecell none depot minor atom driverlog minor atom rover atom satellite airport atom pipesworld none promela none varied atom simplification planning domain conclusion factoring powerful tool accidental caused encoding planning specification formalism strip applicability widened formulating weaker safe applying reformulations make amenable reduction haslum jonsson reachability relevance limitation safe size composite reformulation restricted atom elimination replacing composition turn iterating simplification made spite restriction operation timeconsuming disabled domain also case encoding suited simplification thus system automatic summarises best achieved attempting simplify collection planning domain comprising domain planning competition many encode many marked repeated remove refinement carried logistics elevator domain sense also helmert safe remaining domain simplification roughly reduction size subjective part remains grid domain irrelevant removed size significantly viewed minor simplification simplification affect planner complicated depot minor simplification drastically improves heuristic resulting time remaining open note failure domain suite fail simplify blocksworld schedule domain effectively deal domain make little blocksworld domain potentially interacts difficult decompose actually need much made causal graph analyse planning noted coarse weaker yield fine grained view take many actually relevant implementationworks grounded propositional make step computationally applying domain construct also noted transformation automatic hard learning play role acknowledgement hector geffner botea malte helmert ijcai reviewer contributed idea advice helpfull comment draft nicta funded australian governements backing australia initiative part australian council
